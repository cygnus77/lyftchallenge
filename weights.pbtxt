node {
  name: "input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 576
        }
        dim {
          size: 800
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "conv1_pad/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv1_pad/Pad"
  op: "Pad"
  input: "input_1"
  input: "conv1_pad/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1380131095647812
      }
    }
  }
}
node {
  name: "conv1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1380131095647812
      }
    }
  }
}
node {
  name: "conv1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7127353
    }
  }
}
node {
  name: "conv1/random_uniform/sub"
  op: "Sub"
  input: "conv1/random_uniform/max"
  input: "conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/random_uniform/mul"
  op: "Mul"
  input: "conv1/random_uniform/RandomUniform"
  input: "conv1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/random_uniform"
  op: "Add"
  input: "conv1/random_uniform/mul"
  input: "conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/kernel/Assign"
  op: "Assign"
  input: "conv1/kernel"
  input: "conv1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/kernel/read"
  op: "Identity"
  input: "conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
}
node {
  name: "conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/convolution"
  op: "Conv2D"
  input: "conv1_pad/Pad"
  input: "conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_bn/gamma/Assign"
  op: "Assign"
  input: "conv1_bn/gamma"
  input: "conv1_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/gamma/read"
  op: "Identity"
  input: "conv1_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/gamma"
      }
    }
  }
}
node {
  name: "conv1_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_bn/beta/Assign"
  op: "Assign"
  input: "conv1_bn/beta"
  input: "conv1_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/beta/read"
  op: "Identity"
  input: "conv1_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/beta"
      }
    }
  }
}
node {
  name: "conv1_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv1_bn/moving_mean"
  input: "conv1_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/moving_mean/read"
  op: "Identity"
  input: "conv1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv1_bn/moving_variance"
  input: "conv1_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/moving_variance/read"
  op: "Identity"
  input: "conv1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv1_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "conv1_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "conv1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "conv1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/init"
  op: "NoOp"
  input: "^conv1/kernel/Assign"
  input: "^conv1_bn/beta/Assign"
  input: "^conv1_bn/gamma/Assign"
  input: "^conv1_bn/moving_mean/Assign"
  input: "^conv1_bn/moving_variance/Assign"
}
node {
  name: "conv1_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv1_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv1_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv1/convolution"
  input: "conv1_bn/gamma/read"
  input: "conv1_bn/beta/read"
  input: "conv1_bn/Const_4"
  input: "conv1_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/Shape"
  op: "Shape"
  input: "conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice"
  op: "StridedSlice"
  input: "conv1_bn/Shape"
  input: "conv1_bn/strided_slice/stack"
  input: "conv1_bn/strided_slice/stack_1"
  input: "conv1_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1_bn/Shape_1"
  op: "Shape"
  input: "conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv1_bn/Shape_1"
  input: "conv1_bn/strided_slice_1/stack"
  input: "conv1_bn/strided_slice_1/stack_1"
  input: "conv1_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1_bn/Shape_2"
  op: "Shape"
  input: "conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv1_bn/Shape_2"
  input: "conv1_bn/strided_slice_2/stack"
  input: "conv1_bn/strided_slice_2/stack_1"
  input: "conv1_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1_bn/Rank/packed"
  op: "Pack"
  input: "conv1_bn/strided_slice"
  input: "conv1_bn/strided_slice_1"
  input: "conv1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/range"
  op: "Range"
  input: "conv1_bn/range/start"
  input: "conv1_bn/Rank"
  input: "conv1_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1_bn/Prod/input"
  op: "Pack"
  input: "conv1_bn/strided_slice"
  input: "conv1_bn/strided_slice_1"
  input: "conv1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1_bn/Prod"
  op: "Prod"
  input: "conv1_bn/Prod/input"
  input: "conv1_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/Cast"
  op: "Cast"
  input: "conv1_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv1_bn/sub"
  op: "Sub"
  input: "conv1_bn/Cast"
  input: "conv1_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/truediv"
  op: "RealDiv"
  input: "conv1_bn/Cast"
  input: "conv1_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/mul"
  op: "Mul"
  input: "conv1_bn/FusedBatchNorm:2"
  input: "conv1_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv1_bn/moving_mean/biased"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv1_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv1_bn/moving_mean/local_step"
  input: "conv1_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv1_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub"
  op: "Sub"
  input: "conv1_bn/moving_mean/biased/read"
  input: "conv1_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/mul"
  op: "Mul"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub"
  input: "conv1_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/conv1_bn/moving_mean"
  op: "AssignSub"
  input: "conv1_bn/moving_mean/biased"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv1_bn/moving_mean/local_step"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/read"
  op: "Identity"
  input: "conv1_bn/moving_mean/biased"
  input: "^conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/AssignAdd"
  input: "^conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/conv1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/AssignAdd"
  input: "^conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/conv1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_1/x"
  input: "conv1_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv1_bn/moving_mean/local_step"
  input: "^conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/AssignAdd"
  input: "^conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/conv1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_1"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/AssignAdd"
  input: "^conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/conv1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_2/x"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/read"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv1_bn/moving_mean/read"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv1_bn/moving_mean"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv1_bn/moving_variance/biased"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv1_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv1_bn/moving_variance/local_step"
  input: "conv1_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv1_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub"
  op: "Sub"
  input: "conv1_bn/moving_variance/biased/read"
  input: "conv1_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/mul"
  op: "Mul"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub"
  input: "conv1_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/conv1_bn/moving_variance"
  op: "AssignSub"
  input: "conv1_bn/moving_variance/biased"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv1_bn/moving_variance/local_step"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/read"
  op: "Identity"
  input: "conv1_bn/moving_variance/biased"
  input: "^conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/AssignAdd"
  input: "^conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/conv1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/AssignAdd"
  input: "^conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/conv1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_1/x"
  input: "conv1_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv1_bn/moving_variance/local_step"
  input: "^conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/AssignAdd"
  input: "^conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/conv1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_1"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/AssignAdd"
  input: "^conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/conv1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_2/x"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/read"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv1_bn/moving_variance/read"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv1_bn/moving_variance"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/keras_learning_phase/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "conv1_bn/keras_learning_phase"
  op: "PlaceholderWithDefault"
  input: "conv1_bn/keras_learning_phase/input"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "conv1_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv1_bn/cond/switch_t"
  op: "Identity"
  input: "conv1_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv1_bn/cond/switch_f"
  op: "Identity"
  input: "conv1_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv1_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv1_bn/cond/Switch_1"
  op: "Switch"
  input: "conv1_bn/FusedBatchNorm"
  input: "conv1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv1_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv1_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv1_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv1_bn/cond/batchnorm/add/Switch"
  input: "conv1_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv1_bn/moving_variance/read"
  input: "conv1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv1_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv1_bn/cond/batchnorm/Rsqrt"
  input: "conv1_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv1_bn/gamma/read"
  input: "conv1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/gamma"
      }
    }
  }
}
node {
  name: "conv1_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv1_bn/cond/batchnorm/mul_1/Switch"
  input: "conv1_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv1/convolution"
  input: "conv1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/convolution"
      }
    }
  }
}
node {
  name: "conv1_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv1_bn/cond/batchnorm/mul_2/Switch"
  input: "conv1_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv1_bn/moving_mean/read"
  input: "conv1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv1_bn/cond/batchnorm/sub/Switch"
  input: "conv1_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv1_bn/beta/read"
  input: "conv1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/beta"
      }
    }
  }
}
node {
  name: "conv1_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv1_bn/cond/batchnorm/mul_1"
  input: "conv1_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/cond/Merge"
  op: "Merge"
  input: "conv1_bn/cond/batchnorm/add_1"
  input: "conv1_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_relu/Relu"
  op: "Relu"
  input: "conv1_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv1_relu/Minimum"
  op: "Minimum"
  input: "conv1_relu/Relu"
  input: "conv1_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_1/Pad"
  op: "Pad"
  input: "conv1_relu/Minimum"
  input: "conv_pad_1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4727597
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_1/random_uniform/max"
  input: "conv_dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_1/random_uniform/RandomUniform"
  input: "conv_dw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1/random_uniform"
  op: "Add"
  input: "conv_dw_1/random_uniform/mul"
  input: "conv_dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_1/depthwise_kernel"
  input: "conv_dw_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_1/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_1/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_1/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_1/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_1/Pad"
  input: "conv_dw_1/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_1_bn/gamma"
  input: "conv_dw_1_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_1_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_1_bn/beta"
  input: "conv_dw_1_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/beta/read"
  op: "Identity"
  input: "conv_dw_1_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_1_bn/moving_mean"
  input: "conv_dw_1_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_1_bn/moving_variance"
  input: "conv_dw_1_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_1/depthwise"
  input: "conv_dw_1_bn/gamma/read"
  input: "conv_dw_1_bn/beta/read"
  input: "conv_dw_1_bn/Const_4"
  input: "conv_dw_1_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/Shape"
  op: "Shape"
  input: "conv_dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_1_bn/Shape"
  input: "conv_dw_1_bn/strided_slice/stack"
  input: "conv_dw_1_bn/strided_slice/stack_1"
  input: "conv_dw_1_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_1_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_1_bn/Shape_1"
  input: "conv_dw_1_bn/strided_slice_1/stack"
  input: "conv_dw_1_bn/strided_slice_1/stack_1"
  input: "conv_dw_1_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_1_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_1_bn/Shape_2"
  input: "conv_dw_1_bn/strided_slice_2/stack"
  input: "conv_dw_1_bn/strided_slice_2/stack_1"
  input: "conv_dw_1_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_1_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_1_bn/strided_slice"
  input: "conv_dw_1_bn/strided_slice_1"
  input: "conv_dw_1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_1_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/range"
  op: "Range"
  input: "conv_dw_1_bn/range/start"
  input: "conv_dw_1_bn/Rank"
  input: "conv_dw_1_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_1_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_1_bn/strided_slice"
  input: "conv_dw_1_bn/strided_slice_1"
  input: "conv_dw_1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_1_bn/Prod"
  op: "Prod"
  input: "conv_dw_1_bn/Prod/input"
  input: "conv_dw_1_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/Cast"
  op: "Cast"
  input: "conv_dw_1_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_1_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/sub"
  op: "Sub"
  input: "conv_dw_1_bn/Cast"
  input: "conv_dw_1_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_1_bn/Cast"
  input: "conv_dw_1_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/mul"
  op: "Mul"
  input: "conv_dw_1_bn/FusedBatchNorm:2"
  input: "conv_dw_1_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_1_bn/moving_mean/biased"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_1_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_1_bn/moving_mean/local_step"
  input: "conv_dw_1_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_1_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_1_bn/moving_mean/biased/read"
  input: "conv_dw_1_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub"
  input: "conv_dw_1_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/conv_dw_1_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_1_bn/moving_mean/biased"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_1_bn/moving_mean/local_step"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_1_bn/moving_mean/biased"
  input: "^conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/AssignAdd"
  input: "^conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/conv_dw_1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/AssignAdd"
  input: "^conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/conv_dw_1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_1/x"
  input: "conv_dw_1_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_1_bn/moving_mean/local_step"
  input: "^conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/AssignAdd"
  input: "^conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/conv_dw_1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_1"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/AssignAdd"
  input: "^conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/conv_dw_1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_2/x"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/read"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_1_bn/moving_mean/read"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_1_bn/moving_mean"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_1_bn/moving_variance/biased"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_1_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_1_bn/moving_variance/local_step"
  input: "conv_dw_1_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_1_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_1_bn/moving_variance/biased/read"
  input: "conv_dw_1_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub"
  input: "conv_dw_1_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/conv_dw_1_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_1_bn/moving_variance/biased"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_1_bn/moving_variance/local_step"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_1_bn/moving_variance/biased"
  input: "^conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/AssignAdd"
  input: "^conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/conv_dw_1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/AssignAdd"
  input: "^conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/conv_dw_1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_1/x"
  input: "conv_dw_1_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_1_bn/moving_variance/local_step"
  input: "^conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/AssignAdd"
  input: "^conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/conv_dw_1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_1"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/AssignAdd"
  input: "^conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/conv_dw_1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_2/x"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/read"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_1_bn/moving_variance/read"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_1_bn/moving_variance"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_1_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_1_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_1_bn/FusedBatchNorm"
  input: "conv_dw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_dw_1_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_dw_1_bn/cond/batchnorm/add/Switch"
  input: "conv_dw_1_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_dw_1_bn/moving_variance/read"
  input: "conv_dw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_dw_1_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_dw_1_bn/cond/batchnorm/Rsqrt"
  input: "conv_dw_1_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_dw_1_bn/gamma/read"
  input: "conv_dw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_dw_1_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_dw_1_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_dw_1/depthwise"
  input: "conv_dw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_dw_1_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_dw_1_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_dw_1_bn/moving_mean/read"
  input: "conv_dw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_dw_1_bn/cond/batchnorm/sub/Switch"
  input: "conv_dw_1_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_dw_1_bn/beta/read"
  input: "conv_dw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_dw_1_bn/cond/batchnorm/mul_1"
  input: "conv_dw_1_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_1_bn/cond/batchnorm/add_1"
  input: "conv_dw_1_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_relu/Relu"
  op: "Relu"
  input: "conv_dw_1_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_dw_1_relu/Minimum"
  op: "Minimum"
  input: "conv_dw_1_relu/Relu"
  input: "conv_dw_1_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4324624
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_1/random_uniform/max"
  input: "conv_pw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_1/random_uniform/RandomUniform"
  input: "conv_pw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1/random_uniform"
  op: "Add"
  input: "conv_pw_1/random_uniform/mul"
  input: "conv_pw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1/kernel/Assign"
  op: "Assign"
  input: "conv_pw_1/kernel"
  input: "conv_pw_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1/kernel/read"
  op: "Identity"
  input: "conv_pw_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_1/convolution"
  op: "Conv2D"
  input: "conv_dw_1_relu/Minimum"
  input: "conv_pw_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_1_bn/gamma"
  input: "conv_pw_1_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_1_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_1_bn/beta"
  input: "conv_pw_1_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/beta/read"
  op: "Identity"
  input: "conv_pw_1_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_1_bn/moving_mean"
  input: "conv_pw_1_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_1_bn/moving_variance"
  input: "conv_pw_1_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_1/convolution"
  input: "conv_pw_1_bn/gamma/read"
  input: "conv_pw_1_bn/beta/read"
  input: "conv_pw_1_bn/Const_4"
  input: "conv_pw_1_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/Shape"
  op: "Shape"
  input: "conv_pw_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_1_bn/Shape"
  input: "conv_pw_1_bn/strided_slice/stack"
  input: "conv_pw_1_bn/strided_slice/stack_1"
  input: "conv_pw_1_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_1_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_1_bn/Shape_1"
  input: "conv_pw_1_bn/strided_slice_1/stack"
  input: "conv_pw_1_bn/strided_slice_1/stack_1"
  input: "conv_pw_1_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_1_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_1_bn/Shape_2"
  input: "conv_pw_1_bn/strided_slice_2/stack"
  input: "conv_pw_1_bn/strided_slice_2/stack_1"
  input: "conv_pw_1_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_1_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_1_bn/strided_slice"
  input: "conv_pw_1_bn/strided_slice_1"
  input: "conv_pw_1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_1_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/range"
  op: "Range"
  input: "conv_pw_1_bn/range/start"
  input: "conv_pw_1_bn/Rank"
  input: "conv_pw_1_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_1_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_1_bn/strided_slice"
  input: "conv_pw_1_bn/strided_slice_1"
  input: "conv_pw_1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_1_bn/Prod"
  op: "Prod"
  input: "conv_pw_1_bn/Prod/input"
  input: "conv_pw_1_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/Cast"
  op: "Cast"
  input: "conv_pw_1_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_1_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/sub"
  op: "Sub"
  input: "conv_pw_1_bn/Cast"
  input: "conv_pw_1_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_1_bn/Cast"
  input: "conv_pw_1_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/mul"
  op: "Mul"
  input: "conv_pw_1_bn/FusedBatchNorm:2"
  input: "conv_pw_1_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_1_bn/moving_mean/biased"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_1_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_1_bn/moving_mean/local_step"
  input: "conv_pw_1_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_1_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_1_bn/moving_mean/biased/read"
  input: "conv_pw_1_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub"
  input: "conv_pw_1_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/conv_pw_1_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_1_bn/moving_mean/biased"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_1_bn/moving_mean/local_step"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_1_bn/moving_mean/biased"
  input: "^conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/AssignAdd"
  input: "^conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/conv_pw_1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/AssignAdd"
  input: "^conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/conv_pw_1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_1/x"
  input: "conv_pw_1_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_1_bn/moving_mean/local_step"
  input: "^conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/AssignAdd"
  input: "^conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/conv_pw_1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_1"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/AssignAdd"
  input: "^conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/conv_pw_1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_2/x"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/read"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_1_bn/moving_mean/read"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_1_bn/moving_mean"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_1_bn/moving_variance/biased"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_1_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_1_bn/moving_variance/local_step"
  input: "conv_pw_1_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_1_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_1_bn/moving_variance/biased/read"
  input: "conv_pw_1_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub"
  input: "conv_pw_1_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/conv_pw_1_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_1_bn/moving_variance/biased"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_1_bn/moving_variance/local_step"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_1_bn/moving_variance/biased"
  input: "^conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/AssignAdd"
  input: "^conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/conv_pw_1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/AssignAdd"
  input: "^conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/conv_pw_1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_1/x"
  input: "conv_pw_1_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_1_bn/moving_variance/local_step"
  input: "^conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/AssignAdd"
  input: "^conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/conv_pw_1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_1"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/AssignAdd"
  input: "^conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/conv_pw_1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_2/x"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/read"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_1_bn/moving_variance/read"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_1_bn/moving_variance"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_1_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_1_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_1_bn/FusedBatchNorm"
  input: "conv_pw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_pw_1_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_pw_1_bn/cond/batchnorm/add/Switch"
  input: "conv_pw_1_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_pw_1_bn/moving_variance/read"
  input: "conv_pw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_pw_1_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_pw_1_bn/cond/batchnorm/Rsqrt"
  input: "conv_pw_1_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_pw_1_bn/gamma/read"
  input: "conv_pw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_pw_1_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_pw_1_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_pw_1/convolution"
  input: "conv_pw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_pw_1_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_pw_1_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_pw_1_bn/moving_mean/read"
  input: "conv_pw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_pw_1_bn/cond/batchnorm/sub/Switch"
  input: "conv_pw_1_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_pw_1_bn/beta/read"
  input: "conv_pw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_pw_1_bn/cond/batchnorm/mul_1"
  input: "conv_pw_1_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_1_bn/cond/batchnorm/add_1"
  input: "conv_pw_1_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_relu/Relu"
  op: "Relu"
  input: "conv_pw_1_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_pw_1_relu/Minimum"
  op: "Minimum"
  input: "conv_pw_1_relu/Relu"
  input: "conv_pw_1_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_2/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_2/Pad"
  op: "Pad"
  input: "conv_pw_1_relu/Minimum"
  input: "conv_pad_2/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4320986
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_2/random_uniform/max"
  input: "conv_dw_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_2/random_uniform/RandomUniform"
  input: "conv_dw_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2/random_uniform"
  op: "Add"
  input: "conv_dw_2/random_uniform/mul"
  input: "conv_dw_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_2/depthwise_kernel"
  input: "conv_dw_2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_2/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_2/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_2/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_2/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_2/Pad"
  input: "conv_dw_2/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_2_bn/gamma"
  input: "conv_dw_2_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_2_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_2_bn/beta"
  input: "conv_dw_2_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/beta/read"
  op: "Identity"
  input: "conv_dw_2_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_2_bn/moving_mean"
  input: "conv_dw_2_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_2_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_2_bn/moving_variance"
  input: "conv_dw_2_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_2_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_2/depthwise"
  input: "conv_dw_2_bn/gamma/read"
  input: "conv_dw_2_bn/beta/read"
  input: "conv_dw_2_bn/Const_4"
  input: "conv_dw_2_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/Shape"
  op: "Shape"
  input: "conv_dw_2/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_2_bn/Shape"
  input: "conv_dw_2_bn/strided_slice/stack"
  input: "conv_dw_2_bn/strided_slice/stack_1"
  input: "conv_dw_2_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_2_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_2/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_2_bn/Shape_1"
  input: "conv_dw_2_bn/strided_slice_1/stack"
  input: "conv_dw_2_bn/strided_slice_1/stack_1"
  input: "conv_dw_2_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_2_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_2/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_2_bn/Shape_2"
  input: "conv_dw_2_bn/strided_slice_2/stack"
  input: "conv_dw_2_bn/strided_slice_2/stack_1"
  input: "conv_dw_2_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_2_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_2_bn/strided_slice"
  input: "conv_dw_2_bn/strided_slice_1"
  input: "conv_dw_2_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_2_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/range"
  op: "Range"
  input: "conv_dw_2_bn/range/start"
  input: "conv_dw_2_bn/Rank"
  input: "conv_dw_2_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_2_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_2_bn/strided_slice"
  input: "conv_dw_2_bn/strided_slice_1"
  input: "conv_dw_2_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_2_bn/Prod"
  op: "Prod"
  input: "conv_dw_2_bn/Prod/input"
  input: "conv_dw_2_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/Cast"
  op: "Cast"
  input: "conv_dw_2_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_2_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/sub"
  op: "Sub"
  input: "conv_dw_2_bn/Cast"
  input: "conv_dw_2_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_2_bn/Cast"
  input: "conv_dw_2_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/mul"
  op: "Mul"
  input: "conv_dw_2_bn/FusedBatchNorm:2"
  input: "conv_dw_2_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_2_bn/moving_mean/biased"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_2_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_2_bn/moving_mean/local_step"
  input: "conv_dw_2_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_2_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_2_bn/moving_mean/biased/read"
  input: "conv_dw_2_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub"
  input: "conv_dw_2_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/conv_dw_2_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_2_bn/moving_mean/biased"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_2_bn/moving_mean/local_step"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_2_bn/moving_mean/biased"
  input: "^conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/AssignAdd"
  input: "^conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/conv_dw_2_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/AssignAdd"
  input: "^conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/conv_dw_2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_1/x"
  input: "conv_dw_2_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_2_bn/moving_mean/local_step"
  input: "^conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/AssignAdd"
  input: "^conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/conv_dw_2_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_1"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/AssignAdd"
  input: "^conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/conv_dw_2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_2/x"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/read"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_2_bn/moving_mean/read"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_2_bn/moving_mean"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_2_bn/moving_variance/biased"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_2_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_2_bn/moving_variance/local_step"
  input: "conv_dw_2_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_2_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_2_bn/moving_variance/biased/read"
  input: "conv_dw_2_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub"
  input: "conv_dw_2_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/conv_dw_2_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_2_bn/moving_variance/biased"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_2_bn/moving_variance/local_step"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_2_bn/moving_variance/biased"
  input: "^conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/AssignAdd"
  input: "^conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/conv_dw_2_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/AssignAdd"
  input: "^conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/conv_dw_2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_1/x"
  input: "conv_dw_2_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_2_bn/moving_variance/local_step"
  input: "^conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/AssignAdd"
  input: "^conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/conv_dw_2_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_1"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/AssignAdd"
  input: "^conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/conv_dw_2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_2/x"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/read"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_2_bn/moving_variance/read"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_2_bn/moving_variance"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_2_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_2_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_2_bn/FusedBatchNorm"
  input: "conv_dw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_dw_2_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_dw_2_bn/cond/batchnorm/add/Switch"
  input: "conv_dw_2_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_dw_2_bn/moving_variance/read"
  input: "conv_dw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_dw_2_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_dw_2_bn/cond/batchnorm/Rsqrt"
  input: "conv_dw_2_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_dw_2_bn/gamma/read"
  input: "conv_dw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_dw_2_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_dw_2_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_dw_2/depthwise"
  input: "conv_dw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_dw_2_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_dw_2_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_dw_2_bn/moving_mean/read"
  input: "conv_dw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_dw_2_bn/cond/batchnorm/sub/Switch"
  input: "conv_dw_2_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_dw_2_bn/beta/read"
  input: "conv_dw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_dw_2_bn/cond/batchnorm/mul_1"
  input: "conv_dw_2_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_2_bn/cond/batchnorm/add_1"
  input: "conv_dw_2_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_relu/Relu"
  op: "Relu"
  input: "conv_dw_2_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_dw_2_relu/Minimum"
  op: "Minimum"
  input: "conv_dw_2_relu/Relu"
  input: "conv_dw_2_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7818310
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_2/random_uniform/max"
  input: "conv_pw_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_2/random_uniform/RandomUniform"
  input: "conv_pw_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2/random_uniform"
  op: "Add"
  input: "conv_pw_2/random_uniform/mul"
  input: "conv_pw_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2/kernel/Assign"
  op: "Assign"
  input: "conv_pw_2/kernel"
  input: "conv_pw_2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2/kernel/read"
  op: "Identity"
  input: "conv_pw_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_2/convolution"
  op: "Conv2D"
  input: "conv_dw_2_relu/Minimum"
  input: "conv_pw_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_2_bn/gamma"
  input: "conv_pw_2_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_2_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_2_bn/beta"
  input: "conv_pw_2_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/beta/read"
  op: "Identity"
  input: "conv_pw_2_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_2_bn/moving_mean"
  input: "conv_pw_2_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_2_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_2_bn/moving_variance"
  input: "conv_pw_2_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_2_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_2/convolution"
  input: "conv_pw_2_bn/gamma/read"
  input: "conv_pw_2_bn/beta/read"
  input: "conv_pw_2_bn/Const_4"
  input: "conv_pw_2_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/Shape"
  op: "Shape"
  input: "conv_pw_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_2_bn/Shape"
  input: "conv_pw_2_bn/strided_slice/stack"
  input: "conv_pw_2_bn/strided_slice/stack_1"
  input: "conv_pw_2_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_2_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_2_bn/Shape_1"
  input: "conv_pw_2_bn/strided_slice_1/stack"
  input: "conv_pw_2_bn/strided_slice_1/stack_1"
  input: "conv_pw_2_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_2_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_2_bn/Shape_2"
  input: "conv_pw_2_bn/strided_slice_2/stack"
  input: "conv_pw_2_bn/strided_slice_2/stack_1"
  input: "conv_pw_2_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_2_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_2_bn/strided_slice"
  input: "conv_pw_2_bn/strided_slice_1"
  input: "conv_pw_2_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_2_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/range"
  op: "Range"
  input: "conv_pw_2_bn/range/start"
  input: "conv_pw_2_bn/Rank"
  input: "conv_pw_2_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_2_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_2_bn/strided_slice"
  input: "conv_pw_2_bn/strided_slice_1"
  input: "conv_pw_2_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_2_bn/Prod"
  op: "Prod"
  input: "conv_pw_2_bn/Prod/input"
  input: "conv_pw_2_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/Cast"
  op: "Cast"
  input: "conv_pw_2_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_2_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/sub"
  op: "Sub"
  input: "conv_pw_2_bn/Cast"
  input: "conv_pw_2_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_2_bn/Cast"
  input: "conv_pw_2_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/mul"
  op: "Mul"
  input: "conv_pw_2_bn/FusedBatchNorm:2"
  input: "conv_pw_2_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_2_bn/moving_mean/biased"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_2_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_2_bn/moving_mean/local_step"
  input: "conv_pw_2_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_2_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_2_bn/moving_mean/biased/read"
  input: "conv_pw_2_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub"
  input: "conv_pw_2_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/conv_pw_2_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_2_bn/moving_mean/biased"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_2_bn/moving_mean/local_step"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_2_bn/moving_mean/biased"
  input: "^conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/AssignAdd"
  input: "^conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/conv_pw_2_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/AssignAdd"
  input: "^conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/conv_pw_2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_1/x"
  input: "conv_pw_2_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_2_bn/moving_mean/local_step"
  input: "^conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/AssignAdd"
  input: "^conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/conv_pw_2_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_1"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/AssignAdd"
  input: "^conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/conv_pw_2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_2/x"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/read"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_2_bn/moving_mean/read"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_2_bn/moving_mean"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_2_bn/moving_variance/biased"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_2_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_2_bn/moving_variance/local_step"
  input: "conv_pw_2_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_2_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_2_bn/moving_variance/biased/read"
  input: "conv_pw_2_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub"
  input: "conv_pw_2_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/conv_pw_2_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_2_bn/moving_variance/biased"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_2_bn/moving_variance/local_step"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_2_bn/moving_variance/biased"
  input: "^conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/AssignAdd"
  input: "^conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/conv_pw_2_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/AssignAdd"
  input: "^conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/conv_pw_2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_1/x"
  input: "conv_pw_2_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_2_bn/moving_variance/local_step"
  input: "^conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/AssignAdd"
  input: "^conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/conv_pw_2_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_1"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/AssignAdd"
  input: "^conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/conv_pw_2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_2/x"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/read"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_2_bn/moving_variance/read"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_2_bn/moving_variance"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_2_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_2_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_2_bn/FusedBatchNorm"
  input: "conv_pw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_pw_2_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_pw_2_bn/cond/batchnorm/add/Switch"
  input: "conv_pw_2_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_pw_2_bn/moving_variance/read"
  input: "conv_pw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_pw_2_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_pw_2_bn/cond/batchnorm/Rsqrt"
  input: "conv_pw_2_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_pw_2_bn/gamma/read"
  input: "conv_pw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_pw_2_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_pw_2_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_pw_2/convolution"
  input: "conv_pw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_pw_2_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_pw_2_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_pw_2_bn/moving_mean/read"
  input: "conv_pw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_pw_2_bn/cond/batchnorm/sub/Switch"
  input: "conv_pw_2_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_pw_2_bn/beta/read"
  input: "conv_pw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_pw_2_bn/cond/batchnorm/mul_1"
  input: "conv_pw_2_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_2_bn/cond/batchnorm/add_1"
  input: "conv_pw_2_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_relu/Relu"
  op: "Relu"
  input: "conv_pw_2_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_pw_2_relu/Minimum"
  op: "Minimum"
  input: "conv_pw_2_relu/Relu"
  input: "conv_pw_2_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_3/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_3/Pad"
  op: "Pad"
  input: "conv_pw_2_relu/Minimum"
  input: "conv_pad_3/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_3/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3445110
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_3/random_uniform/max"
  input: "conv_dw_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_3/random_uniform/RandomUniform"
  input: "conv_dw_3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3/random_uniform"
  op: "Add"
  input: "conv_dw_3/random_uniform/mul"
  input: "conv_dw_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_3/depthwise_kernel"
  input: "conv_dw_3/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_3/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_3/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_3/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_3/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_3/Pad"
  input: "conv_dw_3/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_3_bn/gamma"
  input: "conv_dw_3_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_3_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_3_bn/beta"
  input: "conv_dw_3_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/beta/read"
  op: "Identity"
  input: "conv_dw_3_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_3_bn/moving_mean"
  input: "conv_dw_3_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_3_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_3_bn/moving_variance"
  input: "conv_dw_3_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_3_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_3/depthwise"
  input: "conv_dw_3_bn/gamma/read"
  input: "conv_dw_3_bn/beta/read"
  input: "conv_dw_3_bn/Const_4"
  input: "conv_dw_3_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/Shape"
  op: "Shape"
  input: "conv_dw_3/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_3_bn/Shape"
  input: "conv_dw_3_bn/strided_slice/stack"
  input: "conv_dw_3_bn/strided_slice/stack_1"
  input: "conv_dw_3_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_3_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_3/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_3_bn/Shape_1"
  input: "conv_dw_3_bn/strided_slice_1/stack"
  input: "conv_dw_3_bn/strided_slice_1/stack_1"
  input: "conv_dw_3_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_3_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_3/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_3_bn/Shape_2"
  input: "conv_dw_3_bn/strided_slice_2/stack"
  input: "conv_dw_3_bn/strided_slice_2/stack_1"
  input: "conv_dw_3_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_3_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_3_bn/strided_slice"
  input: "conv_dw_3_bn/strided_slice_1"
  input: "conv_dw_3_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_3_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/range"
  op: "Range"
  input: "conv_dw_3_bn/range/start"
  input: "conv_dw_3_bn/Rank"
  input: "conv_dw_3_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_3_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_3_bn/strided_slice"
  input: "conv_dw_3_bn/strided_slice_1"
  input: "conv_dw_3_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_3_bn/Prod"
  op: "Prod"
  input: "conv_dw_3_bn/Prod/input"
  input: "conv_dw_3_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/Cast"
  op: "Cast"
  input: "conv_dw_3_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_3_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/sub"
  op: "Sub"
  input: "conv_dw_3_bn/Cast"
  input: "conv_dw_3_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_3_bn/Cast"
  input: "conv_dw_3_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/mul"
  op: "Mul"
  input: "conv_dw_3_bn/FusedBatchNorm:2"
  input: "conv_dw_3_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_3_bn/moving_mean/biased"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_3_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_3_bn/moving_mean/local_step"
  input: "conv_dw_3_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_3_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_3_bn/moving_mean/biased/read"
  input: "conv_dw_3_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub"
  input: "conv_dw_3_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/conv_dw_3_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_3_bn/moving_mean/biased"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_3_bn/moving_mean/local_step"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_3_bn/moving_mean/biased"
  input: "^conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/AssignAdd"
  input: "^conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/conv_dw_3_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/AssignAdd"
  input: "^conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/conv_dw_3_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_1/x"
  input: "conv_dw_3_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_3_bn/moving_mean/local_step"
  input: "^conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/AssignAdd"
  input: "^conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/conv_dw_3_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_1"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/AssignAdd"
  input: "^conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/conv_dw_3_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_2/x"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/read"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_3_bn/moving_mean/read"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_3_bn/moving_mean"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_3_bn/moving_variance/biased"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_3_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_3_bn/moving_variance/local_step"
  input: "conv_dw_3_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_3_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_3_bn/moving_variance/biased/read"
  input: "conv_dw_3_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub"
  input: "conv_dw_3_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/conv_dw_3_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_3_bn/moving_variance/biased"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_3_bn/moving_variance/local_step"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_3_bn/moving_variance/biased"
  input: "^conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/AssignAdd"
  input: "^conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/conv_dw_3_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/AssignAdd"
  input: "^conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/conv_dw_3_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_1/x"
  input: "conv_dw_3_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_3_bn/moving_variance/local_step"
  input: "^conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/AssignAdd"
  input: "^conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/conv_dw_3_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_1"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/AssignAdd"
  input: "^conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/conv_dw_3_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_2/x"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/read"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_3_bn/moving_variance/read"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_3_bn/moving_variance"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_3_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_3_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_3_bn/FusedBatchNorm"
  input: "conv_dw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_dw_3_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_dw_3_bn/cond/batchnorm/add/Switch"
  input: "conv_dw_3_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_dw_3_bn/moving_variance/read"
  input: "conv_dw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_dw_3_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_dw_3_bn/cond/batchnorm/Rsqrt"
  input: "conv_dw_3_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_dw_3_bn/gamma/read"
  input: "conv_dw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_dw_3_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_dw_3_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_dw_3/depthwise"
  input: "conv_dw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_dw_3_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_dw_3_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_dw_3_bn/moving_mean/read"
  input: "conv_dw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_dw_3_bn/cond/batchnorm/sub/Switch"
  input: "conv_dw_3_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_dw_3_bn/beta/read"
  input: "conv_dw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_dw_3_bn/cond/batchnorm/mul_1"
  input: "conv_dw_3_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_3_bn/cond/batchnorm/add_1"
  input: "conv_dw_3_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_relu/Relu"
  op: "Relu"
  input: "conv_dw_3_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_dw_3_relu/Minimum"
  op: "Minimum"
  input: "conv_dw_3_relu/Relu"
  input: "conv_dw_3_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_3/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8356976
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_3/random_uniform/max"
  input: "conv_pw_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_3/random_uniform/RandomUniform"
  input: "conv_pw_3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3/random_uniform"
  op: "Add"
  input: "conv_pw_3/random_uniform/mul"
  input: "conv_pw_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3/kernel/Assign"
  op: "Assign"
  input: "conv_pw_3/kernel"
  input: "conv_pw_3/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3/kernel/read"
  op: "Identity"
  input: "conv_pw_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_3/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_3/convolution"
  op: "Conv2D"
  input: "conv_dw_3_relu/Minimum"
  input: "conv_pw_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_3_bn/gamma"
  input: "conv_pw_3_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_3_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_3_bn/beta"
  input: "conv_pw_3_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/beta/read"
  op: "Identity"
  input: "conv_pw_3_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_3_bn/moving_mean"
  input: "conv_pw_3_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_3_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_3_bn/moving_variance"
  input: "conv_pw_3_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_3_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_3/convolution"
  input: "conv_pw_3_bn/gamma/read"
  input: "conv_pw_3_bn/beta/read"
  input: "conv_pw_3_bn/Const_4"
  input: "conv_pw_3_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/Shape"
  op: "Shape"
  input: "conv_pw_3/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_3_bn/Shape"
  input: "conv_pw_3_bn/strided_slice/stack"
  input: "conv_pw_3_bn/strided_slice/stack_1"
  input: "conv_pw_3_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_3_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_3/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_3_bn/Shape_1"
  input: "conv_pw_3_bn/strided_slice_1/stack"
  input: "conv_pw_3_bn/strided_slice_1/stack_1"
  input: "conv_pw_3_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_3_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_3/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_3_bn/Shape_2"
  input: "conv_pw_3_bn/strided_slice_2/stack"
  input: "conv_pw_3_bn/strided_slice_2/stack_1"
  input: "conv_pw_3_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_3_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_3_bn/strided_slice"
  input: "conv_pw_3_bn/strided_slice_1"
  input: "conv_pw_3_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_3_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/range"
  op: "Range"
  input: "conv_pw_3_bn/range/start"
  input: "conv_pw_3_bn/Rank"
  input: "conv_pw_3_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_3_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_3_bn/strided_slice"
  input: "conv_pw_3_bn/strided_slice_1"
  input: "conv_pw_3_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_3_bn/Prod"
  op: "Prod"
  input: "conv_pw_3_bn/Prod/input"
  input: "conv_pw_3_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/Cast"
  op: "Cast"
  input: "conv_pw_3_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_3_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/sub"
  op: "Sub"
  input: "conv_pw_3_bn/Cast"
  input: "conv_pw_3_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_3_bn/Cast"
  input: "conv_pw_3_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/mul"
  op: "Mul"
  input: "conv_pw_3_bn/FusedBatchNorm:2"
  input: "conv_pw_3_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_3_bn/moving_mean/biased"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_3_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_3_bn/moving_mean/local_step"
  input: "conv_pw_3_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_3_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_3_bn/moving_mean/biased/read"
  input: "conv_pw_3_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub"
  input: "conv_pw_3_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/conv_pw_3_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_3_bn/moving_mean/biased"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_3_bn/moving_mean/local_step"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_3_bn/moving_mean/biased"
  input: "^conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/AssignAdd"
  input: "^conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/conv_pw_3_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/AssignAdd"
  input: "^conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/conv_pw_3_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_1/x"
  input: "conv_pw_3_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_3_bn/moving_mean/local_step"
  input: "^conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/AssignAdd"
  input: "^conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/conv_pw_3_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_1"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/AssignAdd"
  input: "^conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/conv_pw_3_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_2/x"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/read"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_3_bn/moving_mean/read"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_3_bn/moving_mean"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_3_bn/moving_variance/biased"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_3_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_3_bn/moving_variance/local_step"
  input: "conv_pw_3_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_3_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_3_bn/moving_variance/biased/read"
  input: "conv_pw_3_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub"
  input: "conv_pw_3_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/conv_pw_3_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_3_bn/moving_variance/biased"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_3_bn/moving_variance/local_step"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_3_bn/moving_variance/biased"
  input: "^conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/AssignAdd"
  input: "^conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/conv_pw_3_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/AssignAdd"
  input: "^conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/conv_pw_3_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_1/x"
  input: "conv_pw_3_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_3_bn/moving_variance/local_step"
  input: "^conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/AssignAdd"
  input: "^conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/conv_pw_3_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_1"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/AssignAdd"
  input: "^conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/conv_pw_3_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_2/x"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/read"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_3_bn/moving_variance/read"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_3_bn/moving_variance"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_3_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_3_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_3_bn/FusedBatchNorm"
  input: "conv_pw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_pw_3_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_pw_3_bn/cond/batchnorm/add/Switch"
  input: "conv_pw_3_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_pw_3_bn/moving_variance/read"
  input: "conv_pw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_pw_3_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_pw_3_bn/cond/batchnorm/Rsqrt"
  input: "conv_pw_3_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_pw_3_bn/gamma/read"
  input: "conv_pw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_pw_3_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_pw_3_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_pw_3/convolution"
  input: "conv_pw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_pw_3_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_pw_3_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_pw_3_bn/moving_mean/read"
  input: "conv_pw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_pw_3_bn/cond/batchnorm/sub/Switch"
  input: "conv_pw_3_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_pw_3_bn/beta/read"
  input: "conv_pw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_pw_3_bn/cond/batchnorm/mul_1"
  input: "conv_pw_3_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_3_bn/cond/batchnorm/add_1"
  input: "conv_pw_3_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_relu/Relu"
  op: "Relu"
  input: "conv_pw_3_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_pw_3_relu/Minimum"
  op: "Minimum"
  input: "conv_pw_3_relu/Relu"
  input: "conv_pw_3_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_4/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_4/Pad"
  op: "Pad"
  input: "conv_pw_3_relu/Minimum"
  input: "conv_pad_4/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_4/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 447154
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_4/random_uniform/max"
  input: "conv_dw_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_4/random_uniform/RandomUniform"
  input: "conv_dw_4/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4/random_uniform"
  op: "Add"
  input: "conv_dw_4/random_uniform/mul"
  input: "conv_dw_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_4/depthwise_kernel"
  input: "conv_dw_4/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_4/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_4/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_4/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_4/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_4/Pad"
  input: "conv_dw_4/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_4_bn/gamma"
  input: "conv_dw_4_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_4_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_4_bn/beta"
  input: "conv_dw_4_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/beta/read"
  op: "Identity"
  input: "conv_dw_4_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_4_bn/moving_mean"
  input: "conv_dw_4_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_4_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_4_bn/moving_variance"
  input: "conv_dw_4_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_4_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_4/depthwise"
  input: "conv_dw_4_bn/gamma/read"
  input: "conv_dw_4_bn/beta/read"
  input: "conv_dw_4_bn/Const_4"
  input: "conv_dw_4_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/Shape"
  op: "Shape"
  input: "conv_dw_4/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_4_bn/Shape"
  input: "conv_dw_4_bn/strided_slice/stack"
  input: "conv_dw_4_bn/strided_slice/stack_1"
  input: "conv_dw_4_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_4_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_4/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_4_bn/Shape_1"
  input: "conv_dw_4_bn/strided_slice_1/stack"
  input: "conv_dw_4_bn/strided_slice_1/stack_1"
  input: "conv_dw_4_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_4_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_4/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_4_bn/Shape_2"
  input: "conv_dw_4_bn/strided_slice_2/stack"
  input: "conv_dw_4_bn/strided_slice_2/stack_1"
  input: "conv_dw_4_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_4_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_4_bn/strided_slice"
  input: "conv_dw_4_bn/strided_slice_1"
  input: "conv_dw_4_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_4_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/range"
  op: "Range"
  input: "conv_dw_4_bn/range/start"
  input: "conv_dw_4_bn/Rank"
  input: "conv_dw_4_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_4_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_4_bn/strided_slice"
  input: "conv_dw_4_bn/strided_slice_1"
  input: "conv_dw_4_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_4_bn/Prod"
  op: "Prod"
  input: "conv_dw_4_bn/Prod/input"
  input: "conv_dw_4_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/Cast"
  op: "Cast"
  input: "conv_dw_4_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_4_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/sub"
  op: "Sub"
  input: "conv_dw_4_bn/Cast"
  input: "conv_dw_4_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_4_bn/Cast"
  input: "conv_dw_4_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/mul"
  op: "Mul"
  input: "conv_dw_4_bn/FusedBatchNorm:2"
  input: "conv_dw_4_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_4_bn/moving_mean/biased"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_4_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_4_bn/moving_mean/local_step"
  input: "conv_dw_4_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_4_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_4_bn/moving_mean/biased/read"
  input: "conv_dw_4_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub"
  input: "conv_dw_4_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/conv_dw_4_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_4_bn/moving_mean/biased"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_4_bn/moving_mean/local_step"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_4_bn/moving_mean/biased"
  input: "^conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/AssignAdd"
  input: "^conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/conv_dw_4_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/AssignAdd"
  input: "^conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/conv_dw_4_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_1/x"
  input: "conv_dw_4_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_4_bn/moving_mean/local_step"
  input: "^conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/AssignAdd"
  input: "^conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/conv_dw_4_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_1"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/AssignAdd"
  input: "^conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/conv_dw_4_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_2/x"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/read"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_4_bn/moving_mean/read"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_4_bn/moving_mean"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_4_bn/moving_variance/biased"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_4_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_4_bn/moving_variance/local_step"
  input: "conv_dw_4_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_4_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_4_bn/moving_variance/biased/read"
  input: "conv_dw_4_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub"
  input: "conv_dw_4_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/conv_dw_4_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_4_bn/moving_variance/biased"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_4_bn/moving_variance/local_step"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_4_bn/moving_variance/biased"
  input: "^conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/AssignAdd"
  input: "^conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/conv_dw_4_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/AssignAdd"
  input: "^conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/conv_dw_4_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_1/x"
  input: "conv_dw_4_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_4_bn/moving_variance/local_step"
  input: "^conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/AssignAdd"
  input: "^conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/conv_dw_4_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_1"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/AssignAdd"
  input: "^conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/conv_dw_4_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_2/x"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/read"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_4_bn/moving_variance/read"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_4_bn/moving_variance"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_4_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_4_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_4_bn/FusedBatchNorm"
  input: "conv_dw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_dw_4_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_dw_4_bn/cond/batchnorm/add/Switch"
  input: "conv_dw_4_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_dw_4_bn/moving_variance/read"
  input: "conv_dw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_dw_4_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_dw_4_bn/cond/batchnorm/Rsqrt"
  input: "conv_dw_4_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_dw_4_bn/gamma/read"
  input: "conv_dw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_dw_4_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_dw_4_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_dw_4/depthwise"
  input: "conv_dw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_dw_4_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_dw_4_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_dw_4_bn/moving_mean/read"
  input: "conv_dw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_dw_4_bn/cond/batchnorm/sub/Switch"
  input: "conv_dw_4_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_dw_4_bn/beta/read"
  input: "conv_dw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_dw_4_bn/cond/batchnorm/mul_1"
  input: "conv_dw_4_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_4_bn/cond/batchnorm/add_1"
  input: "conv_dw_4_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_relu/Relu"
  op: "Relu"
  input: "conv_dw_4_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_dw_4_relu/Minimum"
  op: "Minimum"
  input: "conv_dw_4_relu/Relu"
  input: "conv_dw_4_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_4/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6081149
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_4/random_uniform/max"
  input: "conv_pw_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_4/random_uniform/RandomUniform"
  input: "conv_pw_4/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4/random_uniform"
  op: "Add"
  input: "conv_pw_4/random_uniform/mul"
  input: "conv_pw_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4/kernel/Assign"
  op: "Assign"
  input: "conv_pw_4/kernel"
  input: "conv_pw_4/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4/kernel/read"
  op: "Identity"
  input: "conv_pw_4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_4/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_4/convolution"
  op: "Conv2D"
  input: "conv_dw_4_relu/Minimum"
  input: "conv_pw_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_4_bn/gamma"
  input: "conv_pw_4_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_4_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_4_bn/beta"
  input: "conv_pw_4_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/beta/read"
  op: "Identity"
  input: "conv_pw_4_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_4_bn/moving_mean"
  input: "conv_pw_4_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_4_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_4_bn/moving_variance"
  input: "conv_pw_4_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_4_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_4/convolution"
  input: "conv_pw_4_bn/gamma/read"
  input: "conv_pw_4_bn/beta/read"
  input: "conv_pw_4_bn/Const_4"
  input: "conv_pw_4_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/Shape"
  op: "Shape"
  input: "conv_pw_4/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_4_bn/Shape"
  input: "conv_pw_4_bn/strided_slice/stack"
  input: "conv_pw_4_bn/strided_slice/stack_1"
  input: "conv_pw_4_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_4_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_4/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_4_bn/Shape_1"
  input: "conv_pw_4_bn/strided_slice_1/stack"
  input: "conv_pw_4_bn/strided_slice_1/stack_1"
  input: "conv_pw_4_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_4_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_4/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_4_bn/Shape_2"
  input: "conv_pw_4_bn/strided_slice_2/stack"
  input: "conv_pw_4_bn/strided_slice_2/stack_1"
  input: "conv_pw_4_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_4_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_4_bn/strided_slice"
  input: "conv_pw_4_bn/strided_slice_1"
  input: "conv_pw_4_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_4_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/range"
  op: "Range"
  input: "conv_pw_4_bn/range/start"
  input: "conv_pw_4_bn/Rank"
  input: "conv_pw_4_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_4_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_4_bn/strided_slice"
  input: "conv_pw_4_bn/strided_slice_1"
  input: "conv_pw_4_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_4_bn/Prod"
  op: "Prod"
  input: "conv_pw_4_bn/Prod/input"
  input: "conv_pw_4_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/Cast"
  op: "Cast"
  input: "conv_pw_4_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_4_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/sub"
  op: "Sub"
  input: "conv_pw_4_bn/Cast"
  input: "conv_pw_4_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_4_bn/Cast"
  input: "conv_pw_4_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/mul"
  op: "Mul"
  input: "conv_pw_4_bn/FusedBatchNorm:2"
  input: "conv_pw_4_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_4_bn/moving_mean/biased"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_4_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_4_bn/moving_mean/local_step"
  input: "conv_pw_4_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_4_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_4_bn/moving_mean/biased/read"
  input: "conv_pw_4_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub"
  input: "conv_pw_4_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/conv_pw_4_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_4_bn/moving_mean/biased"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_4_bn/moving_mean/local_step"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_4_bn/moving_mean/biased"
  input: "^conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/AssignAdd"
  input: "^conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/conv_pw_4_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/AssignAdd"
  input: "^conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/conv_pw_4_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_1/x"
  input: "conv_pw_4_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_4_bn/moving_mean/local_step"
  input: "^conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/AssignAdd"
  input: "^conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/conv_pw_4_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_1"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/AssignAdd"
  input: "^conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/conv_pw_4_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_2/x"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/read"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_4_bn/moving_mean/read"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_4_bn/moving_mean"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_4_bn/moving_variance/biased"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_4_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_4_bn/moving_variance/local_step"
  input: "conv_pw_4_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_4_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_4_bn/moving_variance/biased/read"
  input: "conv_pw_4_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub"
  input: "conv_pw_4_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/conv_pw_4_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_4_bn/moving_variance/biased"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_4_bn/moving_variance/local_step"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_4_bn/moving_variance/biased"
  input: "^conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/AssignAdd"
  input: "^conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/conv_pw_4_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/AssignAdd"
  input: "^conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/conv_pw_4_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_1/x"
  input: "conv_pw_4_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_4_bn/moving_variance/local_step"
  input: "^conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/AssignAdd"
  input: "^conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/conv_pw_4_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_1"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/AssignAdd"
  input: "^conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/conv_pw_4_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_2/x"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/read"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_4_bn/moving_variance/read"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_4_bn/moving_variance"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_4_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_4_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_4_bn/FusedBatchNorm"
  input: "conv_pw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_pw_4_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_pw_4_bn/cond/batchnorm/add/Switch"
  input: "conv_pw_4_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_pw_4_bn/moving_variance/read"
  input: "conv_pw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_pw_4_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_pw_4_bn/cond/batchnorm/Rsqrt"
  input: "conv_pw_4_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_pw_4_bn/gamma/read"
  input: "conv_pw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_pw_4_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_pw_4_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_pw_4/convolution"
  input: "conv_pw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_pw_4_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_pw_4_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_pw_4_bn/moving_mean/read"
  input: "conv_pw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_pw_4_bn/cond/batchnorm/sub/Switch"
  input: "conv_pw_4_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_pw_4_bn/beta/read"
  input: "conv_pw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_pw_4_bn/cond/batchnorm/mul_1"
  input: "conv_pw_4_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_4_bn/cond/batchnorm/add_1"
  input: "conv_pw_4_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_relu/Relu"
  op: "Relu"
  input: "conv_pw_4_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_pw_4_relu/Minimum"
  op: "Minimum"
  input: "conv_pw_4_relu/Relu"
  input: "conv_pw_4_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_5/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_5/Pad"
  op: "Pad"
  input: "conv_pw_4_relu/Minimum"
  input: "conv_pad_5/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_5/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4885492
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_5/random_uniform/max"
  input: "conv_dw_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_5/random_uniform/RandomUniform"
  input: "conv_dw_5/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5/random_uniform"
  op: "Add"
  input: "conv_dw_5/random_uniform/mul"
  input: "conv_dw_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_5/depthwise_kernel"
  input: "conv_dw_5/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_5/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_5/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_5/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_5/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_5/Pad"
  input: "conv_dw_5/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_5_bn/gamma"
  input: "conv_dw_5_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_5_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_5_bn/beta"
  input: "conv_dw_5_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/beta/read"
  op: "Identity"
  input: "conv_dw_5_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_5_bn/moving_mean"
  input: "conv_dw_5_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_5_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_5_bn/moving_variance"
  input: "conv_dw_5_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_5_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_5/depthwise"
  input: "conv_dw_5_bn/gamma/read"
  input: "conv_dw_5_bn/beta/read"
  input: "conv_dw_5_bn/Const_4"
  input: "conv_dw_5_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/Shape"
  op: "Shape"
  input: "conv_dw_5/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_5_bn/Shape"
  input: "conv_dw_5_bn/strided_slice/stack"
  input: "conv_dw_5_bn/strided_slice/stack_1"
  input: "conv_dw_5_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_5_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_5/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_5_bn/Shape_1"
  input: "conv_dw_5_bn/strided_slice_1/stack"
  input: "conv_dw_5_bn/strided_slice_1/stack_1"
  input: "conv_dw_5_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_5_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_5/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_5_bn/Shape_2"
  input: "conv_dw_5_bn/strided_slice_2/stack"
  input: "conv_dw_5_bn/strided_slice_2/stack_1"
  input: "conv_dw_5_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_5_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_5_bn/strided_slice"
  input: "conv_dw_5_bn/strided_slice_1"
  input: "conv_dw_5_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_5_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/range"
  op: "Range"
  input: "conv_dw_5_bn/range/start"
  input: "conv_dw_5_bn/Rank"
  input: "conv_dw_5_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_5_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_5_bn/strided_slice"
  input: "conv_dw_5_bn/strided_slice_1"
  input: "conv_dw_5_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_5_bn/Prod"
  op: "Prod"
  input: "conv_dw_5_bn/Prod/input"
  input: "conv_dw_5_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/Cast"
  op: "Cast"
  input: "conv_dw_5_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_5_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/sub"
  op: "Sub"
  input: "conv_dw_5_bn/Cast"
  input: "conv_dw_5_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_5_bn/Cast"
  input: "conv_dw_5_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/mul"
  op: "Mul"
  input: "conv_dw_5_bn/FusedBatchNorm:2"
  input: "conv_dw_5_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_5_bn/moving_mean/biased"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_5_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_5_bn/moving_mean/local_step"
  input: "conv_dw_5_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_5_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_5_bn/moving_mean/biased/read"
  input: "conv_dw_5_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub"
  input: "conv_dw_5_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/conv_dw_5_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_5_bn/moving_mean/biased"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_5_bn/moving_mean/local_step"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_5_bn/moving_mean/biased"
  input: "^conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/AssignAdd"
  input: "^conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/conv_dw_5_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/AssignAdd"
  input: "^conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/conv_dw_5_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_1/x"
  input: "conv_dw_5_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_5_bn/moving_mean/local_step"
  input: "^conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/AssignAdd"
  input: "^conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/conv_dw_5_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_1"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/AssignAdd"
  input: "^conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/conv_dw_5_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_2/x"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/read"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_5_bn/moving_mean/read"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_5_bn/moving_mean"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_5_bn/moving_variance/biased"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_5_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_5_bn/moving_variance/local_step"
  input: "conv_dw_5_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_5_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_5_bn/moving_variance/biased/read"
  input: "conv_dw_5_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub"
  input: "conv_dw_5_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/conv_dw_5_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_5_bn/moving_variance/biased"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_5_bn/moving_variance/local_step"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_5_bn/moving_variance/biased"
  input: "^conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/AssignAdd"
  input: "^conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/conv_dw_5_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/AssignAdd"
  input: "^conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/conv_dw_5_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_1/x"
  input: "conv_dw_5_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_5_bn/moving_variance/local_step"
  input: "^conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/AssignAdd"
  input: "^conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/conv_dw_5_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_1"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/AssignAdd"
  input: "^conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/conv_dw_5_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_2/x"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/read"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_5_bn/moving_variance/read"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_5_bn/moving_variance"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_5_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_5_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_5_bn/FusedBatchNorm"
  input: "conv_dw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_dw_5_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_dw_5_bn/cond/batchnorm/add/Switch"
  input: "conv_dw_5_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_dw_5_bn/moving_variance/read"
  input: "conv_dw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_dw_5_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_dw_5_bn/cond/batchnorm/Rsqrt"
  input: "conv_dw_5_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_dw_5_bn/gamma/read"
  input: "conv_dw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_dw_5_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_dw_5_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_dw_5/depthwise"
  input: "conv_dw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_dw_5_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_dw_5_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_dw_5_bn/moving_mean/read"
  input: "conv_dw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_dw_5_bn/cond/batchnorm/sub/Switch"
  input: "conv_dw_5_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_dw_5_bn/beta/read"
  input: "conv_dw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_dw_5_bn/cond/batchnorm/mul_1"
  input: "conv_dw_5_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_5_bn/cond/batchnorm/add_1"
  input: "conv_dw_5_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_relu/Relu"
  op: "Relu"
  input: "conv_dw_5_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_dw_5_relu/Minimum"
  op: "Minimum"
  input: "conv_dw_5_relu/Relu"
  input: "conv_dw_5_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_5/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5386690
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_5/random_uniform/max"
  input: "conv_pw_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_5/random_uniform/RandomUniform"
  input: "conv_pw_5/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5/random_uniform"
  op: "Add"
  input: "conv_pw_5/random_uniform/mul"
  input: "conv_pw_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5/kernel/Assign"
  op: "Assign"
  input: "conv_pw_5/kernel"
  input: "conv_pw_5/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5/kernel/read"
  op: "Identity"
  input: "conv_pw_5/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_5/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_5/convolution"
  op: "Conv2D"
  input: "conv_dw_5_relu/Minimum"
  input: "conv_pw_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_5_bn/gamma"
  input: "conv_pw_5_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_5_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_5_bn/beta"
  input: "conv_pw_5_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/beta/read"
  op: "Identity"
  input: "conv_pw_5_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_5_bn/moving_mean"
  input: "conv_pw_5_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_5_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_5_bn/moving_variance"
  input: "conv_pw_5_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_5_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_5/convolution"
  input: "conv_pw_5_bn/gamma/read"
  input: "conv_pw_5_bn/beta/read"
  input: "conv_pw_5_bn/Const_4"
  input: "conv_pw_5_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/Shape"
  op: "Shape"
  input: "conv_pw_5/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_5_bn/Shape"
  input: "conv_pw_5_bn/strided_slice/stack"
  input: "conv_pw_5_bn/strided_slice/stack_1"
  input: "conv_pw_5_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_5_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_5/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_5_bn/Shape_1"
  input: "conv_pw_5_bn/strided_slice_1/stack"
  input: "conv_pw_5_bn/strided_slice_1/stack_1"
  input: "conv_pw_5_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_5_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_5/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_5_bn/Shape_2"
  input: "conv_pw_5_bn/strided_slice_2/stack"
  input: "conv_pw_5_bn/strided_slice_2/stack_1"
  input: "conv_pw_5_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_5_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_5_bn/strided_slice"
  input: "conv_pw_5_bn/strided_slice_1"
  input: "conv_pw_5_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_5_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/range"
  op: "Range"
  input: "conv_pw_5_bn/range/start"
  input: "conv_pw_5_bn/Rank"
  input: "conv_pw_5_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_5_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_5_bn/strided_slice"
  input: "conv_pw_5_bn/strided_slice_1"
  input: "conv_pw_5_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_5_bn/Prod"
  op: "Prod"
  input: "conv_pw_5_bn/Prod/input"
  input: "conv_pw_5_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/Cast"
  op: "Cast"
  input: "conv_pw_5_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_5_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/sub"
  op: "Sub"
  input: "conv_pw_5_bn/Cast"
  input: "conv_pw_5_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_5_bn/Cast"
  input: "conv_pw_5_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/mul"
  op: "Mul"
  input: "conv_pw_5_bn/FusedBatchNorm:2"
  input: "conv_pw_5_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_5_bn/moving_mean/biased"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_5_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_5_bn/moving_mean/local_step"
  input: "conv_pw_5_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_5_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_5_bn/moving_mean/biased/read"
  input: "conv_pw_5_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub"
  input: "conv_pw_5_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/conv_pw_5_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_5_bn/moving_mean/biased"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_5_bn/moving_mean/local_step"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_5_bn/moving_mean/biased"
  input: "^conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/AssignAdd"
  input: "^conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/conv_pw_5_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/AssignAdd"
  input: "^conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/conv_pw_5_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_1/x"
  input: "conv_pw_5_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_5_bn/moving_mean/local_step"
  input: "^conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/AssignAdd"
  input: "^conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/conv_pw_5_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_1"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/AssignAdd"
  input: "^conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/conv_pw_5_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_2/x"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/read"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_5_bn/moving_mean/read"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_5_bn/moving_mean"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_5_bn/moving_variance/biased"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_5_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_5_bn/moving_variance/local_step"
  input: "conv_pw_5_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_5_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_5_bn/moving_variance/biased/read"
  input: "conv_pw_5_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub"
  input: "conv_pw_5_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/conv_pw_5_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_5_bn/moving_variance/biased"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_5_bn/moving_variance/local_step"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_5_bn/moving_variance/biased"
  input: "^conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/AssignAdd"
  input: "^conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/conv_pw_5_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/AssignAdd"
  input: "^conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/conv_pw_5_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_1/x"
  input: "conv_pw_5_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_5_bn/moving_variance/local_step"
  input: "^conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/AssignAdd"
  input: "^conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/conv_pw_5_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_1"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/AssignAdd"
  input: "^conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/conv_pw_5_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_2/x"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/read"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_5_bn/moving_variance/read"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_5_bn/moving_variance"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_5_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_5_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_5_bn/FusedBatchNorm"
  input: "conv_pw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_pw_5_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_pw_5_bn/cond/batchnorm/add/Switch"
  input: "conv_pw_5_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_pw_5_bn/moving_variance/read"
  input: "conv_pw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_pw_5_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_pw_5_bn/cond/batchnorm/Rsqrt"
  input: "conv_pw_5_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_pw_5_bn/gamma/read"
  input: "conv_pw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_pw_5_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_pw_5_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_pw_5/convolution"
  input: "conv_pw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_pw_5_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_pw_5_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_pw_5_bn/moving_mean/read"
  input: "conv_pw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_pw_5_bn/cond/batchnorm/sub/Switch"
  input: "conv_pw_5_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_pw_5_bn/beta/read"
  input: "conv_pw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_pw_5_bn/cond/batchnorm/mul_1"
  input: "conv_pw_5_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_5_bn/cond/batchnorm/add_1"
  input: "conv_pw_5_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_relu/Relu"
  op: "Relu"
  input: "conv_pw_5_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_pw_5_relu/Minimum"
  op: "Minimum"
  input: "conv_pw_5_relu/Relu"
  input: "conv_pw_5_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_6/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_6/Pad"
  op: "Pad"
  input: "conv_pw_5_relu/Minimum"
  input: "conv_pad_6/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_6/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6132098
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_6/random_uniform/max"
  input: "conv_dw_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_6/random_uniform/RandomUniform"
  input: "conv_dw_6/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6/random_uniform"
  op: "Add"
  input: "conv_dw_6/random_uniform/mul"
  input: "conv_dw_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_6/depthwise_kernel"
  input: "conv_dw_6/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_6/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_6/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_6/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_6/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_6/Pad"
  input: "conv_dw_6/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_6_bn/gamma"
  input: "conv_dw_6_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_6_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_6_bn/beta"
  input: "conv_dw_6_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/beta/read"
  op: "Identity"
  input: "conv_dw_6_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_6_bn/moving_mean"
  input: "conv_dw_6_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_6_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_6_bn/moving_variance"
  input: "conv_dw_6_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_6_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_6/depthwise"
  input: "conv_dw_6_bn/gamma/read"
  input: "conv_dw_6_bn/beta/read"
  input: "conv_dw_6_bn/Const_4"
  input: "conv_dw_6_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/Shape"
  op: "Shape"
  input: "conv_dw_6/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_6_bn/Shape"
  input: "conv_dw_6_bn/strided_slice/stack"
  input: "conv_dw_6_bn/strided_slice/stack_1"
  input: "conv_dw_6_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_6_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_6/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_6_bn/Shape_1"
  input: "conv_dw_6_bn/strided_slice_1/stack"
  input: "conv_dw_6_bn/strided_slice_1/stack_1"
  input: "conv_dw_6_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_6_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_6/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_6_bn/Shape_2"
  input: "conv_dw_6_bn/strided_slice_2/stack"
  input: "conv_dw_6_bn/strided_slice_2/stack_1"
  input: "conv_dw_6_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_6_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_6_bn/strided_slice"
  input: "conv_dw_6_bn/strided_slice_1"
  input: "conv_dw_6_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_6_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/range"
  op: "Range"
  input: "conv_dw_6_bn/range/start"
  input: "conv_dw_6_bn/Rank"
  input: "conv_dw_6_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_6_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_6_bn/strided_slice"
  input: "conv_dw_6_bn/strided_slice_1"
  input: "conv_dw_6_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_6_bn/Prod"
  op: "Prod"
  input: "conv_dw_6_bn/Prod/input"
  input: "conv_dw_6_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/Cast"
  op: "Cast"
  input: "conv_dw_6_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_6_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/sub"
  op: "Sub"
  input: "conv_dw_6_bn/Cast"
  input: "conv_dw_6_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_6_bn/Cast"
  input: "conv_dw_6_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/mul"
  op: "Mul"
  input: "conv_dw_6_bn/FusedBatchNorm:2"
  input: "conv_dw_6_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_6_bn/moving_mean/biased"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_6_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_6_bn/moving_mean/local_step"
  input: "conv_dw_6_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_6_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_6_bn/moving_mean/biased/read"
  input: "conv_dw_6_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub"
  input: "conv_dw_6_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/conv_dw_6_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_6_bn/moving_mean/biased"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_6_bn/moving_mean/local_step"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_6_bn/moving_mean/biased"
  input: "^conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/AssignAdd"
  input: "^conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/conv_dw_6_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/AssignAdd"
  input: "^conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/conv_dw_6_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_1/x"
  input: "conv_dw_6_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_6_bn/moving_mean/local_step"
  input: "^conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/AssignAdd"
  input: "^conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/conv_dw_6_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_1"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/AssignAdd"
  input: "^conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/conv_dw_6_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_2/x"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/read"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_6_bn/moving_mean/read"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_6_bn/moving_mean"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_6_bn/moving_variance/biased"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_6_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_6_bn/moving_variance/local_step"
  input: "conv_dw_6_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_6_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_6_bn/moving_variance/biased/read"
  input: "conv_dw_6_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub"
  input: "conv_dw_6_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/conv_dw_6_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_6_bn/moving_variance/biased"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_6_bn/moving_variance/local_step"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_6_bn/moving_variance/biased"
  input: "^conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/AssignAdd"
  input: "^conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/conv_dw_6_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/AssignAdd"
  input: "^conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/conv_dw_6_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_1/x"
  input: "conv_dw_6_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_6_bn/moving_variance/local_step"
  input: "^conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/AssignAdd"
  input: "^conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/conv_dw_6_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_1"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/AssignAdd"
  input: "^conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/conv_dw_6_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_2/x"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/read"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_6_bn/moving_variance/read"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_6_bn/moving_variance"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_6_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_6_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_6_bn/FusedBatchNorm"
  input: "conv_dw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_dw_6_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_dw_6_bn/cond/batchnorm/add/Switch"
  input: "conv_dw_6_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_dw_6_bn/moving_variance/read"
  input: "conv_dw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_dw_6_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_dw_6_bn/cond/batchnorm/Rsqrt"
  input: "conv_dw_6_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_dw_6_bn/gamma/read"
  input: "conv_dw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_dw_6_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_dw_6_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_dw_6/depthwise"
  input: "conv_dw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_dw_6_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_dw_6_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_dw_6_bn/moving_mean/read"
  input: "conv_dw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_dw_6_bn/cond/batchnorm/sub/Switch"
  input: "conv_dw_6_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_dw_6_bn/beta/read"
  input: "conv_dw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_dw_6_bn/cond/batchnorm/mul_1"
  input: "conv_dw_6_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_6_bn/cond/batchnorm/add_1"
  input: "conv_dw_6_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_relu/Relu"
  op: "Relu"
  input: "conv_dw_6_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_dw_6_relu/Minimum"
  op: "Minimum"
  input: "conv_dw_6_relu/Relu"
  input: "conv_dw_6_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_6/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4388408
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_6/random_uniform/max"
  input: "conv_pw_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_6/random_uniform/RandomUniform"
  input: "conv_pw_6/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6/random_uniform"
  op: "Add"
  input: "conv_pw_6/random_uniform/mul"
  input: "conv_pw_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6/kernel/Assign"
  op: "Assign"
  input: "conv_pw_6/kernel"
  input: "conv_pw_6/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6/kernel/read"
  op: "Identity"
  input: "conv_pw_6/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_6/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_6/convolution"
  op: "Conv2D"
  input: "conv_dw_6_relu/Minimum"
  input: "conv_pw_6/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_6_bn/gamma"
  input: "conv_pw_6_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_6_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_6_bn/beta"
  input: "conv_pw_6_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/beta/read"
  op: "Identity"
  input: "conv_pw_6_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_6_bn/moving_mean"
  input: "conv_pw_6_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_6_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_6_bn/moving_variance"
  input: "conv_pw_6_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_6_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_6/convolution"
  input: "conv_pw_6_bn/gamma/read"
  input: "conv_pw_6_bn/beta/read"
  input: "conv_pw_6_bn/Const_4"
  input: "conv_pw_6_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/Shape"
  op: "Shape"
  input: "conv_pw_6/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_6_bn/Shape"
  input: "conv_pw_6_bn/strided_slice/stack"
  input: "conv_pw_6_bn/strided_slice/stack_1"
  input: "conv_pw_6_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_6_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_6/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_6_bn/Shape_1"
  input: "conv_pw_6_bn/strided_slice_1/stack"
  input: "conv_pw_6_bn/strided_slice_1/stack_1"
  input: "conv_pw_6_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_6_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_6/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_6_bn/Shape_2"
  input: "conv_pw_6_bn/strided_slice_2/stack"
  input: "conv_pw_6_bn/strided_slice_2/stack_1"
  input: "conv_pw_6_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_6_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_6_bn/strided_slice"
  input: "conv_pw_6_bn/strided_slice_1"
  input: "conv_pw_6_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_6_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/range"
  op: "Range"
  input: "conv_pw_6_bn/range/start"
  input: "conv_pw_6_bn/Rank"
  input: "conv_pw_6_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_6_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_6_bn/strided_slice"
  input: "conv_pw_6_bn/strided_slice_1"
  input: "conv_pw_6_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_6_bn/Prod"
  op: "Prod"
  input: "conv_pw_6_bn/Prod/input"
  input: "conv_pw_6_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/Cast"
  op: "Cast"
  input: "conv_pw_6_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_6_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/sub"
  op: "Sub"
  input: "conv_pw_6_bn/Cast"
  input: "conv_pw_6_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_6_bn/Cast"
  input: "conv_pw_6_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/mul"
  op: "Mul"
  input: "conv_pw_6_bn/FusedBatchNorm:2"
  input: "conv_pw_6_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_6_bn/moving_mean/biased"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_6_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_6_bn/moving_mean/local_step"
  input: "conv_pw_6_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_6_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_6_bn/moving_mean/biased/read"
  input: "conv_pw_6_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub"
  input: "conv_pw_6_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/conv_pw_6_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_6_bn/moving_mean/biased"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_6_bn/moving_mean/local_step"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_6_bn/moving_mean/biased"
  input: "^conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/AssignAdd"
  input: "^conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/conv_pw_6_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/AssignAdd"
  input: "^conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/conv_pw_6_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_1/x"
  input: "conv_pw_6_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_6_bn/moving_mean/local_step"
  input: "^conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/AssignAdd"
  input: "^conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/conv_pw_6_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_1"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/AssignAdd"
  input: "^conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/conv_pw_6_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_2/x"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/read"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_6_bn/moving_mean/read"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_6_bn/moving_mean"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_6_bn/moving_variance/biased"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_6_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_6_bn/moving_variance/local_step"
  input: "conv_pw_6_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_6_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_6_bn/moving_variance/biased/read"
  input: "conv_pw_6_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub"
  input: "conv_pw_6_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/conv_pw_6_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_6_bn/moving_variance/biased"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_6_bn/moving_variance/local_step"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_6_bn/moving_variance/biased"
  input: "^conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/AssignAdd"
  input: "^conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/conv_pw_6_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/AssignAdd"
  input: "^conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/conv_pw_6_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_1/x"
  input: "conv_pw_6_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_6_bn/moving_variance/local_step"
  input: "^conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/AssignAdd"
  input: "^conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/conv_pw_6_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_1"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/AssignAdd"
  input: "^conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/conv_pw_6_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_2/x"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/read"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_6_bn/moving_variance/read"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_6_bn/moving_variance"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_6_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_6_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_6_bn/FusedBatchNorm"
  input: "conv_pw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_pw_6_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_pw_6_bn/cond/batchnorm/add/Switch"
  input: "conv_pw_6_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_pw_6_bn/moving_variance/read"
  input: "conv_pw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_pw_6_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_pw_6_bn/cond/batchnorm/Rsqrt"
  input: "conv_pw_6_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_pw_6_bn/gamma/read"
  input: "conv_pw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_pw_6_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_pw_6_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_pw_6/convolution"
  input: "conv_pw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_pw_6_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_pw_6_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_pw_6_bn/moving_mean/read"
  input: "conv_pw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_pw_6_bn/cond/batchnorm/sub/Switch"
  input: "conv_pw_6_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_pw_6_bn/beta/read"
  input: "conv_pw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_pw_6_bn/cond/batchnorm/mul_1"
  input: "conv_pw_6_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_6_bn/cond/batchnorm/add_1"
  input: "conv_pw_6_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_relu/Relu"
  op: "Relu"
  input: "conv_pw_6_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_pw_6_relu/Minimum"
  op: "Minimum"
  input: "conv_pw_6_relu/Relu"
  input: "conv_pw_6_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_7/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_7/Pad"
  op: "Pad"
  input: "conv_pw_6_relu/Minimum"
  input: "conv_pad_7/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_7/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5810661
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_7/random_uniform/max"
  input: "conv_dw_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_7/random_uniform/RandomUniform"
  input: "conv_dw_7/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7/random_uniform"
  op: "Add"
  input: "conv_dw_7/random_uniform/mul"
  input: "conv_dw_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_7/depthwise_kernel"
  input: "conv_dw_7/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_7/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_7/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_7/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_7/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_7/Pad"
  input: "conv_dw_7/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_7_bn/gamma"
  input: "conv_dw_7_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_7_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_7_bn/beta"
  input: "conv_dw_7_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/beta/read"
  op: "Identity"
  input: "conv_dw_7_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_7_bn/moving_mean"
  input: "conv_dw_7_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_7_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_7_bn/moving_variance"
  input: "conv_dw_7_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_7_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_7/depthwise"
  input: "conv_dw_7_bn/gamma/read"
  input: "conv_dw_7_bn/beta/read"
  input: "conv_dw_7_bn/Const_4"
  input: "conv_dw_7_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/Shape"
  op: "Shape"
  input: "conv_dw_7/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_7_bn/Shape"
  input: "conv_dw_7_bn/strided_slice/stack"
  input: "conv_dw_7_bn/strided_slice/stack_1"
  input: "conv_dw_7_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_7_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_7/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_7_bn/Shape_1"
  input: "conv_dw_7_bn/strided_slice_1/stack"
  input: "conv_dw_7_bn/strided_slice_1/stack_1"
  input: "conv_dw_7_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_7_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_7/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_7_bn/Shape_2"
  input: "conv_dw_7_bn/strided_slice_2/stack"
  input: "conv_dw_7_bn/strided_slice_2/stack_1"
  input: "conv_dw_7_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_7_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_7_bn/strided_slice"
  input: "conv_dw_7_bn/strided_slice_1"
  input: "conv_dw_7_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_7_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/range"
  op: "Range"
  input: "conv_dw_7_bn/range/start"
  input: "conv_dw_7_bn/Rank"
  input: "conv_dw_7_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_7_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_7_bn/strided_slice"
  input: "conv_dw_7_bn/strided_slice_1"
  input: "conv_dw_7_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_7_bn/Prod"
  op: "Prod"
  input: "conv_dw_7_bn/Prod/input"
  input: "conv_dw_7_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/Cast"
  op: "Cast"
  input: "conv_dw_7_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_7_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/sub"
  op: "Sub"
  input: "conv_dw_7_bn/Cast"
  input: "conv_dw_7_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_7_bn/Cast"
  input: "conv_dw_7_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/mul"
  op: "Mul"
  input: "conv_dw_7_bn/FusedBatchNorm:2"
  input: "conv_dw_7_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_7_bn/moving_mean/biased"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_7_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_7_bn/moving_mean/local_step"
  input: "conv_dw_7_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_7_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_7_bn/moving_mean/biased/read"
  input: "conv_dw_7_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub"
  input: "conv_dw_7_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/conv_dw_7_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_7_bn/moving_mean/biased"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_7_bn/moving_mean/local_step"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_7_bn/moving_mean/biased"
  input: "^conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/AssignAdd"
  input: "^conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/conv_dw_7_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/AssignAdd"
  input: "^conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/conv_dw_7_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_1/x"
  input: "conv_dw_7_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_7_bn/moving_mean/local_step"
  input: "^conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/AssignAdd"
  input: "^conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/conv_dw_7_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_1"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/AssignAdd"
  input: "^conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/conv_dw_7_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_2/x"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/read"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_7_bn/moving_mean/read"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_7_bn/moving_mean"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_7_bn/moving_variance/biased"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_7_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_7_bn/moving_variance/local_step"
  input: "conv_dw_7_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_7_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_7_bn/moving_variance/biased/read"
  input: "conv_dw_7_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub"
  input: "conv_dw_7_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/conv_dw_7_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_7_bn/moving_variance/biased"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_7_bn/moving_variance/local_step"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_7_bn/moving_variance/biased"
  input: "^conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/AssignAdd"
  input: "^conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/conv_dw_7_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/AssignAdd"
  input: "^conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/conv_dw_7_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_1/x"
  input: "conv_dw_7_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_7_bn/moving_variance/local_step"
  input: "^conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/AssignAdd"
  input: "^conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/conv_dw_7_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_1"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/AssignAdd"
  input: "^conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/conv_dw_7_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_2/x"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/read"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_7_bn/moving_variance/read"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_7_bn/moving_variance"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_7_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_7_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_7_bn/FusedBatchNorm"
  input: "conv_dw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_dw_7_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_dw_7_bn/cond/batchnorm/add/Switch"
  input: "conv_dw_7_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_dw_7_bn/moving_variance/read"
  input: "conv_dw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_dw_7_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_dw_7_bn/cond/batchnorm/Rsqrt"
  input: "conv_dw_7_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_dw_7_bn/gamma/read"
  input: "conv_dw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_dw_7_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_dw_7_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_dw_7/depthwise"
  input: "conv_dw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_dw_7_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_dw_7_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_dw_7_bn/moving_mean/read"
  input: "conv_dw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_dw_7_bn/cond/batchnorm/sub/Switch"
  input: "conv_dw_7_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_dw_7_bn/beta/read"
  input: "conv_dw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_dw_7_bn/cond/batchnorm/mul_1"
  input: "conv_dw_7_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_7_bn/cond/batchnorm/add_1"
  input: "conv_dw_7_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_relu/Relu"
  op: "Relu"
  input: "conv_dw_7_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_dw_7_relu/Minimum"
  op: "Minimum"
  input: "conv_dw_7_relu/Relu"
  input: "conv_dw_7_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_7/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4710071
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_7/random_uniform/max"
  input: "conv_pw_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_7/random_uniform/RandomUniform"
  input: "conv_pw_7/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7/random_uniform"
  op: "Add"
  input: "conv_pw_7/random_uniform/mul"
  input: "conv_pw_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7/kernel/Assign"
  op: "Assign"
  input: "conv_pw_7/kernel"
  input: "conv_pw_7/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7/kernel/read"
  op: "Identity"
  input: "conv_pw_7/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_7/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_7/convolution"
  op: "Conv2D"
  input: "conv_dw_7_relu/Minimum"
  input: "conv_pw_7/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_7_bn/gamma"
  input: "conv_pw_7_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_7_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_7_bn/beta"
  input: "conv_pw_7_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/beta/read"
  op: "Identity"
  input: "conv_pw_7_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_7_bn/moving_mean"
  input: "conv_pw_7_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_7_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_7_bn/moving_variance"
  input: "conv_pw_7_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_7_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_7/convolution"
  input: "conv_pw_7_bn/gamma/read"
  input: "conv_pw_7_bn/beta/read"
  input: "conv_pw_7_bn/Const_4"
  input: "conv_pw_7_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/Shape"
  op: "Shape"
  input: "conv_pw_7/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_7_bn/Shape"
  input: "conv_pw_7_bn/strided_slice/stack"
  input: "conv_pw_7_bn/strided_slice/stack_1"
  input: "conv_pw_7_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_7_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_7/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_7_bn/Shape_1"
  input: "conv_pw_7_bn/strided_slice_1/stack"
  input: "conv_pw_7_bn/strided_slice_1/stack_1"
  input: "conv_pw_7_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_7_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_7/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_7_bn/Shape_2"
  input: "conv_pw_7_bn/strided_slice_2/stack"
  input: "conv_pw_7_bn/strided_slice_2/stack_1"
  input: "conv_pw_7_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_7_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_7_bn/strided_slice"
  input: "conv_pw_7_bn/strided_slice_1"
  input: "conv_pw_7_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_7_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/range"
  op: "Range"
  input: "conv_pw_7_bn/range/start"
  input: "conv_pw_7_bn/Rank"
  input: "conv_pw_7_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_7_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_7_bn/strided_slice"
  input: "conv_pw_7_bn/strided_slice_1"
  input: "conv_pw_7_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_7_bn/Prod"
  op: "Prod"
  input: "conv_pw_7_bn/Prod/input"
  input: "conv_pw_7_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/Cast"
  op: "Cast"
  input: "conv_pw_7_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_7_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/sub"
  op: "Sub"
  input: "conv_pw_7_bn/Cast"
  input: "conv_pw_7_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_7_bn/Cast"
  input: "conv_pw_7_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/mul"
  op: "Mul"
  input: "conv_pw_7_bn/FusedBatchNorm:2"
  input: "conv_pw_7_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_7_bn/moving_mean/biased"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_7_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_7_bn/moving_mean/local_step"
  input: "conv_pw_7_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_7_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_7_bn/moving_mean/biased/read"
  input: "conv_pw_7_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub"
  input: "conv_pw_7_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/conv_pw_7_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_7_bn/moving_mean/biased"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_7_bn/moving_mean/local_step"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_7_bn/moving_mean/biased"
  input: "^conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/AssignAdd"
  input: "^conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/conv_pw_7_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/AssignAdd"
  input: "^conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/conv_pw_7_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_1/x"
  input: "conv_pw_7_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_7_bn/moving_mean/local_step"
  input: "^conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/AssignAdd"
  input: "^conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/conv_pw_7_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_1"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/AssignAdd"
  input: "^conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/conv_pw_7_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_2/x"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/read"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_7_bn/moving_mean/read"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_7_bn/moving_mean"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_7_bn/moving_variance/biased"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_7_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_7_bn/moving_variance/local_step"
  input: "conv_pw_7_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_7_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_7_bn/moving_variance/biased/read"
  input: "conv_pw_7_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub"
  input: "conv_pw_7_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/conv_pw_7_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_7_bn/moving_variance/biased"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_7_bn/moving_variance/local_step"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_7_bn/moving_variance/biased"
  input: "^conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/AssignAdd"
  input: "^conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/conv_pw_7_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/AssignAdd"
  input: "^conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/conv_pw_7_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_1/x"
  input: "conv_pw_7_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_7_bn/moving_variance/local_step"
  input: "^conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/AssignAdd"
  input: "^conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/conv_pw_7_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_1"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/AssignAdd"
  input: "^conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/conv_pw_7_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_2/x"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/read"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_7_bn/moving_variance/read"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_7_bn/moving_variance"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_7_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_7_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_7_bn/FusedBatchNorm"
  input: "conv_pw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_pw_7_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_pw_7_bn/cond/batchnorm/add/Switch"
  input: "conv_pw_7_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_pw_7_bn/moving_variance/read"
  input: "conv_pw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_pw_7_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_pw_7_bn/cond/batchnorm/Rsqrt"
  input: "conv_pw_7_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_pw_7_bn/gamma/read"
  input: "conv_pw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_pw_7_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_pw_7_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_pw_7/convolution"
  input: "conv_pw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_pw_7_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_pw_7_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_pw_7_bn/moving_mean/read"
  input: "conv_pw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_pw_7_bn/cond/batchnorm/sub/Switch"
  input: "conv_pw_7_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_pw_7_bn/beta/read"
  input: "conv_pw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_pw_7_bn/cond/batchnorm/mul_1"
  input: "conv_pw_7_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_7_bn/cond/batchnorm/add_1"
  input: "conv_pw_7_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_relu/Relu"
  op: "Relu"
  input: "conv_pw_7_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_pw_7_relu/Minimum"
  op: "Minimum"
  input: "conv_pw_7_relu/Relu"
  input: "conv_pw_7_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_8/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_8/Pad"
  op: "Pad"
  input: "conv_pw_7_relu/Minimum"
  input: "conv_pad_8/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_8/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_8/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv_dw_8/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv_dw_8/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_8/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1773259
    }
  }
}
node {
  name: "conv_dw_8/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_8/random_uniform/max"
  input: "conv_dw_8/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_8/random_uniform/RandomUniform"
  input: "conv_dw_8/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8/random_uniform"
  op: "Add"
  input: "conv_dw_8/random_uniform/mul"
  input: "conv_dw_8/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_8/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_8/depthwise_kernel"
  input: "conv_dw_8/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_8/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_8/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_8/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_8/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_8/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_8/Pad"
  input: "conv_dw_8/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_8_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_8_bn/gamma"
  input: "conv_dw_8_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_8_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_8_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_8_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_8_bn/beta"
  input: "conv_dw_8_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_8_bn/beta/read"
  op: "Identity"
  input: "conv_dw_8_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_8_bn/moving_mean"
  input: "conv_dw_8_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_8_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_8_bn/moving_variance"
  input: "conv_dw_8_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_8_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_8/depthwise"
  input: "conv_dw_8_bn/gamma/read"
  input: "conv_dw_8_bn/beta/read"
  input: "conv_dw_8_bn/Const_4"
  input: "conv_dw_8_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_8_bn/Shape"
  op: "Shape"
  input: "conv_dw_8/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_8_bn/Shape"
  input: "conv_dw_8_bn/strided_slice/stack"
  input: "conv_dw_8_bn/strided_slice/stack_1"
  input: "conv_dw_8_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_8_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_8/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_8_bn/Shape_1"
  input: "conv_dw_8_bn/strided_slice_1/stack"
  input: "conv_dw_8_bn/strided_slice_1/stack_1"
  input: "conv_dw_8_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_8_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_8/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_8_bn/Shape_2"
  input: "conv_dw_8_bn/strided_slice_2/stack"
  input: "conv_dw_8_bn/strided_slice_2/stack_1"
  input: "conv_dw_8_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_8_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_8_bn/strided_slice"
  input: "conv_dw_8_bn/strided_slice_1"
  input: "conv_dw_8_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_8_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/range"
  op: "Range"
  input: "conv_dw_8_bn/range/start"
  input: "conv_dw_8_bn/Rank"
  input: "conv_dw_8_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_8_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_8_bn/strided_slice"
  input: "conv_dw_8_bn/strided_slice_1"
  input: "conv_dw_8_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_8_bn/Prod"
  op: "Prod"
  input: "conv_dw_8_bn/Prod/input"
  input: "conv_dw_8_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_8_bn/Cast"
  op: "Cast"
  input: "conv_dw_8_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_8_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/sub"
  op: "Sub"
  input: "conv_dw_8_bn/Cast"
  input: "conv_dw_8_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_8_bn/Cast"
  input: "conv_dw_8_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/mul"
  op: "Mul"
  input: "conv_dw_8_bn/FusedBatchNorm:2"
  input: "conv_dw_8_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_8_bn/moving_mean/biased"
  input: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_8_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_8_bn/moving_mean/local_step"
  input: "conv_dw_8_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_8_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_8_bn/moving_mean/biased/read"
  input: "conv_dw_8_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/sub"
  input: "conv_dw_8_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/conv_dw_8_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_8_bn/moving_mean/biased"
  input: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_8_bn/moving_mean/local_step"
  input: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_8_bn/moving_mean/biased"
  input: "^conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/AssignAdd"
  input: "^conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/conv_dw_8_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/AssignAdd"
  input: "^conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/conv_dw_8_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/sub_1/x"
  input: "conv_dw_8_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_8_bn/moving_mean/local_step"
  input: "^conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/AssignAdd"
  input: "^conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/conv_dw_8_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/sub_1"
  input: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/AssignAdd"
  input: "^conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/conv_dw_8_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/sub_2/x"
  input: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/read"
  input: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_8_bn/moving_mean/read"
  input: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_8_bn/moving_mean"
  input: "conv_dw_8_bn/AssignMovingAvg/conv_dw_8_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_8_bn/moving_variance/biased"
  input: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_8_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_8_bn/moving_variance/local_step"
  input: "conv_dw_8_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_8_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_8_bn/moving_variance/biased/read"
  input: "conv_dw_8_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/sub"
  input: "conv_dw_8_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/conv_dw_8_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_8_bn/moving_variance/biased"
  input: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_8_bn/moving_variance/local_step"
  input: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_8_bn/moving_variance/biased"
  input: "^conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/AssignAdd"
  input: "^conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/conv_dw_8_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/AssignAdd"
  input: "^conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/conv_dw_8_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/sub_1/x"
  input: "conv_dw_8_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_8_bn/moving_variance/local_step"
  input: "^conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/AssignAdd"
  input: "^conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/conv_dw_8_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/sub_1"
  input: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/AssignAdd"
  input: "^conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/conv_dw_8_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/sub_2/x"
  input: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/read"
  input: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_8_bn/moving_variance/read"
  input: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_8_bn/moving_variance"
  input: "conv_dw_8_bn/AssignMovingAvg_1/conv_dw_8_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_8_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_8_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_8_bn/FusedBatchNorm"
  input: "conv_dw_8_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_dw_8_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_dw_8_bn/cond/batchnorm/add/Switch"
  input: "conv_dw_8_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_dw_8_bn/moving_variance/read"
  input: "conv_dw_8_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_dw_8_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_dw_8_bn/cond/batchnorm/Rsqrt"
  input: "conv_dw_8_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_dw_8_bn/gamma/read"
  input: "conv_dw_8_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_dw_8_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_dw_8_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_dw_8/depthwise"
  input: "conv_dw_8_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_dw_8_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_dw_8_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_dw_8_bn/moving_mean/read"
  input: "conv_dw_8_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_dw_8_bn/cond/batchnorm/sub/Switch"
  input: "conv_dw_8_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_dw_8_bn/beta/read"
  input: "conv_dw_8_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_dw_8_bn/cond/batchnorm/mul_1"
  input: "conv_dw_8_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_8_bn/cond/batchnorm/add_1"
  input: "conv_dw_8_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_relu/Relu"
  op: "Relu"
  input: "conv_dw_8_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_dw_8_relu/Minimum"
  op: "Minimum"
  input: "conv_dw_8_relu/Relu"
  input: "conv_dw_8_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_8/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "conv_pw_8/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "conv_pw_8/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_8/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4789775
    }
  }
}
node {
  name: "conv_pw_8/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_8/random_uniform/max"
  input: "conv_pw_8/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_8/random_uniform/RandomUniform"
  input: "conv_pw_8/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8/random_uniform"
  op: "Add"
  input: "conv_pw_8/random_uniform/mul"
  input: "conv_pw_8/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_8/kernel/Assign"
  op: "Assign"
  input: "conv_pw_8/kernel"
  input: "conv_pw_8/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_8/kernel/read"
  op: "Identity"
  input: "conv_pw_8/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_8/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_8/convolution"
  op: "Conv2D"
  input: "conv_dw_8_relu/Minimum"
  input: "conv_pw_8/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_8_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_8_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_8_bn/gamma"
  input: "conv_pw_8_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_8_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_8_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_8_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_8_bn/beta"
  input: "conv_pw_8_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_8_bn/beta/read"
  op: "Identity"
  input: "conv_pw_8_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_8_bn/moving_mean"
  input: "conv_pw_8_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_8_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_8_bn/moving_variance"
  input: "conv_pw_8_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_8_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_8/convolution"
  input: "conv_pw_8_bn/gamma/read"
  input: "conv_pw_8_bn/beta/read"
  input: "conv_pw_8_bn/Const_4"
  input: "conv_pw_8_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_8_bn/Shape"
  op: "Shape"
  input: "conv_pw_8/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_8_bn/Shape"
  input: "conv_pw_8_bn/strided_slice/stack"
  input: "conv_pw_8_bn/strided_slice/stack_1"
  input: "conv_pw_8_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_8_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_8/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_8_bn/Shape_1"
  input: "conv_pw_8_bn/strided_slice_1/stack"
  input: "conv_pw_8_bn/strided_slice_1/stack_1"
  input: "conv_pw_8_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_8_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_8/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_8_bn/Shape_2"
  input: "conv_pw_8_bn/strided_slice_2/stack"
  input: "conv_pw_8_bn/strided_slice_2/stack_1"
  input: "conv_pw_8_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_8_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_8_bn/strided_slice"
  input: "conv_pw_8_bn/strided_slice_1"
  input: "conv_pw_8_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_8_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/range"
  op: "Range"
  input: "conv_pw_8_bn/range/start"
  input: "conv_pw_8_bn/Rank"
  input: "conv_pw_8_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_8_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_8_bn/strided_slice"
  input: "conv_pw_8_bn/strided_slice_1"
  input: "conv_pw_8_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_8_bn/Prod"
  op: "Prod"
  input: "conv_pw_8_bn/Prod/input"
  input: "conv_pw_8_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_8_bn/Cast"
  op: "Cast"
  input: "conv_pw_8_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_8_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/sub"
  op: "Sub"
  input: "conv_pw_8_bn/Cast"
  input: "conv_pw_8_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_8_bn/Cast"
  input: "conv_pw_8_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/mul"
  op: "Mul"
  input: "conv_pw_8_bn/FusedBatchNorm:2"
  input: "conv_pw_8_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_8_bn/moving_mean/biased"
  input: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_8_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_8_bn/moving_mean/local_step"
  input: "conv_pw_8_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_8_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_8_bn/moving_mean/biased/read"
  input: "conv_pw_8_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/sub"
  input: "conv_pw_8_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/conv_pw_8_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_8_bn/moving_mean/biased"
  input: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_8_bn/moving_mean/local_step"
  input: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_8_bn/moving_mean/biased"
  input: "^conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/AssignAdd"
  input: "^conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/conv_pw_8_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/AssignAdd"
  input: "^conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/conv_pw_8_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/sub_1/x"
  input: "conv_pw_8_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_8_bn/moving_mean/local_step"
  input: "^conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/AssignAdd"
  input: "^conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/conv_pw_8_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/sub_1"
  input: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/AssignAdd"
  input: "^conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/conv_pw_8_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/sub_2/x"
  input: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/read"
  input: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_8_bn/moving_mean/read"
  input: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_8_bn/moving_mean"
  input: "conv_pw_8_bn/AssignMovingAvg/conv_pw_8_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_8_bn/moving_variance/biased"
  input: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_8_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_8_bn/moving_variance/local_step"
  input: "conv_pw_8_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_8_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_8_bn/moving_variance/biased/read"
  input: "conv_pw_8_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/sub"
  input: "conv_pw_8_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/conv_pw_8_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_8_bn/moving_variance/biased"
  input: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_8_bn/moving_variance/local_step"
  input: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_8_bn/moving_variance/biased"
  input: "^conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/AssignAdd"
  input: "^conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/conv_pw_8_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/AssignAdd"
  input: "^conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/conv_pw_8_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/sub_1/x"
  input: "conv_pw_8_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_8_bn/moving_variance/local_step"
  input: "^conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/AssignAdd"
  input: "^conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/conv_pw_8_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/sub_1"
  input: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/AssignAdd"
  input: "^conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/conv_pw_8_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/sub_2/x"
  input: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/read"
  input: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_8_bn/moving_variance/read"
  input: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_8_bn/moving_variance"
  input: "conv_pw_8_bn/AssignMovingAvg_1/conv_pw_8_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_8_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_8_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_8_bn/FusedBatchNorm"
  input: "conv_pw_8_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_pw_8_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_pw_8_bn/cond/batchnorm/add/Switch"
  input: "conv_pw_8_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_pw_8_bn/moving_variance/read"
  input: "conv_pw_8_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_pw_8_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_pw_8_bn/cond/batchnorm/Rsqrt"
  input: "conv_pw_8_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_pw_8_bn/gamma/read"
  input: "conv_pw_8_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_pw_8_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_pw_8_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_pw_8/convolution"
  input: "conv_pw_8_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_pw_8_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_pw_8_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_pw_8_bn/moving_mean/read"
  input: "conv_pw_8_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_pw_8_bn/cond/batchnorm/sub/Switch"
  input: "conv_pw_8_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_pw_8_bn/beta/read"
  input: "conv_pw_8_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_pw_8_bn/cond/batchnorm/mul_1"
  input: "conv_pw_8_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_8_bn/cond/batchnorm/add_1"
  input: "conv_pw_8_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_relu/Relu"
  op: "Relu"
  input: "conv_pw_8_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_pw_8_relu/Minimum"
  op: "Minimum"
  input: "conv_pw_8_relu/Relu"
  input: "conv_pw_8_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_9/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_9/Pad"
  op: "Pad"
  input: "conv_pw_8_relu/Minimum"
  input: "conv_pad_9/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_9/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_9/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv_dw_9/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv_dw_9/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_9/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6951380
    }
  }
}
node {
  name: "conv_dw_9/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_9/random_uniform/max"
  input: "conv_dw_9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_9/random_uniform/RandomUniform"
  input: "conv_dw_9/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9/random_uniform"
  op: "Add"
  input: "conv_dw_9/random_uniform/mul"
  input: "conv_dw_9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_9/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_9/depthwise_kernel"
  input: "conv_dw_9/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_9/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_9/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_9/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_9/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_9/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_9/Pad"
  input: "conv_dw_9/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_9_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_9_bn/gamma"
  input: "conv_dw_9_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_9_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_9_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_9_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_9_bn/beta"
  input: "conv_dw_9_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_9_bn/beta/read"
  op: "Identity"
  input: "conv_dw_9_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_9_bn/moving_mean"
  input: "conv_dw_9_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_9_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_9_bn/moving_variance"
  input: "conv_dw_9_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_9_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_9/depthwise"
  input: "conv_dw_9_bn/gamma/read"
  input: "conv_dw_9_bn/beta/read"
  input: "conv_dw_9_bn/Const_4"
  input: "conv_dw_9_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_9_bn/Shape"
  op: "Shape"
  input: "conv_dw_9/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_9_bn/Shape"
  input: "conv_dw_9_bn/strided_slice/stack"
  input: "conv_dw_9_bn/strided_slice/stack_1"
  input: "conv_dw_9_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_9_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_9/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_9_bn/Shape_1"
  input: "conv_dw_9_bn/strided_slice_1/stack"
  input: "conv_dw_9_bn/strided_slice_1/stack_1"
  input: "conv_dw_9_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_9_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_9/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_9_bn/Shape_2"
  input: "conv_dw_9_bn/strided_slice_2/stack"
  input: "conv_dw_9_bn/strided_slice_2/stack_1"
  input: "conv_dw_9_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_9_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_9_bn/strided_slice"
  input: "conv_dw_9_bn/strided_slice_1"
  input: "conv_dw_9_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_9_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/range"
  op: "Range"
  input: "conv_dw_9_bn/range/start"
  input: "conv_dw_9_bn/Rank"
  input: "conv_dw_9_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_9_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_9_bn/strided_slice"
  input: "conv_dw_9_bn/strided_slice_1"
  input: "conv_dw_9_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_9_bn/Prod"
  op: "Prod"
  input: "conv_dw_9_bn/Prod/input"
  input: "conv_dw_9_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_9_bn/Cast"
  op: "Cast"
  input: "conv_dw_9_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_9_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/sub"
  op: "Sub"
  input: "conv_dw_9_bn/Cast"
  input: "conv_dw_9_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_9_bn/Cast"
  input: "conv_dw_9_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/mul"
  op: "Mul"
  input: "conv_dw_9_bn/FusedBatchNorm:2"
  input: "conv_dw_9_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_9_bn/moving_mean/biased"
  input: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_9_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_9_bn/moving_mean/local_step"
  input: "conv_dw_9_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_9_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_9_bn/moving_mean/biased/read"
  input: "conv_dw_9_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/sub"
  input: "conv_dw_9_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/conv_dw_9_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_9_bn/moving_mean/biased"
  input: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_9_bn/moving_mean/local_step"
  input: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_9_bn/moving_mean/biased"
  input: "^conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/AssignAdd"
  input: "^conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/conv_dw_9_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/AssignAdd"
  input: "^conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/conv_dw_9_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/sub_1/x"
  input: "conv_dw_9_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_9_bn/moving_mean/local_step"
  input: "^conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/AssignAdd"
  input: "^conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/conv_dw_9_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/sub_1"
  input: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/AssignAdd"
  input: "^conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/conv_dw_9_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/sub_2/x"
  input: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/read"
  input: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_9_bn/moving_mean/read"
  input: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_9_bn/moving_mean"
  input: "conv_dw_9_bn/AssignMovingAvg/conv_dw_9_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_9_bn/moving_variance/biased"
  input: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_9_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_9_bn/moving_variance/local_step"
  input: "conv_dw_9_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_9_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_9_bn/moving_variance/biased/read"
  input: "conv_dw_9_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/sub"
  input: "conv_dw_9_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/conv_dw_9_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_9_bn/moving_variance/biased"
  input: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_9_bn/moving_variance/local_step"
  input: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_9_bn/moving_variance/biased"
  input: "^conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/AssignAdd"
  input: "^conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/conv_dw_9_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/AssignAdd"
  input: "^conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/conv_dw_9_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/sub_1/x"
  input: "conv_dw_9_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_9_bn/moving_variance/local_step"
  input: "^conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/AssignAdd"
  input: "^conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/conv_dw_9_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/sub_1"
  input: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/AssignAdd"
  input: "^conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/conv_dw_9_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/sub_2/x"
  input: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/read"
  input: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_9_bn/moving_variance/read"
  input: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_9_bn/moving_variance"
  input: "conv_dw_9_bn/AssignMovingAvg_1/conv_dw_9_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_9_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_9_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_9_bn/FusedBatchNorm"
  input: "conv_dw_9_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_dw_9_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_dw_9_bn/cond/batchnorm/add/Switch"
  input: "conv_dw_9_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_dw_9_bn/moving_variance/read"
  input: "conv_dw_9_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_dw_9_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_dw_9_bn/cond/batchnorm/Rsqrt"
  input: "conv_dw_9_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_dw_9_bn/gamma/read"
  input: "conv_dw_9_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_dw_9_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_dw_9_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_dw_9/depthwise"
  input: "conv_dw_9_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_dw_9_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_dw_9_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_dw_9_bn/moving_mean/read"
  input: "conv_dw_9_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_dw_9_bn/cond/batchnorm/sub/Switch"
  input: "conv_dw_9_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_dw_9_bn/beta/read"
  input: "conv_dw_9_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_dw_9_bn/cond/batchnorm/mul_1"
  input: "conv_dw_9_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_9_bn/cond/batchnorm/add_1"
  input: "conv_dw_9_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_relu/Relu"
  op: "Relu"
  input: "conv_dw_9_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_dw_9_relu/Minimum"
  op: "Minimum"
  input: "conv_dw_9_relu/Relu"
  input: "conv_dw_9_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_9/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "conv_pw_9/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "conv_pw_9/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_9/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5320776
    }
  }
}
node {
  name: "conv_pw_9/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_9/random_uniform/max"
  input: "conv_pw_9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_9/random_uniform/RandomUniform"
  input: "conv_pw_9/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9/random_uniform"
  op: "Add"
  input: "conv_pw_9/random_uniform/mul"
  input: "conv_pw_9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_9/kernel/Assign"
  op: "Assign"
  input: "conv_pw_9/kernel"
  input: "conv_pw_9/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_9/kernel/read"
  op: "Identity"
  input: "conv_pw_9/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_9/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_9/convolution"
  op: "Conv2D"
  input: "conv_dw_9_relu/Minimum"
  input: "conv_pw_9/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_9_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_9_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_9_bn/gamma"
  input: "conv_pw_9_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_9_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_9_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_9_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_9_bn/beta"
  input: "conv_pw_9_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_9_bn/beta/read"
  op: "Identity"
  input: "conv_pw_9_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_9_bn/moving_mean"
  input: "conv_pw_9_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_9_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_9_bn/moving_variance"
  input: "conv_pw_9_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_9_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_9/convolution"
  input: "conv_pw_9_bn/gamma/read"
  input: "conv_pw_9_bn/beta/read"
  input: "conv_pw_9_bn/Const_4"
  input: "conv_pw_9_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_9_bn/Shape"
  op: "Shape"
  input: "conv_pw_9/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_9_bn/Shape"
  input: "conv_pw_9_bn/strided_slice/stack"
  input: "conv_pw_9_bn/strided_slice/stack_1"
  input: "conv_pw_9_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_9_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_9/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_9_bn/Shape_1"
  input: "conv_pw_9_bn/strided_slice_1/stack"
  input: "conv_pw_9_bn/strided_slice_1/stack_1"
  input: "conv_pw_9_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_9_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_9/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_9_bn/Shape_2"
  input: "conv_pw_9_bn/strided_slice_2/stack"
  input: "conv_pw_9_bn/strided_slice_2/stack_1"
  input: "conv_pw_9_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_9_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_9_bn/strided_slice"
  input: "conv_pw_9_bn/strided_slice_1"
  input: "conv_pw_9_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_9_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/range"
  op: "Range"
  input: "conv_pw_9_bn/range/start"
  input: "conv_pw_9_bn/Rank"
  input: "conv_pw_9_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_9_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_9_bn/strided_slice"
  input: "conv_pw_9_bn/strided_slice_1"
  input: "conv_pw_9_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_9_bn/Prod"
  op: "Prod"
  input: "conv_pw_9_bn/Prod/input"
  input: "conv_pw_9_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_9_bn/Cast"
  op: "Cast"
  input: "conv_pw_9_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_9_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/sub"
  op: "Sub"
  input: "conv_pw_9_bn/Cast"
  input: "conv_pw_9_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_9_bn/Cast"
  input: "conv_pw_9_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/mul"
  op: "Mul"
  input: "conv_pw_9_bn/FusedBatchNorm:2"
  input: "conv_pw_9_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_9_bn/moving_mean/biased"
  input: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_9_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_9_bn/moving_mean/local_step"
  input: "conv_pw_9_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_9_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_9_bn/moving_mean/biased/read"
  input: "conv_pw_9_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/sub"
  input: "conv_pw_9_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/conv_pw_9_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_9_bn/moving_mean/biased"
  input: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_9_bn/moving_mean/local_step"
  input: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_9_bn/moving_mean/biased"
  input: "^conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/AssignAdd"
  input: "^conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/conv_pw_9_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/AssignAdd"
  input: "^conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/conv_pw_9_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/sub_1/x"
  input: "conv_pw_9_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_9_bn/moving_mean/local_step"
  input: "^conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/AssignAdd"
  input: "^conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/conv_pw_9_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/sub_1"
  input: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/AssignAdd"
  input: "^conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/conv_pw_9_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/sub_2/x"
  input: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/read"
  input: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_9_bn/moving_mean/read"
  input: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_9_bn/moving_mean"
  input: "conv_pw_9_bn/AssignMovingAvg/conv_pw_9_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_9_bn/moving_variance/biased"
  input: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_9_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_9_bn/moving_variance/local_step"
  input: "conv_pw_9_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_9_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_9_bn/moving_variance/biased/read"
  input: "conv_pw_9_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/sub"
  input: "conv_pw_9_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/conv_pw_9_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_9_bn/moving_variance/biased"
  input: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_9_bn/moving_variance/local_step"
  input: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_9_bn/moving_variance/biased"
  input: "^conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/AssignAdd"
  input: "^conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/conv_pw_9_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/AssignAdd"
  input: "^conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/conv_pw_9_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/sub_1/x"
  input: "conv_pw_9_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_9_bn/moving_variance/local_step"
  input: "^conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/AssignAdd"
  input: "^conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/conv_pw_9_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/sub_1"
  input: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/AssignAdd"
  input: "^conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/conv_pw_9_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/sub_2/x"
  input: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/read"
  input: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_9_bn/moving_variance/read"
  input: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_9_bn/moving_variance"
  input: "conv_pw_9_bn/AssignMovingAvg_1/conv_pw_9_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_9_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_9_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_9_bn/FusedBatchNorm"
  input: "conv_pw_9_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_pw_9_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_pw_9_bn/cond/batchnorm/add/Switch"
  input: "conv_pw_9_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_pw_9_bn/moving_variance/read"
  input: "conv_pw_9_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_pw_9_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_pw_9_bn/cond/batchnorm/Rsqrt"
  input: "conv_pw_9_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_pw_9_bn/gamma/read"
  input: "conv_pw_9_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_pw_9_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_pw_9_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_pw_9/convolution"
  input: "conv_pw_9_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_pw_9_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_pw_9_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_pw_9_bn/moving_mean/read"
  input: "conv_pw_9_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_pw_9_bn/cond/batchnorm/sub/Switch"
  input: "conv_pw_9_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_pw_9_bn/beta/read"
  input: "conv_pw_9_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_pw_9_bn/cond/batchnorm/mul_1"
  input: "conv_pw_9_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_9_bn/cond/batchnorm/add_1"
  input: "conv_pw_9_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_relu/Relu"
  op: "Relu"
  input: "conv_pw_9_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_pw_9_relu/Minimum"
  op: "Minimum"
  input: "conv_pw_9_relu/Relu"
  input: "conv_pw_9_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_10/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_10/Pad"
  op: "Pad"
  input: "conv_pw_9_relu/Minimum"
  input: "conv_pad_10/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_10/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_10/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv_dw_10/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv_dw_10/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_10/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2914610
    }
  }
}
node {
  name: "conv_dw_10/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_10/random_uniform/max"
  input: "conv_dw_10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_10/random_uniform/RandomUniform"
  input: "conv_dw_10/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10/random_uniform"
  op: "Add"
  input: "conv_dw_10/random_uniform/mul"
  input: "conv_dw_10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_10/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_10/depthwise_kernel"
  input: "conv_dw_10/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_10/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_10/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_10/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_10/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_10/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_10/Pad"
  input: "conv_dw_10/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_10_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_10_bn/gamma"
  input: "conv_dw_10_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_10_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_10_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_10_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_10_bn/beta"
  input: "conv_dw_10_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_10_bn/beta/read"
  op: "Identity"
  input: "conv_dw_10_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_10_bn/moving_mean"
  input: "conv_dw_10_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_10_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_10_bn/moving_variance"
  input: "conv_dw_10_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_10_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_10/depthwise"
  input: "conv_dw_10_bn/gamma/read"
  input: "conv_dw_10_bn/beta/read"
  input: "conv_dw_10_bn/Const_4"
  input: "conv_dw_10_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_10_bn/Shape"
  op: "Shape"
  input: "conv_dw_10/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_10_bn/Shape"
  input: "conv_dw_10_bn/strided_slice/stack"
  input: "conv_dw_10_bn/strided_slice/stack_1"
  input: "conv_dw_10_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_10_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_10/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_10_bn/Shape_1"
  input: "conv_dw_10_bn/strided_slice_1/stack"
  input: "conv_dw_10_bn/strided_slice_1/stack_1"
  input: "conv_dw_10_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_10_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_10/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_10_bn/Shape_2"
  input: "conv_dw_10_bn/strided_slice_2/stack"
  input: "conv_dw_10_bn/strided_slice_2/stack_1"
  input: "conv_dw_10_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_10_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_10_bn/strided_slice"
  input: "conv_dw_10_bn/strided_slice_1"
  input: "conv_dw_10_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_10_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/range"
  op: "Range"
  input: "conv_dw_10_bn/range/start"
  input: "conv_dw_10_bn/Rank"
  input: "conv_dw_10_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_10_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_10_bn/strided_slice"
  input: "conv_dw_10_bn/strided_slice_1"
  input: "conv_dw_10_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_10_bn/Prod"
  op: "Prod"
  input: "conv_dw_10_bn/Prod/input"
  input: "conv_dw_10_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_10_bn/Cast"
  op: "Cast"
  input: "conv_dw_10_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_10_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/sub"
  op: "Sub"
  input: "conv_dw_10_bn/Cast"
  input: "conv_dw_10_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_10_bn/Cast"
  input: "conv_dw_10_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/mul"
  op: "Mul"
  input: "conv_dw_10_bn/FusedBatchNorm:2"
  input: "conv_dw_10_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_10_bn/moving_mean/biased"
  input: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_10_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_10_bn/moving_mean/local_step"
  input: "conv_dw_10_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_10_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_10_bn/moving_mean/biased/read"
  input: "conv_dw_10_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/sub"
  input: "conv_dw_10_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/conv_dw_10_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_10_bn/moving_mean/biased"
  input: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_10_bn/moving_mean/local_step"
  input: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_10_bn/moving_mean/biased"
  input: "^conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/AssignAdd"
  input: "^conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/conv_dw_10_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/AssignAdd"
  input: "^conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/conv_dw_10_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/sub_1/x"
  input: "conv_dw_10_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_10_bn/moving_mean/local_step"
  input: "^conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/AssignAdd"
  input: "^conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/conv_dw_10_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/sub_1"
  input: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/AssignAdd"
  input: "^conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/conv_dw_10_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/sub_2/x"
  input: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/read"
  input: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_10_bn/moving_mean/read"
  input: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_10_bn/moving_mean"
  input: "conv_dw_10_bn/AssignMovingAvg/conv_dw_10_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_10_bn/moving_variance/biased"
  input: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_10_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_10_bn/moving_variance/local_step"
  input: "conv_dw_10_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_10_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_10_bn/moving_variance/biased/read"
  input: "conv_dw_10_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/sub"
  input: "conv_dw_10_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/conv_dw_10_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_10_bn/moving_variance/biased"
  input: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_10_bn/moving_variance/local_step"
  input: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_10_bn/moving_variance/biased"
  input: "^conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/AssignAdd"
  input: "^conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/conv_dw_10_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/AssignAdd"
  input: "^conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/conv_dw_10_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/sub_1/x"
  input: "conv_dw_10_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_10_bn/moving_variance/local_step"
  input: "^conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/AssignAdd"
  input: "^conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/conv_dw_10_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/sub_1"
  input: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/AssignAdd"
  input: "^conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/conv_dw_10_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/sub_2/x"
  input: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/read"
  input: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_10_bn/moving_variance/read"
  input: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_10_bn/moving_variance"
  input: "conv_dw_10_bn/AssignMovingAvg_1/conv_dw_10_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_10_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_10_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_10_bn/FusedBatchNorm"
  input: "conv_dw_10_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_dw_10_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_dw_10_bn/cond/batchnorm/add/Switch"
  input: "conv_dw_10_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_dw_10_bn/moving_variance/read"
  input: "conv_dw_10_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_dw_10_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_dw_10_bn/cond/batchnorm/Rsqrt"
  input: "conv_dw_10_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_dw_10_bn/gamma/read"
  input: "conv_dw_10_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_dw_10_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_dw_10_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_dw_10/depthwise"
  input: "conv_dw_10_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_dw_10_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_dw_10_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_dw_10_bn/moving_mean/read"
  input: "conv_dw_10_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_dw_10_bn/cond/batchnorm/sub/Switch"
  input: "conv_dw_10_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_dw_10_bn/beta/read"
  input: "conv_dw_10_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_dw_10_bn/cond/batchnorm/mul_1"
  input: "conv_dw_10_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_10_bn/cond/batchnorm/add_1"
  input: "conv_dw_10_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_relu/Relu"
  op: "Relu"
  input: "conv_dw_10_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_dw_10_relu/Minimum"
  op: "Minimum"
  input: "conv_dw_10_relu/Relu"
  input: "conv_dw_10_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_10/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "conv_pw_10/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "conv_pw_10/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_10/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3931515
    }
  }
}
node {
  name: "conv_pw_10/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_10/random_uniform/max"
  input: "conv_pw_10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_10/random_uniform/RandomUniform"
  input: "conv_pw_10/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10/random_uniform"
  op: "Add"
  input: "conv_pw_10/random_uniform/mul"
  input: "conv_pw_10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_10/kernel/Assign"
  op: "Assign"
  input: "conv_pw_10/kernel"
  input: "conv_pw_10/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_10/kernel/read"
  op: "Identity"
  input: "conv_pw_10/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_10/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_10/convolution"
  op: "Conv2D"
  input: "conv_dw_10_relu/Minimum"
  input: "conv_pw_10/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_10_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_10_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_10_bn/gamma"
  input: "conv_pw_10_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_10_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_10_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_10_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_10_bn/beta"
  input: "conv_pw_10_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_10_bn/beta/read"
  op: "Identity"
  input: "conv_pw_10_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_10_bn/moving_mean"
  input: "conv_pw_10_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_10_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_10_bn/moving_variance"
  input: "conv_pw_10_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_10_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_10/convolution"
  input: "conv_pw_10_bn/gamma/read"
  input: "conv_pw_10_bn/beta/read"
  input: "conv_pw_10_bn/Const_4"
  input: "conv_pw_10_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_10_bn/Shape"
  op: "Shape"
  input: "conv_pw_10/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_10_bn/Shape"
  input: "conv_pw_10_bn/strided_slice/stack"
  input: "conv_pw_10_bn/strided_slice/stack_1"
  input: "conv_pw_10_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_10_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_10/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_10_bn/Shape_1"
  input: "conv_pw_10_bn/strided_slice_1/stack"
  input: "conv_pw_10_bn/strided_slice_1/stack_1"
  input: "conv_pw_10_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_10_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_10/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_10_bn/Shape_2"
  input: "conv_pw_10_bn/strided_slice_2/stack"
  input: "conv_pw_10_bn/strided_slice_2/stack_1"
  input: "conv_pw_10_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_10_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_10_bn/strided_slice"
  input: "conv_pw_10_bn/strided_slice_1"
  input: "conv_pw_10_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_10_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/range"
  op: "Range"
  input: "conv_pw_10_bn/range/start"
  input: "conv_pw_10_bn/Rank"
  input: "conv_pw_10_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_10_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_10_bn/strided_slice"
  input: "conv_pw_10_bn/strided_slice_1"
  input: "conv_pw_10_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_10_bn/Prod"
  op: "Prod"
  input: "conv_pw_10_bn/Prod/input"
  input: "conv_pw_10_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_10_bn/Cast"
  op: "Cast"
  input: "conv_pw_10_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_10_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/sub"
  op: "Sub"
  input: "conv_pw_10_bn/Cast"
  input: "conv_pw_10_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_10_bn/Cast"
  input: "conv_pw_10_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/mul"
  op: "Mul"
  input: "conv_pw_10_bn/FusedBatchNorm:2"
  input: "conv_pw_10_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_10_bn/moving_mean/biased"
  input: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_10_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_10_bn/moving_mean/local_step"
  input: "conv_pw_10_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_10_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_10_bn/moving_mean/biased/read"
  input: "conv_pw_10_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/sub"
  input: "conv_pw_10_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/conv_pw_10_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_10_bn/moving_mean/biased"
  input: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_10_bn/moving_mean/local_step"
  input: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_10_bn/moving_mean/biased"
  input: "^conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/AssignAdd"
  input: "^conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/conv_pw_10_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/AssignAdd"
  input: "^conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/conv_pw_10_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/sub_1/x"
  input: "conv_pw_10_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_10_bn/moving_mean/local_step"
  input: "^conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/AssignAdd"
  input: "^conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/conv_pw_10_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/sub_1"
  input: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/AssignAdd"
  input: "^conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/conv_pw_10_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/sub_2/x"
  input: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/read"
  input: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_10_bn/moving_mean/read"
  input: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_10_bn/moving_mean"
  input: "conv_pw_10_bn/AssignMovingAvg/conv_pw_10_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_10_bn/moving_variance/biased"
  input: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_10_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_10_bn/moving_variance/local_step"
  input: "conv_pw_10_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_10_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_10_bn/moving_variance/biased/read"
  input: "conv_pw_10_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/sub"
  input: "conv_pw_10_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/conv_pw_10_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_10_bn/moving_variance/biased"
  input: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_10_bn/moving_variance/local_step"
  input: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_10_bn/moving_variance/biased"
  input: "^conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/AssignAdd"
  input: "^conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/conv_pw_10_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/AssignAdd"
  input: "^conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/conv_pw_10_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/sub_1/x"
  input: "conv_pw_10_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_10_bn/moving_variance/local_step"
  input: "^conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/AssignAdd"
  input: "^conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/conv_pw_10_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/sub_1"
  input: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/AssignAdd"
  input: "^conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/conv_pw_10_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/sub_2/x"
  input: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/read"
  input: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_10_bn/moving_variance/read"
  input: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_10_bn/moving_variance"
  input: "conv_pw_10_bn/AssignMovingAvg_1/conv_pw_10_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_10_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_10_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_10_bn/FusedBatchNorm"
  input: "conv_pw_10_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_pw_10_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_pw_10_bn/cond/batchnorm/add/Switch"
  input: "conv_pw_10_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_pw_10_bn/moving_variance/read"
  input: "conv_pw_10_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_pw_10_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_pw_10_bn/cond/batchnorm/Rsqrt"
  input: "conv_pw_10_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_pw_10_bn/gamma/read"
  input: "conv_pw_10_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_pw_10_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_pw_10_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_pw_10/convolution"
  input: "conv_pw_10_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_pw_10_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_pw_10_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_pw_10_bn/moving_mean/read"
  input: "conv_pw_10_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_pw_10_bn/cond/batchnorm/sub/Switch"
  input: "conv_pw_10_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_pw_10_bn/beta/read"
  input: "conv_pw_10_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_pw_10_bn/cond/batchnorm/mul_1"
  input: "conv_pw_10_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_10_bn/cond/batchnorm/add_1"
  input: "conv_pw_10_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_relu/Relu"
  op: "Relu"
  input: "conv_pw_10_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_pw_10_relu/Minimum"
  op: "Minimum"
  input: "conv_pw_10_relu/Relu"
  input: "conv_pw_10_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_11/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_11/Pad"
  op: "Pad"
  input: "conv_pw_10_relu/Minimum"
  input: "conv_pad_11/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_11/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_11/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv_dw_11/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv_dw_11/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_11/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4669158
    }
  }
}
node {
  name: "conv_dw_11/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_11/random_uniform/max"
  input: "conv_dw_11/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_11/random_uniform/RandomUniform"
  input: "conv_dw_11/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11/random_uniform"
  op: "Add"
  input: "conv_dw_11/random_uniform/mul"
  input: "conv_dw_11/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_11/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_11/depthwise_kernel"
  input: "conv_dw_11/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_11/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_11/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_11/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_11/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_11/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_11/Pad"
  input: "conv_dw_11/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_11_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_11_bn/gamma"
  input: "conv_dw_11_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_11_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_11_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_11_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_11_bn/beta"
  input: "conv_dw_11_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_11_bn/beta/read"
  op: "Identity"
  input: "conv_dw_11_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_11_bn/moving_mean"
  input: "conv_dw_11_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_11_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_11_bn/moving_variance"
  input: "conv_dw_11_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_11_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_11/depthwise"
  input: "conv_dw_11_bn/gamma/read"
  input: "conv_dw_11_bn/beta/read"
  input: "conv_dw_11_bn/Const_4"
  input: "conv_dw_11_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_11_bn/Shape"
  op: "Shape"
  input: "conv_dw_11/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_11_bn/Shape"
  input: "conv_dw_11_bn/strided_slice/stack"
  input: "conv_dw_11_bn/strided_slice/stack_1"
  input: "conv_dw_11_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_11_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_11/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_11_bn/Shape_1"
  input: "conv_dw_11_bn/strided_slice_1/stack"
  input: "conv_dw_11_bn/strided_slice_1/stack_1"
  input: "conv_dw_11_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_11_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_11/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_11_bn/Shape_2"
  input: "conv_dw_11_bn/strided_slice_2/stack"
  input: "conv_dw_11_bn/strided_slice_2/stack_1"
  input: "conv_dw_11_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_11_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_11_bn/strided_slice"
  input: "conv_dw_11_bn/strided_slice_1"
  input: "conv_dw_11_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_11_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/range"
  op: "Range"
  input: "conv_dw_11_bn/range/start"
  input: "conv_dw_11_bn/Rank"
  input: "conv_dw_11_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_11_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_11_bn/strided_slice"
  input: "conv_dw_11_bn/strided_slice_1"
  input: "conv_dw_11_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_11_bn/Prod"
  op: "Prod"
  input: "conv_dw_11_bn/Prod/input"
  input: "conv_dw_11_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_11_bn/Cast"
  op: "Cast"
  input: "conv_dw_11_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_11_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/sub"
  op: "Sub"
  input: "conv_dw_11_bn/Cast"
  input: "conv_dw_11_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_11_bn/Cast"
  input: "conv_dw_11_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/mul"
  op: "Mul"
  input: "conv_dw_11_bn/FusedBatchNorm:2"
  input: "conv_dw_11_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_11_bn/moving_mean/biased"
  input: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_11_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_11_bn/moving_mean/local_step"
  input: "conv_dw_11_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_11_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_11_bn/moving_mean/biased/read"
  input: "conv_dw_11_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/sub"
  input: "conv_dw_11_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/conv_dw_11_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_11_bn/moving_mean/biased"
  input: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_11_bn/moving_mean/local_step"
  input: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_11_bn/moving_mean/biased"
  input: "^conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/AssignAdd"
  input: "^conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/conv_dw_11_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/AssignAdd"
  input: "^conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/conv_dw_11_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/sub_1/x"
  input: "conv_dw_11_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_11_bn/moving_mean/local_step"
  input: "^conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/AssignAdd"
  input: "^conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/conv_dw_11_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/sub_1"
  input: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/AssignAdd"
  input: "^conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/conv_dw_11_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/sub_2/x"
  input: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/read"
  input: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_11_bn/moving_mean/read"
  input: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_11_bn/moving_mean"
  input: "conv_dw_11_bn/AssignMovingAvg/conv_dw_11_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_11_bn/moving_variance/biased"
  input: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_11_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_11_bn/moving_variance/local_step"
  input: "conv_dw_11_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_11_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_11_bn/moving_variance/biased/read"
  input: "conv_dw_11_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/sub"
  input: "conv_dw_11_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/conv_dw_11_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_11_bn/moving_variance/biased"
  input: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_11_bn/moving_variance/local_step"
  input: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_11_bn/moving_variance/biased"
  input: "^conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/AssignAdd"
  input: "^conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/conv_dw_11_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/AssignAdd"
  input: "^conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/conv_dw_11_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/sub_1/x"
  input: "conv_dw_11_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_11_bn/moving_variance/local_step"
  input: "^conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/AssignAdd"
  input: "^conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/conv_dw_11_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/sub_1"
  input: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/AssignAdd"
  input: "^conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/conv_dw_11_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/sub_2/x"
  input: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/read"
  input: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_11_bn/moving_variance/read"
  input: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_11_bn/moving_variance"
  input: "conv_dw_11_bn/AssignMovingAvg_1/conv_dw_11_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_11_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_11_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_11_bn/FusedBatchNorm"
  input: "conv_dw_11_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_dw_11_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_dw_11_bn/cond/batchnorm/add/Switch"
  input: "conv_dw_11_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_dw_11_bn/moving_variance/read"
  input: "conv_dw_11_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_dw_11_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_dw_11_bn/cond/batchnorm/Rsqrt"
  input: "conv_dw_11_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_dw_11_bn/gamma/read"
  input: "conv_dw_11_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_dw_11_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_dw_11_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_dw_11/depthwise"
  input: "conv_dw_11_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_dw_11_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_dw_11_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_dw_11_bn/moving_mean/read"
  input: "conv_dw_11_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_dw_11_bn/cond/batchnorm/sub/Switch"
  input: "conv_dw_11_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_dw_11_bn/beta/read"
  input: "conv_dw_11_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_dw_11_bn/cond/batchnorm/mul_1"
  input: "conv_dw_11_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_11_bn/cond/batchnorm/add_1"
  input: "conv_dw_11_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_relu/Relu"
  op: "Relu"
  input: "conv_dw_11_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_dw_11_relu/Minimum"
  op: "Minimum"
  input: "conv_dw_11_relu/Relu"
  input: "conv_dw_11_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_11/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "conv_pw_11/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "conv_pw_11/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_11/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9733630
    }
  }
}
node {
  name: "conv_pw_11/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_11/random_uniform/max"
  input: "conv_pw_11/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_11/random_uniform/RandomUniform"
  input: "conv_pw_11/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11/random_uniform"
  op: "Add"
  input: "conv_pw_11/random_uniform/mul"
  input: "conv_pw_11/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_11/kernel/Assign"
  op: "Assign"
  input: "conv_pw_11/kernel"
  input: "conv_pw_11/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_11/kernel/read"
  op: "Identity"
  input: "conv_pw_11/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_11/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_11/convolution"
  op: "Conv2D"
  input: "conv_dw_11_relu/Minimum"
  input: "conv_pw_11/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_11_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_11_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_11_bn/gamma"
  input: "conv_pw_11_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_11_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_11_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_11_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_11_bn/beta"
  input: "conv_pw_11_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_11_bn/beta/read"
  op: "Identity"
  input: "conv_pw_11_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_11_bn/moving_mean"
  input: "conv_pw_11_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_11_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_11_bn/moving_variance"
  input: "conv_pw_11_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_11_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_11/convolution"
  input: "conv_pw_11_bn/gamma/read"
  input: "conv_pw_11_bn/beta/read"
  input: "conv_pw_11_bn/Const_4"
  input: "conv_pw_11_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_11_bn/Shape"
  op: "Shape"
  input: "conv_pw_11/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_11_bn/Shape"
  input: "conv_pw_11_bn/strided_slice/stack"
  input: "conv_pw_11_bn/strided_slice/stack_1"
  input: "conv_pw_11_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_11_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_11/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_11_bn/Shape_1"
  input: "conv_pw_11_bn/strided_slice_1/stack"
  input: "conv_pw_11_bn/strided_slice_1/stack_1"
  input: "conv_pw_11_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_11_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_11/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_11_bn/Shape_2"
  input: "conv_pw_11_bn/strided_slice_2/stack"
  input: "conv_pw_11_bn/strided_slice_2/stack_1"
  input: "conv_pw_11_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_11_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_11_bn/strided_slice"
  input: "conv_pw_11_bn/strided_slice_1"
  input: "conv_pw_11_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_11_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/range"
  op: "Range"
  input: "conv_pw_11_bn/range/start"
  input: "conv_pw_11_bn/Rank"
  input: "conv_pw_11_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_11_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_11_bn/strided_slice"
  input: "conv_pw_11_bn/strided_slice_1"
  input: "conv_pw_11_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_11_bn/Prod"
  op: "Prod"
  input: "conv_pw_11_bn/Prod/input"
  input: "conv_pw_11_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_11_bn/Cast"
  op: "Cast"
  input: "conv_pw_11_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_11_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/sub"
  op: "Sub"
  input: "conv_pw_11_bn/Cast"
  input: "conv_pw_11_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_11_bn/Cast"
  input: "conv_pw_11_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/mul"
  op: "Mul"
  input: "conv_pw_11_bn/FusedBatchNorm:2"
  input: "conv_pw_11_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_11_bn/moving_mean/biased"
  input: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_11_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_11_bn/moving_mean/local_step"
  input: "conv_pw_11_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_11_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_11_bn/moving_mean/biased/read"
  input: "conv_pw_11_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/sub"
  input: "conv_pw_11_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/conv_pw_11_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_11_bn/moving_mean/biased"
  input: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_11_bn/moving_mean/local_step"
  input: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_11_bn/moving_mean/biased"
  input: "^conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/AssignAdd"
  input: "^conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/conv_pw_11_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/AssignAdd"
  input: "^conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/conv_pw_11_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/sub_1/x"
  input: "conv_pw_11_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_11_bn/moving_mean/local_step"
  input: "^conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/AssignAdd"
  input: "^conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/conv_pw_11_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/sub_1"
  input: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/AssignAdd"
  input: "^conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/conv_pw_11_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/sub_2/x"
  input: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/read"
  input: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_11_bn/moving_mean/read"
  input: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_11_bn/moving_mean"
  input: "conv_pw_11_bn/AssignMovingAvg/conv_pw_11_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_11_bn/moving_variance/biased"
  input: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_11_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_11_bn/moving_variance/local_step"
  input: "conv_pw_11_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_11_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_11_bn/moving_variance/biased/read"
  input: "conv_pw_11_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/sub"
  input: "conv_pw_11_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/conv_pw_11_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_11_bn/moving_variance/biased"
  input: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_11_bn/moving_variance/local_step"
  input: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_11_bn/moving_variance/biased"
  input: "^conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/AssignAdd"
  input: "^conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/conv_pw_11_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/AssignAdd"
  input: "^conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/conv_pw_11_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/sub_1/x"
  input: "conv_pw_11_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_11_bn/moving_variance/local_step"
  input: "^conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/AssignAdd"
  input: "^conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/conv_pw_11_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/sub_1"
  input: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/AssignAdd"
  input: "^conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/conv_pw_11_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/sub_2/x"
  input: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/read"
  input: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_11_bn/moving_variance/read"
  input: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_11_bn/moving_variance"
  input: "conv_pw_11_bn/AssignMovingAvg_1/conv_pw_11_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_11_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_11_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_11_bn/FusedBatchNorm"
  input: "conv_pw_11_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_pw_11_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_pw_11_bn/cond/batchnorm/add/Switch"
  input: "conv_pw_11_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_pw_11_bn/moving_variance/read"
  input: "conv_pw_11_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_pw_11_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_pw_11_bn/cond/batchnorm/Rsqrt"
  input: "conv_pw_11_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_pw_11_bn/gamma/read"
  input: "conv_pw_11_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_pw_11_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_pw_11_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_pw_11/convolution"
  input: "conv_pw_11_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_pw_11_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_pw_11_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_pw_11_bn/moving_mean/read"
  input: "conv_pw_11_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_pw_11_bn/cond/batchnorm/sub/Switch"
  input: "conv_pw_11_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_pw_11_bn/beta/read"
  input: "conv_pw_11_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_pw_11_bn/cond/batchnorm/mul_1"
  input: "conv_pw_11_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_11_bn/cond/batchnorm/add_1"
  input: "conv_pw_11_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_relu/Relu"
  op: "Relu"
  input: "conv_pw_11_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_pw_11_relu/Minimum"
  op: "Minimum"
  input: "conv_pw_11_relu/Relu"
  input: "conv_pw_11_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_12/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_12/Pad"
  op: "Pad"
  input: "conv_pw_11_relu/Minimum"
  input: "conv_pad_12/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_12/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_12/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv_dw_12/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv_dw_12/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_12/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1285828
    }
  }
}
node {
  name: "conv_dw_12/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_12/random_uniform/max"
  input: "conv_dw_12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_12/random_uniform/RandomUniform"
  input: "conv_dw_12/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12/random_uniform"
  op: "Add"
  input: "conv_dw_12/random_uniform/mul"
  input: "conv_dw_12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_12/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_12/depthwise_kernel"
  input: "conv_dw_12/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_12/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_12/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_12/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_12/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_12/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_12/Pad"
  input: "conv_dw_12/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_12_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_12_bn/gamma"
  input: "conv_dw_12_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_12_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_12_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_12_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_12_bn/beta"
  input: "conv_dw_12_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_12_bn/beta/read"
  op: "Identity"
  input: "conv_dw_12_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_12_bn/moving_mean"
  input: "conv_dw_12_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_12_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_12_bn/moving_variance"
  input: "conv_dw_12_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_12_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_12/depthwise"
  input: "conv_dw_12_bn/gamma/read"
  input: "conv_dw_12_bn/beta/read"
  input: "conv_dw_12_bn/Const_4"
  input: "conv_dw_12_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_12_bn/Shape"
  op: "Shape"
  input: "conv_dw_12/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_12_bn/Shape"
  input: "conv_dw_12_bn/strided_slice/stack"
  input: "conv_dw_12_bn/strided_slice/stack_1"
  input: "conv_dw_12_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_12_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_12/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_12_bn/Shape_1"
  input: "conv_dw_12_bn/strided_slice_1/stack"
  input: "conv_dw_12_bn/strided_slice_1/stack_1"
  input: "conv_dw_12_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_12_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_12/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_12_bn/Shape_2"
  input: "conv_dw_12_bn/strided_slice_2/stack"
  input: "conv_dw_12_bn/strided_slice_2/stack_1"
  input: "conv_dw_12_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_12_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_12_bn/strided_slice"
  input: "conv_dw_12_bn/strided_slice_1"
  input: "conv_dw_12_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_12_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/range"
  op: "Range"
  input: "conv_dw_12_bn/range/start"
  input: "conv_dw_12_bn/Rank"
  input: "conv_dw_12_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_12_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_12_bn/strided_slice"
  input: "conv_dw_12_bn/strided_slice_1"
  input: "conv_dw_12_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_12_bn/Prod"
  op: "Prod"
  input: "conv_dw_12_bn/Prod/input"
  input: "conv_dw_12_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_12_bn/Cast"
  op: "Cast"
  input: "conv_dw_12_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_12_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/sub"
  op: "Sub"
  input: "conv_dw_12_bn/Cast"
  input: "conv_dw_12_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_12_bn/Cast"
  input: "conv_dw_12_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/mul"
  op: "Mul"
  input: "conv_dw_12_bn/FusedBatchNorm:2"
  input: "conv_dw_12_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_12_bn/moving_mean/biased"
  input: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_12_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_12_bn/moving_mean/local_step"
  input: "conv_dw_12_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_12_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_12_bn/moving_mean/biased/read"
  input: "conv_dw_12_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/sub"
  input: "conv_dw_12_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/conv_dw_12_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_12_bn/moving_mean/biased"
  input: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_12_bn/moving_mean/local_step"
  input: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_12_bn/moving_mean/biased"
  input: "^conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/AssignAdd"
  input: "^conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/conv_dw_12_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/AssignAdd"
  input: "^conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/conv_dw_12_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/sub_1/x"
  input: "conv_dw_12_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_12_bn/moving_mean/local_step"
  input: "^conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/AssignAdd"
  input: "^conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/conv_dw_12_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/sub_1"
  input: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/AssignAdd"
  input: "^conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/conv_dw_12_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/sub_2/x"
  input: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/read"
  input: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_12_bn/moving_mean/read"
  input: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_12_bn/moving_mean"
  input: "conv_dw_12_bn/AssignMovingAvg/conv_dw_12_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_12_bn/moving_variance/biased"
  input: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_12_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_12_bn/moving_variance/local_step"
  input: "conv_dw_12_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_12_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_12_bn/moving_variance/biased/read"
  input: "conv_dw_12_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/sub"
  input: "conv_dw_12_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/conv_dw_12_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_12_bn/moving_variance/biased"
  input: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_12_bn/moving_variance/local_step"
  input: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_12_bn/moving_variance/biased"
  input: "^conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/AssignAdd"
  input: "^conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/conv_dw_12_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/AssignAdd"
  input: "^conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/conv_dw_12_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/sub_1/x"
  input: "conv_dw_12_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_12_bn/moving_variance/local_step"
  input: "^conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/AssignAdd"
  input: "^conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/conv_dw_12_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/sub_1"
  input: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/AssignAdd"
  input: "^conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/conv_dw_12_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/sub_2/x"
  input: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/read"
  input: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_12_bn/moving_variance/read"
  input: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_12_bn/moving_variance"
  input: "conv_dw_12_bn/AssignMovingAvg_1/conv_dw_12_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_12_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_12_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_12_bn/FusedBatchNorm"
  input: "conv_dw_12_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_dw_12_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_dw_12_bn/cond/batchnorm/add/Switch"
  input: "conv_dw_12_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_dw_12_bn/moving_variance/read"
  input: "conv_dw_12_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_dw_12_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_dw_12_bn/cond/batchnorm/Rsqrt"
  input: "conv_dw_12_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_dw_12_bn/gamma/read"
  input: "conv_dw_12_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_dw_12_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_dw_12_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_dw_12/depthwise"
  input: "conv_dw_12_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_dw_12_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_dw_12_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_dw_12_bn/moving_mean/read"
  input: "conv_dw_12_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_dw_12_bn/cond/batchnorm/sub/Switch"
  input: "conv_dw_12_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_dw_12_bn/beta/read"
  input: "conv_dw_12_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_dw_12_bn/cond/batchnorm/mul_1"
  input: "conv_dw_12_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_12_bn/cond/batchnorm/add_1"
  input: "conv_dw_12_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_relu/Relu"
  op: "Relu"
  input: "conv_dw_12_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_dw_12_relu/Minimum"
  op: "Minimum"
  input: "conv_dw_12_relu/Relu"
  input: "conv_dw_12_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_12/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "conv_pw_12/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "conv_pw_12/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_12/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8438097
    }
  }
}
node {
  name: "conv_pw_12/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_12/random_uniform/max"
  input: "conv_pw_12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_12/random_uniform/RandomUniform"
  input: "conv_pw_12/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12/random_uniform"
  op: "Add"
  input: "conv_pw_12/random_uniform/mul"
  input: "conv_pw_12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_12/kernel/Assign"
  op: "Assign"
  input: "conv_pw_12/kernel"
  input: "conv_pw_12/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_12/kernel/read"
  op: "Identity"
  input: "conv_pw_12/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_12/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_12/convolution"
  op: "Conv2D"
  input: "conv_dw_12_relu/Minimum"
  input: "conv_pw_12/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_12_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_12_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_12_bn/gamma"
  input: "conv_pw_12_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_12_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_12_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_12_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_12_bn/beta"
  input: "conv_pw_12_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_12_bn/beta/read"
  op: "Identity"
  input: "conv_pw_12_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_12_bn/moving_mean"
  input: "conv_pw_12_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_12_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_12_bn/moving_variance"
  input: "conv_pw_12_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_12_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_12/convolution"
  input: "conv_pw_12_bn/gamma/read"
  input: "conv_pw_12_bn/beta/read"
  input: "conv_pw_12_bn/Const_4"
  input: "conv_pw_12_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_12_bn/Shape"
  op: "Shape"
  input: "conv_pw_12/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_12_bn/Shape"
  input: "conv_pw_12_bn/strided_slice/stack"
  input: "conv_pw_12_bn/strided_slice/stack_1"
  input: "conv_pw_12_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_12_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_12/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_12_bn/Shape_1"
  input: "conv_pw_12_bn/strided_slice_1/stack"
  input: "conv_pw_12_bn/strided_slice_1/stack_1"
  input: "conv_pw_12_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_12_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_12/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_12_bn/Shape_2"
  input: "conv_pw_12_bn/strided_slice_2/stack"
  input: "conv_pw_12_bn/strided_slice_2/stack_1"
  input: "conv_pw_12_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_12_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_12_bn/strided_slice"
  input: "conv_pw_12_bn/strided_slice_1"
  input: "conv_pw_12_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_12_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/range"
  op: "Range"
  input: "conv_pw_12_bn/range/start"
  input: "conv_pw_12_bn/Rank"
  input: "conv_pw_12_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_12_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_12_bn/strided_slice"
  input: "conv_pw_12_bn/strided_slice_1"
  input: "conv_pw_12_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_12_bn/Prod"
  op: "Prod"
  input: "conv_pw_12_bn/Prod/input"
  input: "conv_pw_12_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_12_bn/Cast"
  op: "Cast"
  input: "conv_pw_12_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_12_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/sub"
  op: "Sub"
  input: "conv_pw_12_bn/Cast"
  input: "conv_pw_12_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_12_bn/Cast"
  input: "conv_pw_12_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/mul"
  op: "Mul"
  input: "conv_pw_12_bn/FusedBatchNorm:2"
  input: "conv_pw_12_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/zeros"
  op: "Fill"
  input: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/zeros/shape_as_tensor"
  input: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_12_bn/moving_mean/biased"
  input: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_12_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_12_bn/moving_mean/local_step"
  input: "conv_pw_12_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_12_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_12_bn/moving_mean/biased/read"
  input: "conv_pw_12_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/sub"
  input: "conv_pw_12_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/conv_pw_12_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_12_bn/moving_mean/biased"
  input: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_12_bn/moving_mean/local_step"
  input: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_12_bn/moving_mean/biased"
  input: "^conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/AssignAdd"
  input: "^conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/conv_pw_12_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/AssignAdd"
  input: "^conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/conv_pw_12_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/sub_1/x"
  input: "conv_pw_12_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_12_bn/moving_mean/local_step"
  input: "^conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/AssignAdd"
  input: "^conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/conv_pw_12_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/sub_1"
  input: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/AssignAdd"
  input: "^conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/conv_pw_12_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/sub_2/x"
  input: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/read"
  input: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_12_bn/moving_mean/read"
  input: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_12_bn/moving_mean"
  input: "conv_pw_12_bn/AssignMovingAvg/conv_pw_12_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/zeros"
  op: "Fill"
  input: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/zeros/shape_as_tensor"
  input: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_12_bn/moving_variance/biased"
  input: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_12_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_12_bn/moving_variance/local_step"
  input: "conv_pw_12_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_12_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_12_bn/moving_variance/biased/read"
  input: "conv_pw_12_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/sub"
  input: "conv_pw_12_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/conv_pw_12_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_12_bn/moving_variance/biased"
  input: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_12_bn/moving_variance/local_step"
  input: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_12_bn/moving_variance/biased"
  input: "^conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/AssignAdd"
  input: "^conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/conv_pw_12_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/AssignAdd"
  input: "^conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/conv_pw_12_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/sub_1/x"
  input: "conv_pw_12_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_12_bn/moving_variance/local_step"
  input: "^conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/AssignAdd"
  input: "^conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/conv_pw_12_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/sub_1"
  input: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/AssignAdd"
  input: "^conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/conv_pw_12_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/sub_2/x"
  input: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/read"
  input: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_12_bn/moving_variance/read"
  input: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_12_bn/moving_variance"
  input: "conv_pw_12_bn/AssignMovingAvg_1/conv_pw_12_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_12_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_12_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_12_bn/FusedBatchNorm"
  input: "conv_pw_12_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_pw_12_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_pw_12_bn/cond/batchnorm/add/Switch"
  input: "conv_pw_12_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_pw_12_bn/moving_variance/read"
  input: "conv_pw_12_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_pw_12_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_pw_12_bn/cond/batchnorm/Rsqrt"
  input: "conv_pw_12_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_pw_12_bn/gamma/read"
  input: "conv_pw_12_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_pw_12_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_pw_12_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_pw_12/convolution"
  input: "conv_pw_12_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_pw_12_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_pw_12_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_pw_12_bn/moving_mean/read"
  input: "conv_pw_12_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_pw_12_bn/cond/batchnorm/sub/Switch"
  input: "conv_pw_12_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_pw_12_bn/beta/read"
  input: "conv_pw_12_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_pw_12_bn/cond/batchnorm/mul_1"
  input: "conv_pw_12_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_12_bn/cond/batchnorm/add_1"
  input: "conv_pw_12_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_relu/Relu"
  op: "Relu"
  input: "conv_pw_12_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_pw_12_relu/Minimum"
  op: "Minimum"
  input: "conv_pw_12_relu/Relu"
  input: "conv_pw_12_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_13/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_13/Pad"
  op: "Pad"
  input: "conv_pw_12_relu/Minimum"
  input: "conv_pad_13/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_13/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_13/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025503069162368774
      }
    }
  }
}
node {
  name: "conv_dw_13/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025503069162368774
      }
    }
  }
}
node {
  name: "conv_dw_13/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_13/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2343064
    }
  }
}
node {
  name: "conv_dw_13/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_13/random_uniform/max"
  input: "conv_dw_13/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_13/random_uniform/RandomUniform"
  input: "conv_dw_13/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13/random_uniform"
  op: "Add"
  input: "conv_dw_13/random_uniform/mul"
  input: "conv_dw_13/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_13/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_13/depthwise_kernel"
  input: "conv_dw_13/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_13/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_13/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_13/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_13/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_13/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_13/Pad"
  input: "conv_dw_13/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_13_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_13_bn/gamma"
  input: "conv_dw_13_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_13_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_13_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_13_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_13_bn/beta"
  input: "conv_dw_13_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_13_bn/beta/read"
  op: "Identity"
  input: "conv_dw_13_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_13_bn/moving_mean"
  input: "conv_dw_13_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_13_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_13_bn/moving_variance"
  input: "conv_dw_13_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_13_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_13/depthwise"
  input: "conv_dw_13_bn/gamma/read"
  input: "conv_dw_13_bn/beta/read"
  input: "conv_dw_13_bn/Const_4"
  input: "conv_dw_13_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_13_bn/Shape"
  op: "Shape"
  input: "conv_dw_13/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_13_bn/Shape"
  input: "conv_dw_13_bn/strided_slice/stack"
  input: "conv_dw_13_bn/strided_slice/stack_1"
  input: "conv_dw_13_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_13_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_13/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_13_bn/Shape_1"
  input: "conv_dw_13_bn/strided_slice_1/stack"
  input: "conv_dw_13_bn/strided_slice_1/stack_1"
  input: "conv_dw_13_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_13_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_13/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_13_bn/Shape_2"
  input: "conv_dw_13_bn/strided_slice_2/stack"
  input: "conv_dw_13_bn/strided_slice_2/stack_1"
  input: "conv_dw_13_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_13_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_13_bn/strided_slice"
  input: "conv_dw_13_bn/strided_slice_1"
  input: "conv_dw_13_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_13_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/range"
  op: "Range"
  input: "conv_dw_13_bn/range/start"
  input: "conv_dw_13_bn/Rank"
  input: "conv_dw_13_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_13_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_13_bn/strided_slice"
  input: "conv_dw_13_bn/strided_slice_1"
  input: "conv_dw_13_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_13_bn/Prod"
  op: "Prod"
  input: "conv_dw_13_bn/Prod/input"
  input: "conv_dw_13_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_13_bn/Cast"
  op: "Cast"
  input: "conv_dw_13_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_13_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/sub"
  op: "Sub"
  input: "conv_dw_13_bn/Cast"
  input: "conv_dw_13_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_13_bn/Cast"
  input: "conv_dw_13_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/mul"
  op: "Mul"
  input: "conv_dw_13_bn/FusedBatchNorm:2"
  input: "conv_dw_13_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/zeros"
  op: "Fill"
  input: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/zeros/shape_as_tensor"
  input: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_13_bn/moving_mean/biased"
  input: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_13_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_13_bn/moving_mean/local_step"
  input: "conv_dw_13_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_13_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_13_bn/moving_mean/biased/read"
  input: "conv_dw_13_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/sub"
  input: "conv_dw_13_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/conv_dw_13_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_13_bn/moving_mean/biased"
  input: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_13_bn/moving_mean/local_step"
  input: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_13_bn/moving_mean/biased"
  input: "^conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/AssignAdd"
  input: "^conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/conv_dw_13_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/AssignAdd"
  input: "^conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/conv_dw_13_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/sub_1/x"
  input: "conv_dw_13_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_13_bn/moving_mean/local_step"
  input: "^conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/AssignAdd"
  input: "^conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/conv_dw_13_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/sub_1"
  input: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/AssignAdd"
  input: "^conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/conv_dw_13_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/sub_2/x"
  input: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/read"
  input: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_13_bn/moving_mean/read"
  input: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_13_bn/moving_mean"
  input: "conv_dw_13_bn/AssignMovingAvg/conv_dw_13_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/zeros"
  op: "Fill"
  input: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/zeros/shape_as_tensor"
  input: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_13_bn/moving_variance/biased"
  input: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_13_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_13_bn/moving_variance/local_step"
  input: "conv_dw_13_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_13_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_13_bn/moving_variance/biased/read"
  input: "conv_dw_13_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/sub"
  input: "conv_dw_13_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/conv_dw_13_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_13_bn/moving_variance/biased"
  input: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_13_bn/moving_variance/local_step"
  input: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_13_bn/moving_variance/biased"
  input: "^conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/AssignAdd"
  input: "^conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/conv_dw_13_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/AssignAdd"
  input: "^conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/conv_dw_13_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/sub_1/x"
  input: "conv_dw_13_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_13_bn/moving_variance/local_step"
  input: "^conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/AssignAdd"
  input: "^conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/conv_dw_13_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/sub_1"
  input: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/AssignAdd"
  input: "^conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/conv_dw_13_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/sub_2/x"
  input: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/read"
  input: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_13_bn/moving_variance/read"
  input: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_13_bn/moving_variance"
  input: "conv_dw_13_bn/AssignMovingAvg_1/conv_dw_13_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_13_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_13_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_13_bn/FusedBatchNorm"
  input: "conv_dw_13_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_dw_13_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_dw_13_bn/cond/batchnorm/add/Switch"
  input: "conv_dw_13_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_dw_13_bn/moving_variance/read"
  input: "conv_dw_13_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_dw_13_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_dw_13_bn/cond/batchnorm/Rsqrt"
  input: "conv_dw_13_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_dw_13_bn/gamma/read"
  input: "conv_dw_13_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_dw_13_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_dw_13_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_dw_13/depthwise"
  input: "conv_dw_13_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_dw_13_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_dw_13_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_dw_13_bn/moving_mean/read"
  input: "conv_dw_13_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_dw_13_bn/cond/batchnorm/sub/Switch"
  input: "conv_dw_13_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_dw_13_bn/beta/read"
  input: "conv_dw_13_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_dw_13_bn/cond/batchnorm/mul_1"
  input: "conv_dw_13_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_13_bn/cond/batchnorm/add_1"
  input: "conv_dw_13_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_relu/Relu"
  op: "Relu"
  input: "conv_dw_13_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_dw_13_relu/Minimum"
  op: "Minimum"
  input: "conv_dw_13_relu/Relu"
  input: "conv_dw_13_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_13/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05412658676505089
      }
    }
  }
}
node {
  name: "conv_pw_13/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05412658676505089
      }
    }
  }
}
node {
  name: "conv_pw_13/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_13/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5342334
    }
  }
}
node {
  name: "conv_pw_13/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_13/random_uniform/max"
  input: "conv_pw_13/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_13/random_uniform/RandomUniform"
  input: "conv_pw_13/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13/random_uniform"
  op: "Add"
  input: "conv_pw_13/random_uniform/mul"
  input: "conv_pw_13/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_13/kernel/Assign"
  op: "Assign"
  input: "conv_pw_13/kernel"
  input: "conv_pw_13/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_13/kernel/read"
  op: "Identity"
  input: "conv_pw_13/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_13/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_13/convolution"
  op: "Conv2D"
  input: "conv_dw_13_relu/Minimum"
  input: "conv_pw_13/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_13_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_13_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_13_bn/gamma"
  input: "conv_pw_13_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_13_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_13_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_13_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_13_bn/beta"
  input: "conv_pw_13_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_13_bn/beta/read"
  op: "Identity"
  input: "conv_pw_13_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_13_bn/moving_mean"
  input: "conv_pw_13_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_13_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_13_bn/moving_variance"
  input: "conv_pw_13_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_13_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_13/convolution"
  input: "conv_pw_13_bn/gamma/read"
  input: "conv_pw_13_bn/beta/read"
  input: "conv_pw_13_bn/Const_4"
  input: "conv_pw_13_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_13_bn/Shape"
  op: "Shape"
  input: "conv_pw_13/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_13_bn/Shape"
  input: "conv_pw_13_bn/strided_slice/stack"
  input: "conv_pw_13_bn/strided_slice/stack_1"
  input: "conv_pw_13_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_13_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_13/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_13_bn/Shape_1"
  input: "conv_pw_13_bn/strided_slice_1/stack"
  input: "conv_pw_13_bn/strided_slice_1/stack_1"
  input: "conv_pw_13_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_13_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_13/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_13_bn/Shape_2"
  input: "conv_pw_13_bn/strided_slice_2/stack"
  input: "conv_pw_13_bn/strided_slice_2/stack_1"
  input: "conv_pw_13_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_13_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_13_bn/strided_slice"
  input: "conv_pw_13_bn/strided_slice_1"
  input: "conv_pw_13_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_13_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/range"
  op: "Range"
  input: "conv_pw_13_bn/range/start"
  input: "conv_pw_13_bn/Rank"
  input: "conv_pw_13_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_13_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_13_bn/strided_slice"
  input: "conv_pw_13_bn/strided_slice_1"
  input: "conv_pw_13_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_13_bn/Prod"
  op: "Prod"
  input: "conv_pw_13_bn/Prod/input"
  input: "conv_pw_13_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_13_bn/Cast"
  op: "Cast"
  input: "conv_pw_13_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_13_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/sub"
  op: "Sub"
  input: "conv_pw_13_bn/Cast"
  input: "conv_pw_13_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_13_bn/Cast"
  input: "conv_pw_13_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/mul"
  op: "Mul"
  input: "conv_pw_13_bn/FusedBatchNorm:2"
  input: "conv_pw_13_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/zeros"
  op: "Fill"
  input: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/zeros/shape_as_tensor"
  input: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_13_bn/moving_mean/biased"
  input: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_13_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_13_bn/moving_mean/local_step"
  input: "conv_pw_13_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_13_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_13_bn/moving_mean/biased/read"
  input: "conv_pw_13_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/sub"
  input: "conv_pw_13_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/conv_pw_13_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_13_bn/moving_mean/biased"
  input: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_13_bn/moving_mean/local_step"
  input: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_13_bn/moving_mean/biased"
  input: "^conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/AssignAdd"
  input: "^conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/conv_pw_13_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/AssignAdd"
  input: "^conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/conv_pw_13_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/sub_1/x"
  input: "conv_pw_13_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_13_bn/moving_mean/local_step"
  input: "^conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/AssignAdd"
  input: "^conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/conv_pw_13_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/sub_1"
  input: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/AssignAdd"
  input: "^conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/conv_pw_13_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/sub_2/x"
  input: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/read"
  input: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_13_bn/moving_mean/read"
  input: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_13_bn/moving_mean"
  input: "conv_pw_13_bn/AssignMovingAvg/conv_pw_13_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/zeros"
  op: "Fill"
  input: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/zeros/shape_as_tensor"
  input: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_13_bn/moving_variance/biased"
  input: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_13_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_13_bn/moving_variance/local_step"
  input: "conv_pw_13_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_13_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_13_bn/moving_variance/biased/read"
  input: "conv_pw_13_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/sub"
  input: "conv_pw_13_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/conv_pw_13_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_13_bn/moving_variance/biased"
  input: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_13_bn/moving_variance/local_step"
  input: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_13_bn/moving_variance/biased"
  input: "^conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/AssignAdd"
  input: "^conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/conv_pw_13_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/AssignAdd"
  input: "^conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/conv_pw_13_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/sub_1/x"
  input: "conv_pw_13_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_13_bn/moving_variance/local_step"
  input: "^conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/AssignAdd"
  input: "^conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/conv_pw_13_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/sub_1"
  input: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/AssignAdd"
  input: "^conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/conv_pw_13_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/sub_2/x"
  input: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/read"
  input: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_13_bn/moving_variance/read"
  input: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_13_bn/moving_variance"
  input: "conv_pw_13_bn/AssignMovingAvg_1/conv_pw_13_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_13_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_13_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_13_bn/FusedBatchNorm"
  input: "conv_pw_13_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/batchnorm/add/y"
  op: "Const"
  input: "^conv_pw_13_bn/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/batchnorm/add"
  op: "Add"
  input: "conv_pw_13_bn/cond/batchnorm/add/Switch"
  input: "conv_pw_13_bn/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "conv_pw_13_bn/moving_variance/read"
  input: "conv_pw_13_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv_pw_13_bn/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/batchnorm/mul"
  op: "Mul"
  input: "conv_pw_13_bn/cond/batchnorm/Rsqrt"
  input: "conv_pw_13_bn/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "conv_pw_13_bn/gamma/read"
  input: "conv_pw_13_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/batchnorm/mul_1"
  op: "Mul"
  input: "conv_pw_13_bn/cond/batchnorm/mul_1/Switch"
  input: "conv_pw_13_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv_pw_13/convolution"
  input: "conv_pw_13_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/batchnorm/mul_2"
  op: "Mul"
  input: "conv_pw_13_bn/cond/batchnorm/mul_2/Switch"
  input: "conv_pw_13_bn/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "conv_pw_13_bn/moving_mean/read"
  input: "conv_pw_13_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/batchnorm/sub"
  op: "Sub"
  input: "conv_pw_13_bn/cond/batchnorm/sub/Switch"
  input: "conv_pw_13_bn/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "conv_pw_13_bn/beta/read"
  input: "conv_pw_13_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/batchnorm/add_1"
  op: "Add"
  input: "conv_pw_13_bn/cond/batchnorm/mul_1"
  input: "conv_pw_13_bn/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_13_bn/cond/batchnorm/add_1"
  input: "conv_pw_13_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_relu/Relu"
  op: "Relu"
  input: "conv_pw_13_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_relu/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.0
      }
    }
  }
}
node {
  name: "conv_pw_13_relu/Minimum"
  op: "Minimum"
  input: "conv_pw_13_relu/Relu"
  input: "conv_pw_13_relu/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "conv2d_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "conv2d_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8882166
    }
  }
}
node {
  name: "conv2d_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_1/random_uniform/max"
  input: "conv2d_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_1/random_uniform/RandomUniform"
  input: "conv2d_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/random_uniform"
  op: "Add"
  input: "conv2d_1/random_uniform/mul"
  input: "conv2d_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_1/kernel"
  input: "conv2d_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_1/kernel/read"
  op: "Identity"
  input: "conv2d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_1/weight_regularizer/Square"
  op: "Square"
  input: "conv2d_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv2d_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv2d_1/weight_regularizer/mul/x"
  input: "conv2d_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv2d_1/weight_regularizer/mul"
  input: "conv2d_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv2d_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_1/weight_regularizer/add"
  op: "Add"
  input: "conv2d_1/weight_regularizer/add/x"
  input: "conv2d_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_1/bias/Assign"
  op: "Assign"
  input: "conv2d_1/bias"
  input: "conv2d_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_1/bias/read"
  op: "Identity"
  input: "conv2d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_1/convolution"
  op: "Conv2D"
  input: "conv_pw_13_relu/Minimum"
  input: "conv2d_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_1/convolution"
  input: "conv2d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_transpose_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000\000\001\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_transpose_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5841987
    }
  }
}
node {
  name: "conv2d_transpose_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_transpose_1/random_uniform/max"
  input: "conv2d_transpose_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_transpose_1/random_uniform/RandomUniform"
  input: "conv2d_transpose_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_1/random_uniform"
  op: "Add"
  input: "conv2d_transpose_1/random_uniform/mul"
  input: "conv2d_transpose_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 256
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_transpose_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_transpose_1/kernel"
  input: "conv2d_transpose_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_transpose_1/kernel/read"
  op: "Identity"
  input: "conv2d_transpose_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/weight_regularizer/Square"
  op: "Square"
  input: "conv2d_transpose_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv2d_transpose_1/weight_regularizer/mul/x"
  input: "conv2d_transpose_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv2d_transpose_1/weight_regularizer/mul"
  input: "conv2d_transpose_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv2d_transpose_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/weight_regularizer/add"
  op: "Add"
  input: "conv2d_transpose_1/weight_regularizer/add/x"
  input: "conv2d_transpose_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_transpose_1/bias/Assign"
  op: "Assign"
  input: "conv2d_transpose_1/bias"
  input: "conv2d_transpose_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_transpose_1/bias/read"
  op: "Identity"
  input: "conv2d_transpose_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/Shape"
  op: "Shape"
  input: "conv2d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_transpose_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/strided_slice"
  op: "StridedSlice"
  input: "conv2d_transpose_1/Shape"
  input: "conv2d_transpose_1/strided_slice/stack"
  input: "conv2d_transpose_1/strided_slice/stack_1"
  input: "conv2d_transpose_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2d_transpose_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv2d_transpose_1/Shape"
  input: "conv2d_transpose_1/strided_slice_1/stack"
  input: "conv2d_transpose_1/strided_slice_1/stack_1"
  input: "conv2d_transpose_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2d_transpose_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv2d_transpose_1/Shape"
  input: "conv2d_transpose_1/strided_slice_2/stack"
  input: "conv2d_transpose_1/strided_slice_2/stack_1"
  input: "conv2d_transpose_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2d_transpose_1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/mul"
  op: "Mul"
  input: "conv2d_transpose_1/strided_slice_1"
  input: "conv2d_transpose_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_transpose_1/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/mul_1"
  op: "Mul"
  input: "conv2d_transpose_1/strided_slice_2"
  input: "conv2d_transpose_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_transpose_1/stack/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/stack"
  op: "Pack"
  input: "conv2d_transpose_1/strided_slice"
  input: "conv2d_transpose_1/mul"
  input: "conv2d_transpose_1/mul_1"
  input: "conv2d_transpose_1/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_transpose_1/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_1/strided_slice_3"
  op: "StridedSlice"
  input: "conv2d_transpose_1/stack"
  input: "conv2d_transpose_1/strided_slice_3/stack"
  input: "conv2d_transpose_1/strided_slice_3/stack_1"
  input: "conv2d_transpose_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2d_transpose_1/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "conv2d_transpose_1/stack"
  input: "conv2d_transpose_1/kernel/read"
  input: "conv2d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_transpose_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_transpose_1/conv2d_transpose"
  input: "conv2d_transpose_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "add_1/add"
  op: "Add"
  input: "conv2d_transpose_1/BiasAdd"
  input: "conv_pw_5_relu/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_transpose_2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6820145
    }
  }
}
node {
  name: "conv2d_transpose_2/random_uniform/sub"
  op: "Sub"
  input: "conv2d_transpose_2/random_uniform/max"
  input: "conv2d_transpose_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_2/random_uniform/mul"
  op: "Mul"
  input: "conv2d_transpose_2/random_uniform/RandomUniform"
  input: "conv2d_transpose_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_2/random_uniform"
  op: "Add"
  input: "conv2d_transpose_2/random_uniform/mul"
  input: "conv2d_transpose_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_transpose_2/kernel/Assign"
  op: "Assign"
  input: "conv2d_transpose_2/kernel"
  input: "conv2d_transpose_2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_transpose_2/kernel/read"
  op: "Identity"
  input: "conv2d_transpose_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_2/kernel"
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/weight_regularizer/Square"
  op: "Square"
  input: "conv2d_transpose_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_2/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/weight_regularizer/mul"
  op: "Mul"
  input: "conv2d_transpose_2/weight_regularizer/mul/x"
  input: "conv2d_transpose_2/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_2/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/weight_regularizer/Sum"
  op: "Sum"
  input: "conv2d_transpose_2/weight_regularizer/mul"
  input: "conv2d_transpose_2/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv2d_transpose_2/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/weight_regularizer/add"
  op: "Add"
  input: "conv2d_transpose_2/weight_regularizer/add/x"
  input: "conv2d_transpose_2/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_transpose_2/bias/Assign"
  op: "Assign"
  input: "conv2d_transpose_2/bias"
  input: "conv2d_transpose_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_transpose_2/bias/read"
  op: "Identity"
  input: "conv2d_transpose_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_2/bias"
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/Shape"
  op: "Shape"
  input: "add_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_transpose_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/strided_slice"
  op: "StridedSlice"
  input: "conv2d_transpose_2/Shape"
  input: "conv2d_transpose_2/strided_slice/stack"
  input: "conv2d_transpose_2/strided_slice/stack_1"
  input: "conv2d_transpose_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2d_transpose_2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/strided_slice_1"
  op: "StridedSlice"
  input: "conv2d_transpose_2/Shape"
  input: "conv2d_transpose_2/strided_slice_1/stack"
  input: "conv2d_transpose_2/strided_slice_1/stack_1"
  input: "conv2d_transpose_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2d_transpose_2/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/strided_slice_2"
  op: "StridedSlice"
  input: "conv2d_transpose_2/Shape"
  input: "conv2d_transpose_2/strided_slice_2/stack"
  input: "conv2d_transpose_2/strided_slice_2/stack_1"
  input: "conv2d_transpose_2/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2d_transpose_2/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/mul"
  op: "Mul"
  input: "conv2d_transpose_2/strided_slice_1"
  input: "conv2d_transpose_2/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_transpose_2/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/mul_1"
  op: "Mul"
  input: "conv2d_transpose_2/strided_slice_2"
  input: "conv2d_transpose_2/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_transpose_2/stack/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/stack"
  op: "Pack"
  input: "conv2d_transpose_2/strided_slice"
  input: "conv2d_transpose_2/mul"
  input: "conv2d_transpose_2/mul_1"
  input: "conv2d_transpose_2/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_transpose_2/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_2/strided_slice_3"
  op: "StridedSlice"
  input: "conv2d_transpose_2/stack"
  input: "conv2d_transpose_2/strided_slice_3/stack"
  input: "conv2d_transpose_2/strided_slice_3/stack_1"
  input: "conv2d_transpose_2/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2d_transpose_2/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "conv2d_transpose_2/stack"
  input: "conv2d_transpose_2/kernel/read"
  input: "add_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_transpose_2/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_transpose_2/conv2d_transpose"
  input: "conv2d_transpose_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "add_2/add"
  op: "Add"
  input: "conv2d_transpose_2/BiasAdd"
  input: "conv_pw_3_relu/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_3/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_transpose_3/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8437812
    }
  }
}
node {
  name: "conv2d_transpose_3/random_uniform/sub"
  op: "Sub"
  input: "conv2d_transpose_3/random_uniform/max"
  input: "conv2d_transpose_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_3/random_uniform/mul"
  op: "Mul"
  input: "conv2d_transpose_3/random_uniform/RandomUniform"
  input: "conv2d_transpose_3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_3/random_uniform"
  op: "Add"
  input: "conv2d_transpose_3/random_uniform/mul"
  input: "conv2d_transpose_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_3/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_transpose_3/kernel/Assign"
  op: "Assign"
  input: "conv2d_transpose_3/kernel"
  input: "conv2d_transpose_3/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_transpose_3/kernel/read"
  op: "Identity"
  input: "conv2d_transpose_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_3/kernel"
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/weight_regularizer/Square"
  op: "Square"
  input: "conv2d_transpose_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_3/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/weight_regularizer/mul"
  op: "Mul"
  input: "conv2d_transpose_3/weight_regularizer/mul/x"
  input: "conv2d_transpose_3/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_3/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/weight_regularizer/Sum"
  op: "Sum"
  input: "conv2d_transpose_3/weight_regularizer/mul"
  input: "conv2d_transpose_3/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv2d_transpose_3/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/weight_regularizer/add"
  op: "Add"
  input: "conv2d_transpose_3/weight_regularizer/add/x"
  input: "conv2d_transpose_3/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_transpose_3/bias/Assign"
  op: "Assign"
  input: "conv2d_transpose_3/bias"
  input: "conv2d_transpose_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_transpose_3/bias/read"
  op: "Identity"
  input: "conv2d_transpose_3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_3/bias"
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/Shape"
  op: "Shape"
  input: "add_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_transpose_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/strided_slice"
  op: "StridedSlice"
  input: "conv2d_transpose_3/Shape"
  input: "conv2d_transpose_3/strided_slice/stack"
  input: "conv2d_transpose_3/strided_slice/stack_1"
  input: "conv2d_transpose_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2d_transpose_3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/strided_slice_1"
  op: "StridedSlice"
  input: "conv2d_transpose_3/Shape"
  input: "conv2d_transpose_3/strided_slice_1/stack"
  input: "conv2d_transpose_3/strided_slice_1/stack_1"
  input: "conv2d_transpose_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2d_transpose_3/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/strided_slice_2"
  op: "StridedSlice"
  input: "conv2d_transpose_3/Shape"
  input: "conv2d_transpose_3/strided_slice_2/stack"
  input: "conv2d_transpose_3/strided_slice_2/stack_1"
  input: "conv2d_transpose_3/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2d_transpose_3/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/mul"
  op: "Mul"
  input: "conv2d_transpose_3/strided_slice_1"
  input: "conv2d_transpose_3/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_transpose_3/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/mul_1"
  op: "Mul"
  input: "conv2d_transpose_3/strided_slice_2"
  input: "conv2d_transpose_3/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_transpose_3/stack/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/stack"
  op: "Pack"
  input: "conv2d_transpose_3/strided_slice"
  input: "conv2d_transpose_3/mul"
  input: "conv2d_transpose_3/mul_1"
  input: "conv2d_transpose_3/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_transpose_3/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_3/strided_slice_3"
  op: "StridedSlice"
  input: "conv2d_transpose_3/stack"
  input: "conv2d_transpose_3/strided_slice_3/stack"
  input: "conv2d_transpose_3/strided_slice_3/stack_1"
  input: "conv2d_transpose_3/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2d_transpose_3/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "conv2d_transpose_3/stack"
  input: "conv2d_transpose_3/kernel/read"
  input: "add_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_transpose_3/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_transpose_3/conv2d_transpose"
  input: "conv2d_transpose_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "add_3/add"
  op: "Add"
  input: "conv2d_transpose_3/BiasAdd"
  input: "conv_pw_1_relu/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_4/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\002\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_transpose_4/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4302765
    }
  }
}
node {
  name: "conv2d_transpose_4/random_uniform/sub"
  op: "Sub"
  input: "conv2d_transpose_4/random_uniform/max"
  input: "conv2d_transpose_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_4/random_uniform/mul"
  op: "Mul"
  input: "conv2d_transpose_4/random_uniform/RandomUniform"
  input: "conv2d_transpose_4/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_4/random_uniform"
  op: "Add"
  input: "conv2d_transpose_4/random_uniform/mul"
  input: "conv2d_transpose_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_4/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 2
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_transpose_4/kernel/Assign"
  op: "Assign"
  input: "conv2d_transpose_4/kernel"
  input: "conv2d_transpose_4/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_transpose_4/kernel/read"
  op: "Identity"
  input: "conv2d_transpose_4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_4/kernel"
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/weight_regularizer/Square"
  op: "Square"
  input: "conv2d_transpose_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_4/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/weight_regularizer/mul"
  op: "Mul"
  input: "conv2d_transpose_4/weight_regularizer/mul/x"
  input: "conv2d_transpose_4/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_4/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/weight_regularizer/Sum"
  op: "Sum"
  input: "conv2d_transpose_4/weight_regularizer/mul"
  input: "conv2d_transpose_4/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv2d_transpose_4/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/weight_regularizer/add"
  op: "Add"
  input: "conv2d_transpose_4/weight_regularizer/add/x"
  input: "conv2d_transpose_4/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_transpose_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_transpose_4/bias/Assign"
  op: "Assign"
  input: "conv2d_transpose_4/bias"
  input: "conv2d_transpose_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_transpose_4/bias/read"
  op: "Identity"
  input: "conv2d_transpose_4/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_4/bias"
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/Shape"
  op: "Shape"
  input: "add_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_transpose_4/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/strided_slice"
  op: "StridedSlice"
  input: "conv2d_transpose_4/Shape"
  input: "conv2d_transpose_4/strided_slice/stack"
  input: "conv2d_transpose_4/strided_slice/stack_1"
  input: "conv2d_transpose_4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2d_transpose_4/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/strided_slice_1"
  op: "StridedSlice"
  input: "conv2d_transpose_4/Shape"
  input: "conv2d_transpose_4/strided_slice_1/stack"
  input: "conv2d_transpose_4/strided_slice_1/stack_1"
  input: "conv2d_transpose_4/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2d_transpose_4/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/strided_slice_2"
  op: "StridedSlice"
  input: "conv2d_transpose_4/Shape"
  input: "conv2d_transpose_4/strided_slice_2/stack"
  input: "conv2d_transpose_4/strided_slice_2/stack_1"
  input: "conv2d_transpose_4/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2d_transpose_4/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/mul"
  op: "Mul"
  input: "conv2d_transpose_4/strided_slice_1"
  input: "conv2d_transpose_4/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_transpose_4/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/mul_1"
  op: "Mul"
  input: "conv2d_transpose_4/strided_slice_2"
  input: "conv2d_transpose_4/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_transpose_4/stack/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/stack"
  op: "Pack"
  input: "conv2d_transpose_4/strided_slice"
  input: "conv2d_transpose_4/mul"
  input: "conv2d_transpose_4/mul_1"
  input: "conv2d_transpose_4/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_transpose_4/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2d_transpose_4/strided_slice_3"
  op: "StridedSlice"
  input: "conv2d_transpose_4/stack"
  input: "conv2d_transpose_4/strided_slice_3/stack"
  input: "conv2d_transpose_4/strided_slice_3/stack_1"
  input: "conv2d_transpose_4/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2d_transpose_4/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "conv2d_transpose_4/stack"
  input: "conv2d_transpose_4/kernel/read"
  input: "add_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_transpose_4/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_transpose_4/conv2d_transpose"
  input: "conv2d_transpose_4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_transpose_4/Sigmoid"
  op: "Sigmoid"
  input: "conv2d_transpose_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "conv1/kernel"
  input: "Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_1"
  op: "Assign"
  input: "conv1_bn/gamma"
  input: "Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_2"
  op: "Assign"
  input: "conv1_bn/beta"
  input: "Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_3"
  op: "Assign"
  input: "conv1_bn/moving_mean"
  input: "Placeholder_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_4"
  op: "Assign"
  input: "conv1_bn/moving_variance"
  input: "Placeholder_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_5"
  op: "Assign"
  input: "conv_dw_1/depthwise_kernel"
  input: "Placeholder_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_6"
  op: "Assign"
  input: "conv_dw_1_bn/gamma"
  input: "Placeholder_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_7"
  op: "Assign"
  input: "conv_dw_1_bn/beta"
  input: "Placeholder_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_8"
  op: "Assign"
  input: "conv_dw_1_bn/moving_mean"
  input: "Placeholder_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_9"
  op: "Assign"
  input: "conv_dw_1_bn/moving_variance"
  input: "Placeholder_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_10"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_10"
  op: "Assign"
  input: "conv_pw_1/kernel"
  input: "Placeholder_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_11"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_11"
  op: "Assign"
  input: "conv_pw_1_bn/gamma"
  input: "Placeholder_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_12"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_12"
  op: "Assign"
  input: "conv_pw_1_bn/beta"
  input: "Placeholder_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_13"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_13"
  op: "Assign"
  input: "conv_pw_1_bn/moving_mean"
  input: "Placeholder_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_14"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_14"
  op: "Assign"
  input: "conv_pw_1_bn/moving_variance"
  input: "Placeholder_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_15"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_15"
  op: "Assign"
  input: "conv_dw_2/depthwise_kernel"
  input: "Placeholder_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_16"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_16"
  op: "Assign"
  input: "conv_dw_2_bn/gamma"
  input: "Placeholder_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_17"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_17"
  op: "Assign"
  input: "conv_dw_2_bn/beta"
  input: "Placeholder_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_18"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_18"
  op: "Assign"
  input: "conv_dw_2_bn/moving_mean"
  input: "Placeholder_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_19"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_19"
  op: "Assign"
  input: "conv_dw_2_bn/moving_variance"
  input: "Placeholder_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_20"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_20"
  op: "Assign"
  input: "conv_pw_2/kernel"
  input: "Placeholder_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_21"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_21"
  op: "Assign"
  input: "conv_pw_2_bn/gamma"
  input: "Placeholder_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_22"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_22"
  op: "Assign"
  input: "conv_pw_2_bn/beta"
  input: "Placeholder_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_23"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_23"
  op: "Assign"
  input: "conv_pw_2_bn/moving_mean"
  input: "Placeholder_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_24"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_24"
  op: "Assign"
  input: "conv_pw_2_bn/moving_variance"
  input: "Placeholder_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_25"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_25"
  op: "Assign"
  input: "conv_dw_3/depthwise_kernel"
  input: "Placeholder_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_26"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_26"
  op: "Assign"
  input: "conv_dw_3_bn/gamma"
  input: "Placeholder_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_27"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_27"
  op: "Assign"
  input: "conv_dw_3_bn/beta"
  input: "Placeholder_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_28"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_28"
  op: "Assign"
  input: "conv_dw_3_bn/moving_mean"
  input: "Placeholder_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_29"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_29"
  op: "Assign"
  input: "conv_dw_3_bn/moving_variance"
  input: "Placeholder_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_30"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_30"
  op: "Assign"
  input: "conv_pw_3/kernel"
  input: "Placeholder_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_31"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_31"
  op: "Assign"
  input: "conv_pw_3_bn/gamma"
  input: "Placeholder_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_32"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_32"
  op: "Assign"
  input: "conv_pw_3_bn/beta"
  input: "Placeholder_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_33"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_33"
  op: "Assign"
  input: "conv_pw_3_bn/moving_mean"
  input: "Placeholder_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_34"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_34"
  op: "Assign"
  input: "conv_pw_3_bn/moving_variance"
  input: "Placeholder_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_35"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_35"
  op: "Assign"
  input: "conv_dw_4/depthwise_kernel"
  input: "Placeholder_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_36"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_36"
  op: "Assign"
  input: "conv_dw_4_bn/gamma"
  input: "Placeholder_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_37"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_37"
  op: "Assign"
  input: "conv_dw_4_bn/beta"
  input: "Placeholder_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_38"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_38"
  op: "Assign"
  input: "conv_dw_4_bn/moving_mean"
  input: "Placeholder_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_39"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_39"
  op: "Assign"
  input: "conv_dw_4_bn/moving_variance"
  input: "Placeholder_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_40"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_40"
  op: "Assign"
  input: "conv_pw_4/kernel"
  input: "Placeholder_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_41"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_41"
  op: "Assign"
  input: "conv_pw_4_bn/gamma"
  input: "Placeholder_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_42"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_42"
  op: "Assign"
  input: "conv_pw_4_bn/beta"
  input: "Placeholder_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_43"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_43"
  op: "Assign"
  input: "conv_pw_4_bn/moving_mean"
  input: "Placeholder_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_44"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_44"
  op: "Assign"
  input: "conv_pw_4_bn/moving_variance"
  input: "Placeholder_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_45"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_45"
  op: "Assign"
  input: "conv_dw_5/depthwise_kernel"
  input: "Placeholder_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_46"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_46"
  op: "Assign"
  input: "conv_dw_5_bn/gamma"
  input: "Placeholder_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_47"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_47"
  op: "Assign"
  input: "conv_dw_5_bn/beta"
  input: "Placeholder_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_48"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_48"
  op: "Assign"
  input: "conv_dw_5_bn/moving_mean"
  input: "Placeholder_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_49"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_49"
  op: "Assign"
  input: "conv_dw_5_bn/moving_variance"
  input: "Placeholder_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_50"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_50"
  op: "Assign"
  input: "conv_pw_5/kernel"
  input: "Placeholder_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_51"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_51"
  op: "Assign"
  input: "conv_pw_5_bn/gamma"
  input: "Placeholder_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_52"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_52"
  op: "Assign"
  input: "conv_pw_5_bn/beta"
  input: "Placeholder_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_53"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_53"
  op: "Assign"
  input: "conv_pw_5_bn/moving_mean"
  input: "Placeholder_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_54"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_54"
  op: "Assign"
  input: "conv_pw_5_bn/moving_variance"
  input: "Placeholder_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_55"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_55"
  op: "Assign"
  input: "conv_dw_6/depthwise_kernel"
  input: "Placeholder_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_56"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_56"
  op: "Assign"
  input: "conv_dw_6_bn/gamma"
  input: "Placeholder_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_57"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_57"
  op: "Assign"
  input: "conv_dw_6_bn/beta"
  input: "Placeholder_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_58"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_58"
  op: "Assign"
  input: "conv_dw_6_bn/moving_mean"
  input: "Placeholder_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_59"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_59"
  op: "Assign"
  input: "conv_dw_6_bn/moving_variance"
  input: "Placeholder_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_60"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_60"
  op: "Assign"
  input: "conv_pw_6/kernel"
  input: "Placeholder_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_61"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_61"
  op: "Assign"
  input: "conv_pw_6_bn/gamma"
  input: "Placeholder_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_62"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_62"
  op: "Assign"
  input: "conv_pw_6_bn/beta"
  input: "Placeholder_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_63"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_63"
  op: "Assign"
  input: "conv_pw_6_bn/moving_mean"
  input: "Placeholder_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_64"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_64"
  op: "Assign"
  input: "conv_pw_6_bn/moving_variance"
  input: "Placeholder_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_65"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_65"
  op: "Assign"
  input: "conv_dw_7/depthwise_kernel"
  input: "Placeholder_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_66"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_66"
  op: "Assign"
  input: "conv_dw_7_bn/gamma"
  input: "Placeholder_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_67"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_67"
  op: "Assign"
  input: "conv_dw_7_bn/beta"
  input: "Placeholder_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_68"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_68"
  op: "Assign"
  input: "conv_dw_7_bn/moving_mean"
  input: "Placeholder_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_69"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_69"
  op: "Assign"
  input: "conv_dw_7_bn/moving_variance"
  input: "Placeholder_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_70"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_70"
  op: "Assign"
  input: "conv_pw_7/kernel"
  input: "Placeholder_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_71"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_71"
  op: "Assign"
  input: "conv_pw_7_bn/gamma"
  input: "Placeholder_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_72"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_72"
  op: "Assign"
  input: "conv_pw_7_bn/beta"
  input: "Placeholder_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_73"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_73"
  op: "Assign"
  input: "conv_pw_7_bn/moving_mean"
  input: "Placeholder_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_74"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_74"
  op: "Assign"
  input: "conv_pw_7_bn/moving_variance"
  input: "Placeholder_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_75"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_75"
  op: "Assign"
  input: "conv_dw_8/depthwise_kernel"
  input: "Placeholder_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_76"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_76"
  op: "Assign"
  input: "conv_dw_8_bn/gamma"
  input: "Placeholder_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_77"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_77"
  op: "Assign"
  input: "conv_dw_8_bn/beta"
  input: "Placeholder_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_78"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_78"
  op: "Assign"
  input: "conv_dw_8_bn/moving_mean"
  input: "Placeholder_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_79"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_79"
  op: "Assign"
  input: "conv_dw_8_bn/moving_variance"
  input: "Placeholder_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_80"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_80"
  op: "Assign"
  input: "conv_pw_8/kernel"
  input: "Placeholder_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_81"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_81"
  op: "Assign"
  input: "conv_pw_8_bn/gamma"
  input: "Placeholder_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_82"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_82"
  op: "Assign"
  input: "conv_pw_8_bn/beta"
  input: "Placeholder_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_83"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_83"
  op: "Assign"
  input: "conv_pw_8_bn/moving_mean"
  input: "Placeholder_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_84"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_84"
  op: "Assign"
  input: "conv_pw_8_bn/moving_variance"
  input: "Placeholder_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_85"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_85"
  op: "Assign"
  input: "conv_dw_9/depthwise_kernel"
  input: "Placeholder_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_86"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_86"
  op: "Assign"
  input: "conv_dw_9_bn/gamma"
  input: "Placeholder_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_87"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_87"
  op: "Assign"
  input: "conv_dw_9_bn/beta"
  input: "Placeholder_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_88"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_88"
  op: "Assign"
  input: "conv_dw_9_bn/moving_mean"
  input: "Placeholder_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_89"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_89"
  op: "Assign"
  input: "conv_dw_9_bn/moving_variance"
  input: "Placeholder_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_90"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_90"
  op: "Assign"
  input: "conv_pw_9/kernel"
  input: "Placeholder_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_91"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_91"
  op: "Assign"
  input: "conv_pw_9_bn/gamma"
  input: "Placeholder_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_92"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_92"
  op: "Assign"
  input: "conv_pw_9_bn/beta"
  input: "Placeholder_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_93"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_93"
  op: "Assign"
  input: "conv_pw_9_bn/moving_mean"
  input: "Placeholder_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_94"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_94"
  op: "Assign"
  input: "conv_pw_9_bn/moving_variance"
  input: "Placeholder_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_95"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_95"
  op: "Assign"
  input: "conv_dw_10/depthwise_kernel"
  input: "Placeholder_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_96"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_96"
  op: "Assign"
  input: "conv_dw_10_bn/gamma"
  input: "Placeholder_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_97"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_97"
  op: "Assign"
  input: "conv_dw_10_bn/beta"
  input: "Placeholder_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_98"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_98"
  op: "Assign"
  input: "conv_dw_10_bn/moving_mean"
  input: "Placeholder_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_99"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_99"
  op: "Assign"
  input: "conv_dw_10_bn/moving_variance"
  input: "Placeholder_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_100"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_100"
  op: "Assign"
  input: "conv_pw_10/kernel"
  input: "Placeholder_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_101"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_101"
  op: "Assign"
  input: "conv_pw_10_bn/gamma"
  input: "Placeholder_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_102"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_102"
  op: "Assign"
  input: "conv_pw_10_bn/beta"
  input: "Placeholder_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_103"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_103"
  op: "Assign"
  input: "conv_pw_10_bn/moving_mean"
  input: "Placeholder_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_104"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_104"
  op: "Assign"
  input: "conv_pw_10_bn/moving_variance"
  input: "Placeholder_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_105"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_105"
  op: "Assign"
  input: "conv_dw_11/depthwise_kernel"
  input: "Placeholder_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_106"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_106"
  op: "Assign"
  input: "conv_dw_11_bn/gamma"
  input: "Placeholder_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_107"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_107"
  op: "Assign"
  input: "conv_dw_11_bn/beta"
  input: "Placeholder_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_108"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_108"
  op: "Assign"
  input: "conv_dw_11_bn/moving_mean"
  input: "Placeholder_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_109"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_109"
  op: "Assign"
  input: "conv_dw_11_bn/moving_variance"
  input: "Placeholder_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_110"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_110"
  op: "Assign"
  input: "conv_pw_11/kernel"
  input: "Placeholder_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_111"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_111"
  op: "Assign"
  input: "conv_pw_11_bn/gamma"
  input: "Placeholder_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_112"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_112"
  op: "Assign"
  input: "conv_pw_11_bn/beta"
  input: "Placeholder_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_113"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_113"
  op: "Assign"
  input: "conv_pw_11_bn/moving_mean"
  input: "Placeholder_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_114"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_114"
  op: "Assign"
  input: "conv_pw_11_bn/moving_variance"
  input: "Placeholder_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_115"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_115"
  op: "Assign"
  input: "conv_dw_12/depthwise_kernel"
  input: "Placeholder_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_116"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_116"
  op: "Assign"
  input: "conv_dw_12_bn/gamma"
  input: "Placeholder_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_117"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_117"
  op: "Assign"
  input: "conv_dw_12_bn/beta"
  input: "Placeholder_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_118"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_118"
  op: "Assign"
  input: "conv_dw_12_bn/moving_mean"
  input: "Placeholder_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_119"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_119"
  op: "Assign"
  input: "conv_dw_12_bn/moving_variance"
  input: "Placeholder_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_120"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_120"
  op: "Assign"
  input: "conv_pw_12/kernel"
  input: "Placeholder_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_121"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_121"
  op: "Assign"
  input: "conv_pw_12_bn/gamma"
  input: "Placeholder_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_122"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_122"
  op: "Assign"
  input: "conv_pw_12_bn/beta"
  input: "Placeholder_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_123"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_123"
  op: "Assign"
  input: "conv_pw_12_bn/moving_mean"
  input: "Placeholder_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_124"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_124"
  op: "Assign"
  input: "conv_pw_12_bn/moving_variance"
  input: "Placeholder_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_125"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_125"
  op: "Assign"
  input: "conv_dw_13/depthwise_kernel"
  input: "Placeholder_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_126"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_126"
  op: "Assign"
  input: "conv_dw_13_bn/gamma"
  input: "Placeholder_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_127"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_127"
  op: "Assign"
  input: "conv_dw_13_bn/beta"
  input: "Placeholder_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_128"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_128"
  op: "Assign"
  input: "conv_dw_13_bn/moving_mean"
  input: "Placeholder_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_129"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_129"
  op: "Assign"
  input: "conv_dw_13_bn/moving_variance"
  input: "Placeholder_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_130"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_130"
  op: "Assign"
  input: "conv_pw_13/kernel"
  input: "Placeholder_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_131"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_131"
  op: "Assign"
  input: "conv_pw_13_bn/gamma"
  input: "Placeholder_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_132"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_132"
  op: "Assign"
  input: "conv_pw_13_bn/beta"
  input: "Placeholder_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_133"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_133"
  op: "Assign"
  input: "conv_pw_13_bn/moving_mean"
  input: "Placeholder_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_134"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_134"
  op: "Assign"
  input: "conv_pw_13_bn/moving_variance"
  input: "Placeholder_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_135"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Assign_135"
  op: "Assign"
  input: "conv2d_1/kernel"
  input: "Placeholder_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_136"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Assign_136"
  op: "Assign"
  input: "conv2d_1/bias"
  input: "Placeholder_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_137"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 256
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Assign_137"
  op: "Assign"
  input: "conv2d_transpose_1/kernel"
  input: "Placeholder_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_138"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_138"
  op: "Assign"
  input: "conv2d_transpose_1/bias"
  input: "Placeholder_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_139"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_139"
  op: "Assign"
  input: "conv2d_transpose_2/kernel"
  input: "Placeholder_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_140"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_140"
  op: "Assign"
  input: "conv2d_transpose_2/bias"
  input: "Placeholder_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_141"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_141"
  op: "Assign"
  input: "conv2d_transpose_3/kernel"
  input: "Placeholder_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_142"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_142"
  op: "Assign"
  input: "conv2d_transpose_3/bias"
  input: "Placeholder_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_143"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 2
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_143"
  op: "Assign"
  input: "conv2d_transpose_4/kernel"
  input: "Placeholder_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_144"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Assign_144"
  op: "Assign"
  input: "conv2d_transpose_4/bias"
  input: "Placeholder_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv1_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv1_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "conv1_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "conv1_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "conv_dw_1/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "conv_dw_1_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "conv_dw_1_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "conv_dw_1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "conv_dw_1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "conv_dw_1_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "conv_dw_1_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "conv_dw_1_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "conv_dw_1_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "conv_pw_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "conv_pw_1_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "conv_pw_1_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "conv_pw_1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "conv_pw_1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "conv_pw_1_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "conv_pw_1_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "conv_pw_1_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "conv_pw_1_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "conv_dw_2/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "conv_dw_2_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "conv_dw_2_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "conv_dw_2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "conv_dw_2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "conv_dw_2_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "conv_dw_2_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "conv_dw_2_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "conv_dw_2_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "conv_pw_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "conv_pw_2_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "conv_pw_2_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "conv_pw_2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "conv_pw_2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "conv_pw_2_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "conv_pw_2_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "conv_pw_2_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "conv_pw_2_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "conv_dw_3/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "conv_dw_3_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "conv_dw_3_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "conv_dw_3_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "conv_dw_3_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "conv_dw_3_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "conv_dw_3_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "conv_dw_3_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "conv_dw_3_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "conv_pw_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "conv_pw_3_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "conv_pw_3_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "conv_pw_3_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "conv_pw_3_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "conv_pw_3_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "conv_pw_3_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "conv_pw_3_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "conv_pw_3_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "conv_dw_4/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "conv_dw_4_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "conv_dw_4_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "conv_dw_4_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "conv_dw_4_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "conv_dw_4_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "conv_dw_4_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "conv_dw_4_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "conv_dw_4_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "conv_pw_4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "conv_pw_4_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "conv_pw_4_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "conv_pw_4_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "conv_pw_4_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "conv_pw_4_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "conv_pw_4_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "conv_pw_4_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "conv_pw_4_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "conv_dw_5/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "conv_dw_5_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "conv_dw_5_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "conv_dw_5_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "conv_dw_5_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "conv_dw_5_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "conv_dw_5_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "conv_dw_5_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "conv_dw_5_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "conv_pw_5/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "conv_pw_5_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "conv_pw_5_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "conv_pw_5_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "conv_pw_5_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "conv_pw_5_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "conv_pw_5_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "conv_pw_5_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "conv_pw_5_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "conv_dw_6/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "conv_dw_6_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "conv_dw_6_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "conv_dw_6_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "conv_dw_6_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "conv_dw_6_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "conv_dw_6_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "conv_dw_6_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "conv_dw_6_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "conv_pw_6/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "conv_pw_6_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "conv_pw_6_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "conv_pw_6_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "conv_pw_6_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "conv_pw_6_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "conv_pw_6_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "conv_pw_6_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "conv_pw_6_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "conv_dw_7/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "conv_dw_7_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "conv_dw_7_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "conv_dw_7_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "conv_dw_7_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "conv_dw_7_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "conv_dw_7_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "conv_dw_7_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "conv_dw_7_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "conv_pw_7/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "conv_pw_7_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "conv_pw_7_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "conv_pw_7_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "conv_pw_7_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "conv_pw_7_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "conv_pw_7_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "conv_pw_7_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "conv_pw_7_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "conv_dw_8/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "conv_dw_8_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "conv_dw_8_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_133"
  op: "IsVariableInitialized"
  input: "conv_dw_8_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_134"
  op: "IsVariableInitialized"
  input: "conv_dw_8_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_135"
  op: "IsVariableInitialized"
  input: "conv_dw_8_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_136"
  op: "IsVariableInitialized"
  input: "conv_dw_8_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_137"
  op: "IsVariableInitialized"
  input: "conv_dw_8_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_138"
  op: "IsVariableInitialized"
  input: "conv_dw_8_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_139"
  op: "IsVariableInitialized"
  input: "conv_pw_8/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_140"
  op: "IsVariableInitialized"
  input: "conv_pw_8_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_141"
  op: "IsVariableInitialized"
  input: "conv_pw_8_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_142"
  op: "IsVariableInitialized"
  input: "conv_pw_8_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_143"
  op: "IsVariableInitialized"
  input: "conv_pw_8_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_144"
  op: "IsVariableInitialized"
  input: "conv_pw_8_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_145"
  op: "IsVariableInitialized"
  input: "conv_pw_8_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_146"
  op: "IsVariableInitialized"
  input: "conv_pw_8_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_147"
  op: "IsVariableInitialized"
  input: "conv_pw_8_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_148"
  op: "IsVariableInitialized"
  input: "conv_dw_9/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_149"
  op: "IsVariableInitialized"
  input: "conv_dw_9_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_150"
  op: "IsVariableInitialized"
  input: "conv_dw_9_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_151"
  op: "IsVariableInitialized"
  input: "conv_dw_9_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_152"
  op: "IsVariableInitialized"
  input: "conv_dw_9_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_153"
  op: "IsVariableInitialized"
  input: "conv_dw_9_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_154"
  op: "IsVariableInitialized"
  input: "conv_dw_9_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_155"
  op: "IsVariableInitialized"
  input: "conv_dw_9_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_156"
  op: "IsVariableInitialized"
  input: "conv_dw_9_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_157"
  op: "IsVariableInitialized"
  input: "conv_pw_9/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_158"
  op: "IsVariableInitialized"
  input: "conv_pw_9_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_159"
  op: "IsVariableInitialized"
  input: "conv_pw_9_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_160"
  op: "IsVariableInitialized"
  input: "conv_pw_9_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_161"
  op: "IsVariableInitialized"
  input: "conv_pw_9_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_162"
  op: "IsVariableInitialized"
  input: "conv_pw_9_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_163"
  op: "IsVariableInitialized"
  input: "conv_pw_9_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_164"
  op: "IsVariableInitialized"
  input: "conv_pw_9_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_165"
  op: "IsVariableInitialized"
  input: "conv_pw_9_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_166"
  op: "IsVariableInitialized"
  input: "conv_dw_10/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_167"
  op: "IsVariableInitialized"
  input: "conv_dw_10_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_168"
  op: "IsVariableInitialized"
  input: "conv_dw_10_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_169"
  op: "IsVariableInitialized"
  input: "conv_dw_10_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_170"
  op: "IsVariableInitialized"
  input: "conv_dw_10_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_171"
  op: "IsVariableInitialized"
  input: "conv_dw_10_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_172"
  op: "IsVariableInitialized"
  input: "conv_dw_10_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_173"
  op: "IsVariableInitialized"
  input: "conv_dw_10_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_174"
  op: "IsVariableInitialized"
  input: "conv_dw_10_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_175"
  op: "IsVariableInitialized"
  input: "conv_pw_10/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_176"
  op: "IsVariableInitialized"
  input: "conv_pw_10_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_177"
  op: "IsVariableInitialized"
  input: "conv_pw_10_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_178"
  op: "IsVariableInitialized"
  input: "conv_pw_10_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_179"
  op: "IsVariableInitialized"
  input: "conv_pw_10_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_180"
  op: "IsVariableInitialized"
  input: "conv_pw_10_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_181"
  op: "IsVariableInitialized"
  input: "conv_pw_10_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_182"
  op: "IsVariableInitialized"
  input: "conv_pw_10_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_183"
  op: "IsVariableInitialized"
  input: "conv_pw_10_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_184"
  op: "IsVariableInitialized"
  input: "conv_dw_11/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_185"
  op: "IsVariableInitialized"
  input: "conv_dw_11_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_186"
  op: "IsVariableInitialized"
  input: "conv_dw_11_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_187"
  op: "IsVariableInitialized"
  input: "conv_dw_11_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_188"
  op: "IsVariableInitialized"
  input: "conv_dw_11_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_189"
  op: "IsVariableInitialized"
  input: "conv_dw_11_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_190"
  op: "IsVariableInitialized"
  input: "conv_dw_11_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_191"
  op: "IsVariableInitialized"
  input: "conv_dw_11_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_192"
  op: "IsVariableInitialized"
  input: "conv_dw_11_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_193"
  op: "IsVariableInitialized"
  input: "conv_pw_11/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_194"
  op: "IsVariableInitialized"
  input: "conv_pw_11_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_195"
  op: "IsVariableInitialized"
  input: "conv_pw_11_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_196"
  op: "IsVariableInitialized"
  input: "conv_pw_11_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_197"
  op: "IsVariableInitialized"
  input: "conv_pw_11_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_198"
  op: "IsVariableInitialized"
  input: "conv_pw_11_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_199"
  op: "IsVariableInitialized"
  input: "conv_pw_11_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_200"
  op: "IsVariableInitialized"
  input: "conv_pw_11_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_201"
  op: "IsVariableInitialized"
  input: "conv_pw_11_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_202"
  op: "IsVariableInitialized"
  input: "conv_dw_12/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_203"
  op: "IsVariableInitialized"
  input: "conv_dw_12_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_204"
  op: "IsVariableInitialized"
  input: "conv_dw_12_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_205"
  op: "IsVariableInitialized"
  input: "conv_dw_12_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_206"
  op: "IsVariableInitialized"
  input: "conv_dw_12_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_207"
  op: "IsVariableInitialized"
  input: "conv_dw_12_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_208"
  op: "IsVariableInitialized"
  input: "conv_dw_12_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_209"
  op: "IsVariableInitialized"
  input: "conv_dw_12_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_210"
  op: "IsVariableInitialized"
  input: "conv_dw_12_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_211"
  op: "IsVariableInitialized"
  input: "conv_pw_12/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_212"
  op: "IsVariableInitialized"
  input: "conv_pw_12_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_213"
  op: "IsVariableInitialized"
  input: "conv_pw_12_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_214"
  op: "IsVariableInitialized"
  input: "conv_pw_12_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_215"
  op: "IsVariableInitialized"
  input: "conv_pw_12_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_216"
  op: "IsVariableInitialized"
  input: "conv_pw_12_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_217"
  op: "IsVariableInitialized"
  input: "conv_pw_12_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_218"
  op: "IsVariableInitialized"
  input: "conv_pw_12_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_219"
  op: "IsVariableInitialized"
  input: "conv_pw_12_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_220"
  op: "IsVariableInitialized"
  input: "conv_dw_13/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_221"
  op: "IsVariableInitialized"
  input: "conv_dw_13_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_222"
  op: "IsVariableInitialized"
  input: "conv_dw_13_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_223"
  op: "IsVariableInitialized"
  input: "conv_dw_13_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_224"
  op: "IsVariableInitialized"
  input: "conv_dw_13_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_225"
  op: "IsVariableInitialized"
  input: "conv_dw_13_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_226"
  op: "IsVariableInitialized"
  input: "conv_dw_13_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_227"
  op: "IsVariableInitialized"
  input: "conv_dw_13_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_228"
  op: "IsVariableInitialized"
  input: "conv_dw_13_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_229"
  op: "IsVariableInitialized"
  input: "conv_pw_13/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_230"
  op: "IsVariableInitialized"
  input: "conv_pw_13_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_231"
  op: "IsVariableInitialized"
  input: "conv_pw_13_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_232"
  op: "IsVariableInitialized"
  input: "conv_pw_13_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_233"
  op: "IsVariableInitialized"
  input: "conv_pw_13_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_234"
  op: "IsVariableInitialized"
  input: "conv_pw_13_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_235"
  op: "IsVariableInitialized"
  input: "conv_pw_13_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_236"
  op: "IsVariableInitialized"
  input: "conv_pw_13_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_237"
  op: "IsVariableInitialized"
  input: "conv_pw_13_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_238"
  op: "IsVariableInitialized"
  input: "conv2d_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_239"
  op: "IsVariableInitialized"
  input: "conv2d_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_240"
  op: "IsVariableInitialized"
  input: "conv2d_transpose_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_241"
  op: "IsVariableInitialized"
  input: "conv2d_transpose_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_242"
  op: "IsVariableInitialized"
  input: "conv2d_transpose_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_243"
  op: "IsVariableInitialized"
  input: "conv2d_transpose_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_244"
  op: "IsVariableInitialized"
  input: "conv2d_transpose_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_245"
  op: "IsVariableInitialized"
  input: "conv2d_transpose_3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_246"
  op: "IsVariableInitialized"
  input: "conv2d_transpose_4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_247"
  op: "IsVariableInitialized"
  input: "conv2d_transpose_4/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_transpose_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^conv1_bn/moving_mean/biased/Assign"
  input: "^conv1_bn/moving_mean/local_step/Assign"
  input: "^conv1_bn/moving_variance/biased/Assign"
  input: "^conv1_bn/moving_variance/local_step/Assign"
  input: "^conv2d_1/bias/Assign"
  input: "^conv2d_1/kernel/Assign"
  input: "^conv2d_transpose_1/bias/Assign"
  input: "^conv2d_transpose_1/kernel/Assign"
  input: "^conv2d_transpose_2/bias/Assign"
  input: "^conv2d_transpose_2/kernel/Assign"
  input: "^conv2d_transpose_3/bias/Assign"
  input: "^conv2d_transpose_3/kernel/Assign"
  input: "^conv2d_transpose_4/bias/Assign"
  input: "^conv2d_transpose_4/kernel/Assign"
  input: "^conv_dw_1/depthwise_kernel/Assign"
  input: "^conv_dw_10/depthwise_kernel/Assign"
  input: "^conv_dw_10_bn/beta/Assign"
  input: "^conv_dw_10_bn/gamma/Assign"
  input: "^conv_dw_10_bn/moving_mean/Assign"
  input: "^conv_dw_10_bn/moving_mean/biased/Assign"
  input: "^conv_dw_10_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_10_bn/moving_variance/Assign"
  input: "^conv_dw_10_bn/moving_variance/biased/Assign"
  input: "^conv_dw_10_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_11/depthwise_kernel/Assign"
  input: "^conv_dw_11_bn/beta/Assign"
  input: "^conv_dw_11_bn/gamma/Assign"
  input: "^conv_dw_11_bn/moving_mean/Assign"
  input: "^conv_dw_11_bn/moving_mean/biased/Assign"
  input: "^conv_dw_11_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_11_bn/moving_variance/Assign"
  input: "^conv_dw_11_bn/moving_variance/biased/Assign"
  input: "^conv_dw_11_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_12/depthwise_kernel/Assign"
  input: "^conv_dw_12_bn/beta/Assign"
  input: "^conv_dw_12_bn/gamma/Assign"
  input: "^conv_dw_12_bn/moving_mean/Assign"
  input: "^conv_dw_12_bn/moving_mean/biased/Assign"
  input: "^conv_dw_12_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_12_bn/moving_variance/Assign"
  input: "^conv_dw_12_bn/moving_variance/biased/Assign"
  input: "^conv_dw_12_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_13/depthwise_kernel/Assign"
  input: "^conv_dw_13_bn/beta/Assign"
  input: "^conv_dw_13_bn/gamma/Assign"
  input: "^conv_dw_13_bn/moving_mean/Assign"
  input: "^conv_dw_13_bn/moving_mean/biased/Assign"
  input: "^conv_dw_13_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_13_bn/moving_variance/Assign"
  input: "^conv_dw_13_bn/moving_variance/biased/Assign"
  input: "^conv_dw_13_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_1_bn/beta/Assign"
  input: "^conv_dw_1_bn/gamma/Assign"
  input: "^conv_dw_1_bn/moving_mean/Assign"
  input: "^conv_dw_1_bn/moving_mean/biased/Assign"
  input: "^conv_dw_1_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_1_bn/moving_variance/Assign"
  input: "^conv_dw_1_bn/moving_variance/biased/Assign"
  input: "^conv_dw_1_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_2/depthwise_kernel/Assign"
  input: "^conv_dw_2_bn/beta/Assign"
  input: "^conv_dw_2_bn/gamma/Assign"
  input: "^conv_dw_2_bn/moving_mean/Assign"
  input: "^conv_dw_2_bn/moving_mean/biased/Assign"
  input: "^conv_dw_2_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_2_bn/moving_variance/Assign"
  input: "^conv_dw_2_bn/moving_variance/biased/Assign"
  input: "^conv_dw_2_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_3/depthwise_kernel/Assign"
  input: "^conv_dw_3_bn/beta/Assign"
  input: "^conv_dw_3_bn/gamma/Assign"
  input: "^conv_dw_3_bn/moving_mean/Assign"
  input: "^conv_dw_3_bn/moving_mean/biased/Assign"
  input: "^conv_dw_3_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_3_bn/moving_variance/Assign"
  input: "^conv_dw_3_bn/moving_variance/biased/Assign"
  input: "^conv_dw_3_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_4/depthwise_kernel/Assign"
  input: "^conv_dw_4_bn/beta/Assign"
  input: "^conv_dw_4_bn/gamma/Assign"
  input: "^conv_dw_4_bn/moving_mean/Assign"
  input: "^conv_dw_4_bn/moving_mean/biased/Assign"
  input: "^conv_dw_4_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_4_bn/moving_variance/Assign"
  input: "^conv_dw_4_bn/moving_variance/biased/Assign"
  input: "^conv_dw_4_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_5/depthwise_kernel/Assign"
  input: "^conv_dw_5_bn/beta/Assign"
  input: "^conv_dw_5_bn/gamma/Assign"
  input: "^conv_dw_5_bn/moving_mean/Assign"
  input: "^conv_dw_5_bn/moving_mean/biased/Assign"
  input: "^conv_dw_5_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_5_bn/moving_variance/Assign"
  input: "^conv_dw_5_bn/moving_variance/biased/Assign"
  input: "^conv_dw_5_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_6/depthwise_kernel/Assign"
  input: "^conv_dw_6_bn/beta/Assign"
  input: "^conv_dw_6_bn/gamma/Assign"
  input: "^conv_dw_6_bn/moving_mean/Assign"
  input: "^conv_dw_6_bn/moving_mean/biased/Assign"
  input: "^conv_dw_6_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_6_bn/moving_variance/Assign"
  input: "^conv_dw_6_bn/moving_variance/biased/Assign"
  input: "^conv_dw_6_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_7/depthwise_kernel/Assign"
  input: "^conv_dw_7_bn/beta/Assign"
  input: "^conv_dw_7_bn/gamma/Assign"
  input: "^conv_dw_7_bn/moving_mean/Assign"
  input: "^conv_dw_7_bn/moving_mean/biased/Assign"
  input: "^conv_dw_7_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_7_bn/moving_variance/Assign"
  input: "^conv_dw_7_bn/moving_variance/biased/Assign"
  input: "^conv_dw_7_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_8/depthwise_kernel/Assign"
  input: "^conv_dw_8_bn/beta/Assign"
  input: "^conv_dw_8_bn/gamma/Assign"
  input: "^conv_dw_8_bn/moving_mean/Assign"
  input: "^conv_dw_8_bn/moving_mean/biased/Assign"
  input: "^conv_dw_8_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_8_bn/moving_variance/Assign"
  input: "^conv_dw_8_bn/moving_variance/biased/Assign"
  input: "^conv_dw_8_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_9/depthwise_kernel/Assign"
  input: "^conv_dw_9_bn/beta/Assign"
  input: "^conv_dw_9_bn/gamma/Assign"
  input: "^conv_dw_9_bn/moving_mean/Assign"
  input: "^conv_dw_9_bn/moving_mean/biased/Assign"
  input: "^conv_dw_9_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_9_bn/moving_variance/Assign"
  input: "^conv_dw_9_bn/moving_variance/biased/Assign"
  input: "^conv_dw_9_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_1/kernel/Assign"
  input: "^conv_pw_10/kernel/Assign"
  input: "^conv_pw_10_bn/beta/Assign"
  input: "^conv_pw_10_bn/gamma/Assign"
  input: "^conv_pw_10_bn/moving_mean/Assign"
  input: "^conv_pw_10_bn/moving_mean/biased/Assign"
  input: "^conv_pw_10_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_10_bn/moving_variance/Assign"
  input: "^conv_pw_10_bn/moving_variance/biased/Assign"
  input: "^conv_pw_10_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_11/kernel/Assign"
  input: "^conv_pw_11_bn/beta/Assign"
  input: "^conv_pw_11_bn/gamma/Assign"
  input: "^conv_pw_11_bn/moving_mean/Assign"
  input: "^conv_pw_11_bn/moving_mean/biased/Assign"
  input: "^conv_pw_11_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_11_bn/moving_variance/Assign"
  input: "^conv_pw_11_bn/moving_variance/biased/Assign"
  input: "^conv_pw_11_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_12/kernel/Assign"
  input: "^conv_pw_12_bn/beta/Assign"
  input: "^conv_pw_12_bn/gamma/Assign"
  input: "^conv_pw_12_bn/moving_mean/Assign"
  input: "^conv_pw_12_bn/moving_mean/biased/Assign"
  input: "^conv_pw_12_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_12_bn/moving_variance/Assign"
  input: "^conv_pw_12_bn/moving_variance/biased/Assign"
  input: "^conv_pw_12_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_13/kernel/Assign"
  input: "^conv_pw_13_bn/beta/Assign"
  input: "^conv_pw_13_bn/gamma/Assign"
  input: "^conv_pw_13_bn/moving_mean/Assign"
  input: "^conv_pw_13_bn/moving_mean/biased/Assign"
  input: "^conv_pw_13_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_13_bn/moving_variance/Assign"
  input: "^conv_pw_13_bn/moving_variance/biased/Assign"
  input: "^conv_pw_13_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_1_bn/beta/Assign"
  input: "^conv_pw_1_bn/gamma/Assign"
  input: "^conv_pw_1_bn/moving_mean/Assign"
  input: "^conv_pw_1_bn/moving_mean/biased/Assign"
  input: "^conv_pw_1_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_1_bn/moving_variance/Assign"
  input: "^conv_pw_1_bn/moving_variance/biased/Assign"
  input: "^conv_pw_1_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_2/kernel/Assign"
  input: "^conv_pw_2_bn/beta/Assign"
  input: "^conv_pw_2_bn/gamma/Assign"
  input: "^conv_pw_2_bn/moving_mean/Assign"
  input: "^conv_pw_2_bn/moving_mean/biased/Assign"
  input: "^conv_pw_2_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_2_bn/moving_variance/Assign"
  input: "^conv_pw_2_bn/moving_variance/biased/Assign"
  input: "^conv_pw_2_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_3/kernel/Assign"
  input: "^conv_pw_3_bn/beta/Assign"
  input: "^conv_pw_3_bn/gamma/Assign"
  input: "^conv_pw_3_bn/moving_mean/Assign"
  input: "^conv_pw_3_bn/moving_mean/biased/Assign"
  input: "^conv_pw_3_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_3_bn/moving_variance/Assign"
  input: "^conv_pw_3_bn/moving_variance/biased/Assign"
  input: "^conv_pw_3_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_4/kernel/Assign"
  input: "^conv_pw_4_bn/beta/Assign"
  input: "^conv_pw_4_bn/gamma/Assign"
  input: "^conv_pw_4_bn/moving_mean/Assign"
  input: "^conv_pw_4_bn/moving_mean/biased/Assign"
  input: "^conv_pw_4_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_4_bn/moving_variance/Assign"
  input: "^conv_pw_4_bn/moving_variance/biased/Assign"
  input: "^conv_pw_4_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_5/kernel/Assign"
  input: "^conv_pw_5_bn/beta/Assign"
  input: "^conv_pw_5_bn/gamma/Assign"
  input: "^conv_pw_5_bn/moving_mean/Assign"
  input: "^conv_pw_5_bn/moving_mean/biased/Assign"
  input: "^conv_pw_5_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_5_bn/moving_variance/Assign"
  input: "^conv_pw_5_bn/moving_variance/biased/Assign"
  input: "^conv_pw_5_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_6/kernel/Assign"
  input: "^conv_pw_6_bn/beta/Assign"
  input: "^conv_pw_6_bn/gamma/Assign"
  input: "^conv_pw_6_bn/moving_mean/Assign"
  input: "^conv_pw_6_bn/moving_mean/biased/Assign"
  input: "^conv_pw_6_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_6_bn/moving_variance/Assign"
  input: "^conv_pw_6_bn/moving_variance/biased/Assign"
  input: "^conv_pw_6_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_7/kernel/Assign"
  input: "^conv_pw_7_bn/beta/Assign"
  input: "^conv_pw_7_bn/gamma/Assign"
  input: "^conv_pw_7_bn/moving_mean/Assign"
  input: "^conv_pw_7_bn/moving_mean/biased/Assign"
  input: "^conv_pw_7_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_7_bn/moving_variance/Assign"
  input: "^conv_pw_7_bn/moving_variance/biased/Assign"
  input: "^conv_pw_7_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_8/kernel/Assign"
  input: "^conv_pw_8_bn/beta/Assign"
  input: "^conv_pw_8_bn/gamma/Assign"
  input: "^conv_pw_8_bn/moving_mean/Assign"
  input: "^conv_pw_8_bn/moving_mean/biased/Assign"
  input: "^conv_pw_8_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_8_bn/moving_variance/Assign"
  input: "^conv_pw_8_bn/moving_variance/biased/Assign"
  input: "^conv_pw_8_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_9/kernel/Assign"
  input: "^conv_pw_9_bn/beta/Assign"
  input: "^conv_pw_9_bn/gamma/Assign"
  input: "^conv_pw_9_bn/moving_mean/Assign"
  input: "^conv_pw_9_bn/moving_mean/biased/Assign"
  input: "^conv_pw_9_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_9_bn/moving_variance/Assign"
  input: "^conv_pw_9_bn/moving_variance/biased/Assign"
  input: "^conv_pw_9_bn/moving_variance/local_step/Assign"
}
node {
  name: "output_node0"
  op: "Identity"
  input: "conv2d_transpose_4/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 26
}
